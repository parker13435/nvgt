// AngelScript 2.38.0 WIP
// Lib options  AS_64BIT_PTR AS_WIN AS_X64_MSVC 
// Engine properties
ep 0 0
ep 1 1
ep 2 1
ep 3 1
ep 4 0
ep 5 0
ep 6 0
ep 7 0
ep 8 0
ep 9 0
ep 10 0
ep 11 1
ep 12 0
ep 13 0
ep 14 3
ep 15 0
ep 16 1
ep 17 0
ep 18 0
ep 19 0
ep 20 0
ep 21 2
ep 22 0
ep 23 0
ep 24 0
ep 25 0
ep 26 1
ep 27 10000
ep 28 1
ep 29 4096
ep 30 10
ep 31 0
ep 32 0
ep 33 0
ep 34 0
ep 35 1
ep 36 0
ep 37 0

// Enums
access ffffffff
enum compression_method
enumval compression_method COMPRESSION_METHOD_ZLIB 0
enumval compression_method COMPRESSION_METHOD_GZIP 1
enum datastream_byte_order
enumval datastream_byte_order STREAM_BYTE_ORDER_NATIVE 1
enumval datastream_byte_order STREAM_BYTE_ORDER_BIG_ENDIAN 2
enumval datastream_byte_order STREAM_BYTE_ORDER_NETWORK 2
enumval datastream_byte_order STREAM_BYTE_ORDER_LITTLE_ENDIAN 3
enum key_modifier
enumval key_modifier KEYMOD_NONE 0
enumval key_modifier KEYMOD_LSHIFT 1
enumval key_modifier KEYMOD_RSHIFT 2
enumval key_modifier KEYMOD_LCTRL 64
enumval key_modifier KEYMOD_RCTRL 128
enumval key_modifier KEYMOD_LALT 256
enumval key_modifier KEYMOD_RALT 512
enumval key_modifier KEYMOD_LGUI 1024
enumval key_modifier KEYMOD_RGUI 2048
enumval key_modifier KEYMOD_NUM 4096
enumval key_modifier KEYMOD_CAPS 8192
enumval key_modifier KEYMOD_MODE 16384
enumval key_modifier KEYMOD_SCROLL 32768
enumval key_modifier KEYMOD_CTRL 192
enumval key_modifier KEYMOD_SHIFT 3
enumval key_modifier KEYMOD_ALT 768
enumval key_modifier KEYMOD_GUI 3072
enum key_code
enumval key_code KEY_UNKNOWN 0
enumval key_code KEY_A 4
enumval key_code KEY_B 5
enumval key_code KEY_C 6
enumval key_code KEY_D 7
enumval key_code KEY_E 8
enumval key_code KEY_F 9
enumval key_code KEY_G 10
enumval key_code KEY_H 11
enumval key_code KEY_I 12
enumval key_code KEY_J 13
enumval key_code KEY_K 14
enumval key_code KEY_L 15
enumval key_code KEY_M 16
enumval key_code KEY_N 17
enumval key_code KEY_O 18
enumval key_code KEY_P 19
enumval key_code KEY_Q 20
enumval key_code KEY_R 21
enumval key_code KEY_S 22
enumval key_code KEY_T 23
enumval key_code KEY_U 24
enumval key_code KEY_V 25
enumval key_code KEY_W 26
enumval key_code KEY_X 27
enumval key_code KEY_Y 28
enumval key_code KEY_Z 29
enumval key_code KEY_1 30
enumval key_code KEY_2 31
enumval key_code KEY_3 32
enumval key_code KEY_4 33
enumval key_code KEY_5 34
enumval key_code KEY_6 35
enumval key_code KEY_7 36
enumval key_code KEY_8 37
enumval key_code KEY_9 38
enumval key_code KEY_0 39
enumval key_code KEY_RETURN 40
enumval key_code KEY_ESCAPE 41
enumval key_code KEY_BACK 42
enumval key_code KEY_TAB 43
enumval key_code KEY_SPACE 44
enumval key_code KEY_MINUS 45
enumval key_code KEY_EQUALS 46
enumval key_code KEY_LEFTBRACKET 47
enumval key_code KEY_RIGHTBRACKET 48
enumval key_code KEY_BACKSLASH 49
enumval key_code KEY_NONUSHASH 50
enumval key_code KEY_SEMICOLON 51
enumval key_code KEY_APOSTROPHE 52
enumval key_code KEY_GRAVE 53
enumval key_code KEY_COMMA 54
enumval key_code KEY_PERIOD 55
enumval key_code KEY_SLASH 56
enumval key_code KEY_CAPSLOCK 57
enumval key_code KEY_F1 58
enumval key_code KEY_F2 59
enumval key_code KEY_F3 60
enumval key_code KEY_F4 61
enumval key_code KEY_F5 62
enumval key_code KEY_F6 63
enumval key_code KEY_F7 64
enumval key_code KEY_F8 65
enumval key_code KEY_F9 66
enumval key_code KEY_F10 67
enumval key_code KEY_F11 68
enumval key_code KEY_F12 69
enumval key_code KEY_PRINTSCREEN 70
enumval key_code KEY_SCROLLLOCK 71
enumval key_code KEY_PAUSE 72
enumval key_code KEY_INSERT 73
enumval key_code KEY_HOME 74
enumval key_code KEY_PAGEUP 75
enumval key_code KEY_DELETE 76
enumval key_code KEY_END 77
enumval key_code KEY_PAGEDOWN 78
enumval key_code KEY_RIGHT 79
enumval key_code KEY_LEFT 80
enumval key_code KEY_DOWN 81
enumval key_code KEY_UP 82
enumval key_code KEY_NUMLOCKCLEAR 83
enumval key_code KEY_NUMPAD_DIVIDE 84
enumval key_code KEY_NUMPAD_MULTIPLY 85
enumval key_code KEY_NUMPAD_MINUS 86
enumval key_code KEY_NUMPAD_PLUS 87
enumval key_code KEY_NUMPAD_ENTER 88
enumval key_code KEY_NUMPAD_1 89
enumval key_code KEY_NUMPAD_2 90
enumval key_code KEY_NUMPAD_3 91
enumval key_code KEY_NUMPAD_4 92
enumval key_code KEY_NUMPAD_5 93
enumval key_code KEY_NUMPAD_6 94
enumval key_code KEY_NUMPAD_7 95
enumval key_code KEY_NUMPAD_8 96
enumval key_code KEY_NUMPAD_9 97
enumval key_code KEY_NUMPAD_0 98
enumval key_code KEY_NUMPAD_PERIOD 99
enumval key_code KEY_NONUSBACKSLASH 100
enumval key_code KEY_APPLICATION 101
enumval key_code KEY_POWER 102
enumval key_code KEY_NUMPAD_EQUALS 103
enumval key_code KEY_F13 104
enumval key_code KEY_F14 105
enumval key_code KEY_F15 106
enumval key_code KEY_F16 107
enumval key_code KEY_F17 108
enumval key_code KEY_F18 109
enumval key_code KEY_F19 110
enumval key_code KEY_F20 111
enumval key_code KEY_F21 112
enumval key_code KEY_F22 113
enumval key_code KEY_F23 114
enumval key_code KEY_F24 115
enumval key_code KEY_EXECUTE 116
enumval key_code KEY_HELP 117
enumval key_code KEY_MENU 118
enumval key_code KEY_SELECT 119
enumval key_code KEY_STOP 120
enumval key_code KEY_AGAIN 121
enumval key_code KEY_UNDO 122
enumval key_code KEY_CUT 123
enumval key_code KEY_COPY 124
enumval key_code KEY_PASTE 125
enumval key_code KEY_FIND 126
enumval key_code KEY_MUTE 127
enumval key_code KEY_VOLUMEUP 128
enumval key_code KEY_VOLUMEDOWN 129
enumval key_code KEY_NUMPAD_COMMA 133
enumval key_code KEY_NUMPAD_EQUALSAS400 134
enumval key_code KEY_INTERNATIONAL1 135
enumval key_code KEY_INTERNATIONAL2 136
enumval key_code KEY_INTERNATIONAL3 137
enumval key_code KEY_INTERNATIONAL4 138
enumval key_code KEY_INTERNATIONAL5 139
enumval key_code KEY_INTERNATIONAL6 140
enumval key_code KEY_INTERNATIONAL7 141
enumval key_code KEY_INTERNATIONAL8 142
enumval key_code KEY_INTERNATIONAL9 143
enumval key_code KEY_LANG1 144
enumval key_code KEY_LANG2 145
enumval key_code KEY_LANG3 146
enumval key_code KEY_LANG4 147
enumval key_code KEY_LANG5 148
enumval key_code KEY_LANG6 149
enumval key_code KEY_LANG7 150
enumval key_code KEY_LANG8 151
enumval key_code KEY_LANG9 152
enumval key_code KEY_ALTERASE 153
enumval key_code KEY_SYSREQ 154
enumval key_code KEY_CANCEL 155
enumval key_code KEY_CLEAR 156
enumval key_code KEY_SDL_PRIOR 157
enumval key_code KEY_RETURN2 158
enumval key_code KEY_SEPARATOR 159
enumval key_code KEY_OUT 160
enumval key_code KEY_OPER 161
enumval key_code KEY_CLEARAGAIN 162
enumval key_code KEY_CRSEL 163
enumval key_code KEY_EXSEL 164
enumval key_code KEY_NUMPAD_00 176
enumval key_code KEY_NUMPAD_000 177
enumval key_code KEY_THOUSANDSSEPARATOR 178
enumval key_code KEY_DECIMALSEPARATOR 179
enumval key_code KEY_CURRENCYUNIT 180
enumval key_code KEY_CURRENCYSUBUNIT 181
enumval key_code KEY_NUMPAD_LEFTPAREN 182
enumval key_code KEY_NUMPAD_RIGHTPAREN 183
enumval key_code KEY_NUMPAD_LEFTBRACE 184
enumval key_code KEY_NUMPAD_RIGHTBRACE 185
enumval key_code KEY_NUMPAD_TAB 186
enumval key_code KEY_NUMPAD_BACKSPACE 187
enumval key_code KEY_NUMPAD_A 188
enumval key_code KEY_NUMPAD_B 189
enumval key_code KEY_NUMPAD_C 190
enumval key_code KEY_NUMPAD_D 191
enumval key_code KEY_NUMPAD_E 192
enumval key_code KEY_NUMPAD_F 193
enumval key_code KEY_NUMPAD_XOR 194
enumval key_code KEY_NUMPAD_POWER 195
enumval key_code KEY_NUMPAD_PERCENT 196
enumval key_code KEY_NUMPAD_LESS 197
enumval key_code KEY_NUMPAD_GREATER 198
enumval key_code KEY_NUMPAD_AMPERSAND 199
enumval key_code KEY_NUMPAD_DBLAMPERSAND 200
enumval key_code KEY_NUMPAD_VERTICALBAR 201
enumval key_code KEY_NUMPAD_DBLVERTICALBAR 202
enumval key_code KEY_NUMPAD_COLON 203
enumval key_code KEY_NUMPAD_HASH 204
enumval key_code KEY_NUMPAD_SPACE 205
enumval key_code KEY_NUMPAD_AT 206
enumval key_code KEY_NUMPAD_EXCLAM 207
enumval key_code KEY_NUMPAD_MEMSTORE 208
enumval key_code KEY_NUMPAD_MEMRECALL 209
enumval key_code KEY_NUMPAD_MEMCLEAR 210
enumval key_code KEY_NUMPAD_MEMADD 211
enumval key_code KEY_NUMPAD_MEMSUBTRACT 212
enumval key_code KEY_NUMPAD_MEMMULTIPLY 213
enumval key_code KEY_NUMPAD_MEMDIVIDE 214
enumval key_code KEY_NUMPAD_PLUSMINUS 215
enumval key_code KEY_NUMPAD_CLEAR 216
enumval key_code KEY_NUMPAD_CLEARENTRY 217
enumval key_code KEY_NUMPAD_BINARY 218
enumval key_code KEY_NUMPAD_OCTAL 219
enumval key_code KEY_NUMPAD_DECIMAL 220
enumval key_code KEY_NUMPAD_HEXADECIMAL 221
enumval key_code KEY_LCTRL 224
enumval key_code KEY_LSHIFT 225
enumval key_code KEY_LALT 226
enumval key_code KEY_LGUI 227
enumval key_code KEY_RCTRL 228
enumval key_code KEY_RSHIFT 229
enumval key_code KEY_RALT 230
enumval key_code KEY_RGUI 231
enumval key_code KEY_MODE 257
enumval key_code KEY_MEDIA_NEXT_TRACK 267
enumval key_code KEY_MEDIA_PREVIOUS_TRACK 268
enumval key_code KEY_MEDIA_STOP 269
enumval key_code KEY_MEDIA_PLAY 262
enumval key_code KEY_MEDIA_SELECT 272
enumval key_code KEY_AC_SEARCH 280
enumval key_code KEY_AC_HOME 281
enumval key_code KEY_AC_BACK 282
enumval key_code KEY_AC_FORWARD 283
enumval key_code KEY_AC_STOP 284
enumval key_code KEY_AC_REFRESH 285
enumval key_code KEY_AC_BOOKMARKS 286
enumval key_code KEY_MEDIA_EJECT 270
enumval key_code KEY_SLEEP 258
enumval key_code KEY_MEDIA_REWIND 266
enumval key_code KEY_MEDIA_FAST_FORWARD 265
enumval key_code KEY_SOFTLEFT 287
enumval key_code KEY_SOFTRIGHT 288
enumval key_code KEY_CALL 289
enumval key_code KEY_ENDCALL 290
enum touch_device_type
enumval touch_device_type TOUCH_DEVICE_TYPE_INVLAID -1
enumval touch_device_type TOUCH_DEVICE_DIRECT 0
enumval touch_device_type TOUCH_DEVICE_INDIRECT_ABSOLUTE 1
enumval touch_device_type TOUCH_DEVICE_INDIRECT_RELATIVE 2
enum joystick_type
enum joystick_bind_type
enum joystick_power_level
enum joystick_control_type
enum http_status
enumval http_status HTTP_ACCEPTED 202
enumval http_status HTTP_ALREADY_REPORTED 208
enumval http_status HTTP_BAD_GATEWAY 502
enumval http_status HTTP_BAD_REQUEST 400
enumval http_status HTTP_CONFLICT 409
enumval http_status HTTP_CONTINUE 100
enumval http_status HTTP_CREATED 201
enumval http_status HTTP_ENCHANCE_YOUR_CALM 420
enumval http_status HTTP_EXPECTATION_FAILED 417
enumval http_status HTTP_FAILED_DEPENDENCY 424
enumval http_status HTTP_FORBIDDEN 403
enumval http_status HTTP_FOUND 302
enumval http_status HTTP_GATEWAY_TIMEOUT 504
enumval http_status HTTP_GONE 410
enumval http_status HTTP_IM_A_TEAPOT 418
enumval http_status HTTP_IM_USED 226
enumval http_status HTTP_INSUFFICIENT_STORAGE 507
enumval http_status HTTP_INTERNAL_SERVER_ERROR 500
enumval http_status HTTP_LENGTH_REQUIRED 411
enumval http_status HTTP_LOCKED 423
enumval http_status HTTP_LOOP_DETECTED 508
enumval http_status HTTP_METHOD_NOT_ALLOWED 405
enumval http_status HTTP_MISDIRECTED_REQUEST 421
enumval http_status HTTP_MOVED_PERMANENTLY 301
enumval http_status HTTP_MULTIPLE_CHOICES 300
enumval http_status HTTP_MULTI_STATUS 207
enumval http_status HTTP_NETWORK_AUTHENTICATION_REQUIRED 511
enumval http_status HTTP_NONAUTHORITATIVE 203
enumval http_status HTTP_NOT_ACCEPTABLE 406
enumval http_status HTTP_NOT_EXTENDED 510
enumval http_status HTTP_NOT_FOUND 404
enumval http_status HTTP_NOT_IMPLEMENTED 501
enumval http_status HTTP_NOT_MODIFIED 304
enumval http_status HTTP_NO_CONTENT 204
enumval http_status HTTP_OK 200
enumval http_status HTTP_PARTIAL_CONTENT 206
enumval http_status HTTP_PAYMENT_REQUIRED 402
enumval http_status HTTP_PERMANENT_REDIRECT 308
enumval http_status HTTP_PRECONDITION_FAILED 412
enumval http_status HTTP_PRECONDITION_REQUIRED 428
enumval http_status HTTP_PROCESSING 102
enumval http_status HTTP_PROXY_AUTHENTICATION_REQUIRED 407
enumval http_status HTTP_REQUESTED_RANGE_NOT_SATISFIABLE 416
enumval http_status HTTP_REQUEST_ENTITY_TOO_LARGE 413
enumval http_status HTTP_REQUEST_HEADER_FIELDS_TOO_LARGE 431
enumval http_status HTTP_REQUEST_TIMEOUT 408
enumval http_status HTTP_REQUEST_URI_TOO_LONG 414
enumval http_status HTTP_RESET_CONTENT 205
enumval http_status HTTP_SEE_OTHER 303
enumval http_status HTTP_SERVICE_UNAVAILABLE 503
enumval http_status HTTP_SWITCHING_PROTOCOLS 101
enumval http_status HTTP_TEMPORARY_REDIRECT 307
enumval http_status HTTP_TOO_EARLY 425
enumval http_status HTTP_TOO_MANY_REQUESTS 429
enumval http_status HTTP_UNAUTHORIZED 401
enumval http_status HTTP_UNAVAILABLE_FOR_LEGAL_REASONS 451
enumval http_status HTTP_UNPROCESSABLE_ENTITY 422
enumval http_status HTTP_UNSUPPORTED_MEDIA_TYPE 415
enumval http_status HTTP_UPGRADE_REQUIRED 426
enumval http_status HTTP_USE_PROXY 305
enumval http_status HTTP_VARIANT_ALSO_NEGOTIATES 506
enumval http_status HTTP_VERSION_NOT_SUPPORTED 505
enum ftp_file_type
enumval ftp_file_type FTP_FILE_TYPE_TEXT 0
enumval ftp_file_type FTP_FILE_TYPE_BINARY 1
enum string_base64_options
enumval string_base64_options STRING_BASE64_DEFAULT 0
enumval string_base64_options STRING_BASE64_URL 1
enumval string_base64_options STRING_BASE64_PADLESS 2
enumval string_base64_options STRING_BASE64_URL_PADLESS 3
enum OPERATING_SYSTEM
enumval OPERATING_SYSTEM OS_FREE_BSD 1
enumval OPERATING_SYSTEM OS_AIX 2
enumval OPERATING_SYSTEM OS_HPUX 3
enumval OPERATING_SYSTEM OS_TRU64 4
enumval OPERATING_SYSTEM OS_LINUX 5
enumval OPERATING_SYSTEM OS_DARWIN 6
enumval OPERATING_SYSTEM OS_NET_BSD 7
enumval OPERATING_SYSTEM OS_OPEN_BSD 8
enumval OPERATING_SYSTEM OS_IRIX 9
enumval OPERATING_SYSTEM OS_SOLARIS 10
enumval OPERATING_SYSTEM OS_QNX 11
enumval OPERATING_SYSTEM OS_VXWORKS 12
enumval OPERATING_SYSTEM OS_CYGWIN 13
enumval OPERATING_SYSTEM OS_NACL 14
enumval OPERATING_SYSTEM OS_ANDROID 15
enumval OPERATING_SYSTEM OS_UNKNOWN_UNIX 255
enumval OPERATING_SYSTEM OS_WINDOWS_NT 4097
enumval OPERATING_SYSTEM OS_VMS 8193
enum ARCHITECTURE
enumval ARCHITECTURE ARCH_ALPHA 1
enumval ARCHITECTURE ARCH_IA32 2
enumval ARCHITECTURE ARCH_IA64 3
enumval ARCHITECTURE ARCH_MIPS 4
enumval ARCHITECTURE ARCH_HPPA 5
enumval ARCHITECTURE ARCH_PPC 6
enumval ARCHITECTURE ARCH_POWER 7
enumval ARCHITECTURE ARCH_SPARC 8
enumval ARCHITECTURE ARCH_AMD64 9
enumval ARCHITECTURE ARCH_ARM 10
enumval ARCHITECTURE ARCH_M68K 11
enumval ARCHITECTURE ARCH_S390 12
enumval ARCHITECTURE ARCH_SH 13
enumval ARCHITECTURE ARCH_NIOS2 14
enumval ARCHITECTURE ARCH_AARCH64 15
enumval ARCHITECTURE ARCH_ARM64 15
enumval ARCHITECTURE ARCH_RISCV64 16
enumval ARCHITECTURE ARCH_RISCV32 17
enumval ARCHITECTURE ARCH_LOONGARCH64 18
enum regexp_options
enumval regexp_options RE_CASELESS 1
enumval regexp_options RE_MULTILINE 2
enumval regexp_options RE_DOTALL 4
enumval regexp_options RE_EXTENDED 8
enumval regexp_options RE_ANCHORED 16
enumval regexp_options RE_DOLLAR_END_ONLY 32
enumval regexp_options RE_EXTRA 64
enumval regexp_options RE_NOT_BOL 128
enumval regexp_options RE_NOT_EOL 256
enumval regexp_options RE_UNGREEDY 512
enumval regexp_options RE_NOT_EMPTY 1024
enumval regexp_options RE_UTF8 2048
enumval regexp_options RE_NO_AUTO_CAPTURE 4096
enumval regexp_options RE_NO_UTF8_CHECK 8192
enumval regexp_options RE_FIRSTLINE 262144
enumval regexp_options RE_DUPNAMES 524288
enumval regexp_options RE_NEWLINE_CR 1048576
enumval regexp_options RE_NEWLINE_LF 2097152
enumval regexp_options RE_NEWLINE_CRLF 3145728
enumval regexp_options RE_NEWLINE_ANY 4194304
enumval regexp_options RE_NEWLINE_ANY_CRLF 5242880
enumval regexp_options RE_GLOBAL 268435456
enumval regexp_options RE_NO_VARS 536870912
namespace "spec"
enum path_style
enumval path_style PATH_STYLE_UNIX 0
enumval path_style PATH_STYLE_URI 0
enumval path_style PATH_STYLE_WINDOWS 1
enumval path_style PATH_STYLE_VMS 2
enumval path_style PATH_STYLE_NATIVE 3
enumval path_style PATH_STYLE_AUTO 4
namespace ""
enum thread_priority
enumval thread_priority THREAD_PRIORITY_LOWEST -2
enumval thread_priority THREAD_PRIORITY_LOW -1
enumval thread_priority THREAD_PRIORITY_NORMAL 0
enumval thread_priority THREAD_PRIORITY_HIGH 1
enumval thread_priority THREAD_PRIORITY_HIGHEST 2
enum thread_event_type
enumval thread_event_type THREAD_EVENT_MANUAL_RESET 0
enumval thread_event_type THREAD_EVENT_AUTO_RESET 1
enum glob_options
enumval glob_options GLOB_DEFAULT 0
enumval glob_options GLOB_IGNORE_HIDDEN 1
enumval glob_options GLOB_FOLLOW_SYMLINKS 2
enumval glob_options GLOB_CASELESS 4
enum message_box_flags
enumval message_box_flags MESSAGE_BOX_ERROR 16
enumval message_box_flags MESSAGE_BOX_WARNING 32
enumval message_box_flags MESSAGE_BOX_INFORMATION 64
enumval message_box_flags MESSAGE_BOX_BUTTONS_LEFT_TO_RIGHT 128
enumval message_box_flags MESSAGE_BOX_BUTTONS_RIGHT_TO_LEFT 256

// Types
access 1
objtype "string" 7938
objtype "any" 5
objtype "array<T>" 69
objtype "dictionaryValue" 6022
objtype "dictionary" 5
objtype "grid<T>" 69
objtype "ref" 8070
objtype "complex" 137994
objtype "weakref<T>" 7618
objtype "const_weakref<T>" 7618
objtype "vector" 131850
objtype "datastream" 1
access 2
objtype "file" 1
access 4
objtype "hex_decoder" 1
objtype "hex_encoder" 1
objtype "base32_decoder" 1
objtype "base32_encoder" 1
objtype "base64_decoder" 1
objtype "base64_encoder" 1
objtype "random_reader" 1
objtype "discarding_writer" 1
objtype "duplicating_reader" 1
objtype "duplicating_writer" 1
objtype "deflating_reader" 1
objtype "deflating_writer" 1
objtype "inflating_reader" 1
objtype "inflating_writer" 1
objtype "counting_reader" 1
objtype "counting_writer" 1
objtype "line_converting_reader" 1
objtype "line_converting_writer" 1
access 1000
objtype "memory_reader" 1
objtype "memory_writer" 1
access 20
objtype "touch_finger" 266
access 4
objtype "name_value_collection" 1
objtype "internet_message_header" 1
objtype "http_request" 1
objtype "http_response" 1
access 40
objtype "http_client" 1
objtype "https_client" 1
objtype "ftp_client" 1
access 40000
objtype "library" 1
access 80
objtype "coordinate_map" 1
objtype "coordinate_map_area" 1
access 1
objtype "refstring" 1
access 40
objtype "network_event" 1
objtype "network" 1
access 2
objtype "pack" 1
access 2000
objtype "pathfinder" 1
access 4
objtype "json_object" 1
objtype "json_array" 1
objtype "var" 1
access 1
objtype "regexp" 1282
namespace "spec"
objtype "path" 7938
namespace ""
objtype "random_pcg" 10
objtype "random_well" 10
objtype "random_gamerand" 10
objtype "random_xorshift" 10
access 100
objtype "script_function" 1
objtype "script_module" 1
access 8
objtype "mixer" 1
objtype "sound" 1
objtype "sound_environment" 1
access 1000
objtype "thread" 1
objtype "mutex" 1
objtype "mutex_lock" 1282
objtype "fast_mutex" 1
objtype "fast_mutex_lock" 1282
objtype "named_mutex" 1
objtype "named_mutex_lock" 1282
objtype "spinlock_mutex" 1
objtype "spinlock_mutex_lock" 1282
objtype "rw_lock" 1
objtype "rw_scoped_lock" 1282
objtype "rw_read_lock" 1282
objtype "rw_write_lock" 1282
objtype "thread_event" 1
objtype "thread_pool" 1
objtype "async<T>" 65
access 400
objtype "timer_queue" 1
access 200
objtype "timer" 1
objtype "calendar" 7938
objtype "datetime" 7938
objtype "timespan" 7938
objtype "timestamp" 7938
access 10
objtype "tts_voice" 1
access 40
objtype "internet_request" 1
access 20000
objtype "git_repository" 1
objtype "git_repository_entry" 1
objtype "git_repository_commit" 1
objtype "git_repository_commit_iterator" 1
access 10000
objtype "sqlite3statement" 1
objtype "sqlite3" 1
access ffffffff
funcdef "bool array<T>::less(const T&in, const T&in)"
funcdef "bool coordinate_map_filter_callback(coordinate_map_area@)"
funcdef "int pathfinder_callback(int, int, int, any@ = null)"
funcdef "void sound_close_callback(string)"
funcdef "uint sound_length_callback(string)"
funcdef "int sound_read_callback(string&out, uint, string)"
funcdef "bool sound_seek_callback(uint, string)"
funcdef "void thread_callback(dictionary@)"
funcdef "uint timer_callback(string, string)"
funcdef "void coroutine(dictionary@)"
funcdef "int git_repository_match_callback(git_repository@, const string&in, const string&in)"
funcdef "int sqlite3authorizer(string, int, string, string, string, string)"

// Template type members
access 1
objbeh "array<T>" 3 "array<T>@ array(int&in)"
objbeh "array<T>" 3 "array<T>@ array(int&in, uint)"
objbeh "array<T>" 3 "array<T>@ array(int&in, uint, const T&in)"
objbeh "array<T>" 5 "void $beh5()"
objbeh "array<T>" 6 "void $beh6()"
objbeh "array<T>" 9 "int $beh9()"
objbeh "array<T>" 10 "void $beh10()"
objbeh "array<T>" 11 "bool $beh11()"
objbeh "array<T>" 12 "void $beh12(int&in)"
objbeh "array<T>" 13 "void $beh13(int&in)"
objbeh "array<T>" 8 "bool $beh8(int&in, bool&out)"
objbeh "array<T>" 4 "array<T>@ $list(int&in, int&in) { repeat T }"
objmthd "array<T>" "T& opIndex(uint)"
objmthd "array<T>" "const T& opIndex(uint) const"
objmthd "array<T>" "array<T>& opAssign(const array<T>&in)"
objmthd "array<T>" "void insert_at(uint, const T&in)"
objmthd "array<T>" "void insert_at(uint, const array<T>&inout)"
objmthd "array<T>" "void insert_last(const T&in)"
objmthd "array<T>" "void insert_last(const array<T>&inout)"
objmthd "array<T>" "void remove_at(uint)"
objmthd "array<T>" "void remove_last()"
objmthd "array<T>" "void remove_range(uint, uint)"
objmthd "array<T>" "uint length() const"
objmthd "array<T>" "void reserve(uint)"
objmthd "array<T>" "void resize(uint)"
objmthd "array<T>" "void sort_ascending()"
objmthd "array<T>" "void sort_ascending(uint, uint)"
objmthd "array<T>" "void sort_descending()"
objmthd "array<T>" "void sort_descending(uint, uint)"
objmthd "array<T>" "void reverse()"
objmthd "array<T>" "int find(const T&in) const"
objmthd "array<T>" "int find(uint, const T&in) const"
objmthd "array<T>" "int find_by_ref(const T&in) const"
objmthd "array<T>" "int find_by_ref(uint, const T&in) const"
objmthd "array<T>" "bool opEquals(const array<T>&in) const"
objmthd "array<T>" "bool is_empty() const"
objmthd "array<T>" "void sort(array<T>::less&in, uint = 0, uint = uint ( - 1 ))"
objmthd "array<T>" "uint size() const"
objmthd "array<T>" "bool empty() const"
objmthd "array<T>" "void push_back(const T&in)"
objmthd "array<T>" "void pop_back()"
objmthd "array<T>" "void insert(uint, const T&in)"
objmthd "array<T>" "void insert(uint, const array<T>&inout)"
objmthd "array<T>" "void erase(uint)"
objbeh "grid<T>" 3 "grid<T>@ grid(int&in)"
objbeh "grid<T>" 3 "grid<T>@ grid(int&in, uint, uint)"
objbeh "grid<T>" 3 "grid<T>@ grid(int&in, uint, uint, const T&in)"
objbeh "grid<T>" 5 "void $beh5()"
objbeh "grid<T>" 6 "void $beh6()"
objbeh "grid<T>" 9 "int $beh9()"
objbeh "grid<T>" 10 "void $beh10()"
objbeh "grid<T>" 11 "bool $beh11()"
objbeh "grid<T>" 12 "void $beh12(int&in)"
objbeh "grid<T>" 13 "void $beh13(int&in)"
objbeh "grid<T>" 8 "bool $beh8(int&in, bool&out)"
objbeh "grid<T>" 4 "grid<T>@ $list(int&in, int&in) { repeat { repeat_same T } }"
objmthd "grid<T>" "T& opIndex(uint, uint)"
objmthd "grid<T>" "const T& opIndex(uint, uint) const"
objmthd "grid<T>" "void resize(uint, uint)"
objmthd "grid<T>" "uint width() const"
objmthd "grid<T>" "uint height() const"
objbeh "weakref<T>" 2 "void weakref()"
objbeh "weakref<T>" 8 "bool $beh8(int&in, bool&out)"
objbeh "weakref<T>" 0 "void weakref(int&in)"
objbeh "weakref<T>" 0 "void weakref(int&in, T@)"
objmthd "weakref<T>" "T@ opImplCast()"
objmthd "weakref<T>" "T@ get() const"
objmthd "weakref<T>" "weakref<T>& opHndlAssign(const weakref<T>&in)"
objmthd "weakref<T>" "weakref<T>& opAssign(const weakref<T>&in)"
objmthd "weakref<T>" "bool opEquals(const weakref<T>&in) const"
objmthd "weakref<T>" "weakref<T>& opHndlAssign(T@)"
objmthd "weakref<T>" "bool opEquals(const T@) const"
objbeh "const_weakref<T>" 2 "void const_weakref()"
objbeh "const_weakref<T>" 8 "bool $beh8(int&in, bool&out)"
objbeh "const_weakref<T>" 0 "void const_weakref(int&in)"
objbeh "const_weakref<T>" 0 "void const_weakref(int&in, const T@)"
objmthd "const_weakref<T>" "const T@ opImplCast() const"
objmthd "const_weakref<T>" "const T@ get() const"
objmthd "const_weakref<T>" "const_weakref<T>& opHndlAssign(const const_weakref<T>&in)"
objmthd "const_weakref<T>" "const_weakref<T>& opAssign(const const_weakref<T>&in)"
objmthd "const_weakref<T>" "bool opEquals(const const_weakref<T>&in) const"
objmthd "const_weakref<T>" "const_weakref<T>& opHndlAssign(const T@)"
objmthd "const_weakref<T>" "bool opEquals(const T@) const"
objmthd "const_weakref<T>" "const_weakref<T>& opHndlAssign(const weakref<T>&in)"
objmthd "const_weakref<T>" "bool opEquals(const weakref<T>&in) const"
access 1000
objbeh "async<T>" 3 "async<T>@ async(int&in)"
objbeh "async<T>" 3 "async<T>@ async(int&in, const ?&in)"
objbeh "async<T>" 3 "async<T>@ async(int&in, const ?&in, const ?&in)"
objbeh "async<T>" 3 "async<T>@ async(int&in, const ?&in, const ?&in, const ?&in)"
objbeh "async<T>" 3 "async<T>@ async(int&in, const ?&in, const ?&in, const ?&in, const ?&in)"
objbeh "async<T>" 3 "async<T>@ async(int&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
objbeh "async<T>" 3 "async<T>@ async(int&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
objbeh "async<T>" 3 "async<T>@ async(int&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
objbeh "async<T>" 3 "async<T>@ async(int&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
objbeh "async<T>" 3 "async<T>@ async(int&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
objbeh "async<T>" 3 "async<T>@ async(int&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
objbeh "async<T>" 3 "async<T>@ async(int&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
objbeh "async<T>" 3 "async<T>@ async(int&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
objbeh "async<T>" 3 "async<T>@ async(int&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
objbeh "async<T>" 3 "async<T>@ async(int&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
objbeh "async<T>" 3 "async<T>@ async(int&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
objbeh "async<T>" 3 "async<T>@ async(int&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
objbeh "async<T>" 5 "void $beh5()"
objbeh "async<T>" 6 "void $beh6()"
objmthd "async<T>" "const T& get_value() property"
objmthd "async<T>" "bool get_complete() const property"
objmthd "async<T>" "bool get_failed() const property"
objmthd "async<T>" "string get_exception() const property"
objmthd "async<T>" "void wait()"
objmthd "async<T>" "bool try_wait(uint)"

// Type members
objbeh "string" 2 "void string()"
objbeh "string" 0 "void string()"
objbeh "string" 0 "void string(const string&in)"
objbeh "string" 0 "void string(uint64)"
objbeh "string" 0 "void string(int64)"
objbeh "string" 0 "void string(uint)"
objbeh "string" 0 "void string(int)"
objbeh "string" 0 "void string(double)"
objbeh "string" 0 "void string(float)"
objbeh "string" 0 "void string(bool)"
objbeh "string" 0 "void string(const ?&in, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null)"
access 1
objmthd "string" "string& opAssign(const string&in)"
objmthd "string" "string& opAddAssign(const string&in)"
objmthd "string" "bool opEquals(const string&in) const"
objmthd "string" "int opCmp(const string&in) const"
objmthd "string" "string opAdd(const string&in) const"
objmthd "string" "uint length() const"
objmthd "string" "void resize(uint)"
objmthd "string" "void reserve(uint)"
objmthd "string" "bool is_empty() const"
objmthd "string" "const string get_opIndex(uint) const property"
objmthd "string" "void set_opIndex(uint, const string&in) property"
objmthd "string" "string& opAssign(double)"
objmthd "string" "string& opAddAssign(double)"
objmthd "string" "string opAdd(double) const"
objmthd "string" "string opAdd_r(double) const"
objmthd "string" "string& opAssign(float)"
objmthd "string" "string& opAddAssign(float)"
objmthd "string" "string opAdd(float) const"
objmthd "string" "string opAdd_r(float) const"
objmthd "string" "string& opAssign(int64)"
objmthd "string" "string& opAddAssign(int64)"
objmthd "string" "string opAdd(int64) const"
objmthd "string" "string opAdd_r(int64) const"
objmthd "string" "string& opAssign(uint64)"
objmthd "string" "string& opAddAssign(uint64)"
objmthd "string" "string opAdd(uint64) const"
objmthd "string" "string opAdd_r(uint64) const"
objmthd "string" "string& opAssign(bool)"
objmthd "string" "string& opAddAssign(bool)"
objmthd "string" "string opAdd(bool) const"
objmthd "string" "string opAdd_r(bool) const"
objmthd "string" "string substr(uint = 0, int = - 1) const"
objmthd "string" "int find_first(const string&in, uint = 0) const"
objmthd "string" "int find_first_of(const string&in, uint = 0) const"
objmthd "string" "int find_first_not_of(const string&in, uint = 0) const"
objmthd "string" "int find_last(const string&in, int = - 1) const"
objmthd "string" "int find_last_of(const string&in, int = - 1) const"
objmthd "string" "int find_last_not_of(const string&in, int = - 1) const"
objmthd "string" "void insert(uint, const string&in)"
objmthd "string" "void erase(uint, int = - 1)"
objmthd "string" "uint size() const"
objmthd "string" "bool empty() const"
objmthd "string" "int find(const string&in, uint = 0) const"
objmthd "string" "int rfind(const string&in, int = - 1) const"
objmthd "string" "array<string>@ split(const string&in, bool = true) const"
objmthd "string" "string slice(int = 0, int = 0) const"
objmthd "string" "string replace_range(uint, int, const string&in) const"
objmthd "string" "string replace(const string&in, const string&in, bool = true, uint = 0) const"
objmthd "string" "string& replace_this(const string&in, const string&in, bool = true, uint = 0) const"
objmthd "string" "string reverse_bytes() const"
objmthd "string" "string opMul(uint) const"
objmthd "string" "string& opMulAssign(uint)"
access 8000
objmthd "string" "string format(const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null) const"
access 4
objmthd "string" "string opAdd(const var&in) const"
objmthd "string" "string& opAssign(const var&in)"
objmthd "string" "string& opAddAssign(const var&in)"
access 1
objmthd "string" "bool is_upper(const string&in = \"\") const"
objmthd "string" "bool is_lower(const string&in = \"\") const"
objmthd "string" "bool is_whitespace(const string&in = \"\") const"
objmthd "string" "bool is_punctuation(const string&in = \"\") const"
objmthd "string" "bool is_alphabetic(const string&in = \"\") const"
objmthd "string" "bool is_digits(const string&in = \"\") const"
objmthd "string" "bool is_alphanumeric(const string&in = \"\") const"
objmthd "string" "string upper() const"
objmthd "string" "string& upper_this()"
objmthd "string" "string lower() const"
objmthd "string" "string& lower_this()"
objmthd "string" "string trim_whitespace_left() const"
objmthd "string" "string& trim_whitespace_left_this()"
objmthd "string" "string trim_whitespace_right() const"
objmthd "string" "string& trim_whitespace_right_this()"
objmthd "string" "string trim_whitespace() const"
objmthd "string" "string& trim_whitespace_this()"
objmthd "string" "string reverse(const string&in = \"\") const"
objmthd "string" "string escape(bool = false) const"
objmthd "string" "string unescape() const"
objmthd "string" "bool starts_with(const string&in) const"
objmthd "string" "bool ends_with(const string&in) const"
objmthd "string" "string replace_characters(const string&in, const string&in) const"
objmthd "string" "string& replace_characters_this(const string&in, const string&in)"
objmthd "string" "void remove_UTF8_BOM()"
objmthd "string" "uint unpacket(uint, const ?&out)"
objmthd "string" "uint unpacket(uint, const ?&out, const ?&out)"
objmthd "string" "uint unpacket(uint, const ?&out, const ?&out, const ?&out)"
objmthd "string" "uint unpacket(uint, const ?&out, const ?&out, const ?&out, const ?&out)"
objmthd "string" "uint unpacket(uint, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out)"
objmthd "string" "uint unpacket(uint, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out)"
objmthd "string" "uint unpacket(uint, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out)"
objmthd "string" "uint unpacket(uint, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out)"
objmthd "string" "uint unpacket(uint, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out)"
objmthd "string" "uint unpacket(uint, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out)"
objmthd "string" "uint unpacket(uint, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out)"
objmthd "string" "uint unpacket(uint, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out)"
objmthd "string" "uint unpacket(uint, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out)"
objmthd "string" "uint unpacket(uint, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out)"
objmthd "string" "uint unpacket(uint, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out)"
objmthd "string" "uint unpacket(uint, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out, const ?&out)"
objbeh "any" 3 "any@ any()"
objbeh "any" 3 "any@ any(?&in)"
objbeh "any" 3 "any@ any(const int64&in)"
objbeh "any" 3 "any@ any(const double&in)"
objbeh "any" 5 "void $beh5()"
objbeh "any" 6 "void $beh6()"
objbeh "any" 9 "int $beh9()"
objbeh "any" 10 "void $beh10()"
objbeh "any" 11 "bool $beh11()"
objbeh "any" 12 "void $beh12(int&in)"
objbeh "any" 13 "void $beh13(int&in)"
objmthd "any" "any& opAssign(any&in)"
objmthd "any" "void store(?&in)"
objmthd "any" "void store(const int64&in)"
objmthd "any" "void store(const double&in)"
objmthd "any" "bool retrieve(?&out)"
objmthd "any" "bool retrieve(int64&out)"
objmthd "any" "bool retrieve(double&out)"
objbeh "dictionaryValue" 2 "void dictionaryValue()"
objbeh "dictionaryValue" 12 "void $beh12(int&in)"
objbeh "dictionaryValue" 13 "void $beh13(int&in)"
objbeh "dictionaryValue" 0 "void dictionaryValue()"
objmthd "dictionaryValue" "dictionaryValue& opAssign(const dictionaryValue&in)"
objmthd "dictionaryValue" "dictionaryValue& opHndlAssign(const ?&in)"
objmthd "dictionaryValue" "dictionaryValue& opHndlAssign(const dictionaryValue&in)"
objmthd "dictionaryValue" "dictionaryValue& opAssign(const ?&in)"
objmthd "dictionaryValue" "dictionaryValue& opAssign(double)"
objmthd "dictionaryValue" "dictionaryValue& opAssign(int64)"
objmthd "dictionaryValue" "void opCast(?&out)"
objmthd "dictionaryValue" "void opConv(?&out)"
objmthd "dictionaryValue" "int64 opConv()"
objmthd "dictionaryValue" "double opConv()"
objbeh "dictionary" 3 "dictionary@ dictionary()"
objbeh "dictionary" 5 "void $beh5()"
objbeh "dictionary" 6 "void $beh6()"
objbeh "dictionary" 9 "int $beh9()"
objbeh "dictionary" 10 "void $beh10()"
objbeh "dictionary" 11 "bool $beh11()"
objbeh "dictionary" 12 "void $beh12(int&in)"
objbeh "dictionary" 13 "void $beh13(int&in)"
objbeh "dictionary" 4 "dictionary@ $list(int&in) { repeat { string, ? } }"
objmthd "dictionary" "dictionary& opAssign(const dictionary&in)"
objmthd "dictionary" "void set(const string&in, const ?&in)"
objmthd "dictionary" "bool get(const string&in, ?&out) const"
objmthd "dictionary" "void set(const string&in, const int64&in)"
objmthd "dictionary" "bool get(const string&in, int64&out) const"
objmthd "dictionary" "void set(const string&in, const double&in)"
objmthd "dictionary" "bool get(const string&in, double&out) const"
objmthd "dictionary" "bool exists(const string&in) const"
objmthd "dictionary" "bool is_empty() const"
objmthd "dictionary" "uint get_size() const"
objmthd "dictionary" "bool delete(const string&in)"
objmthd "dictionary" "void delete_all()"
objmthd "dictionary" "array<string>@ get_keys() const"
objmthd "dictionary" "dictionaryValue& opIndex(const string&in)"
objmthd "dictionary" "const dictionaryValue& opIndex(const string&in) const"
objmthd "dictionary" "bool empty() const"
objmthd "dictionary" "uint size() const"
objmthd "dictionary" "void erase(const string&in)"
objmthd "dictionary" "void clear()"
objmthd "dictionary" "string serialize()"
objbeh "ref" 2 "void ref()"
objbeh "ref" 12 "void $beh12(int&in)"
objbeh "ref" 13 "void $beh13(int&in)"
objbeh "ref" 0 "void ref()"
objbeh "ref" 0 "void ref(const ref&in)"
objbeh "ref" 0 "void ref(const ?&in)"
objmthd "ref" "void opCast(?&out)"
objmthd "ref" "ref& opHndlAssign(const ref&in)"
objmthd "ref" "ref& opHndlAssign(const ?&in)"
objmthd "ref" "bool opEquals(const ref&in) const"
objmthd "ref" "bool opEquals(const ?&in) const"
objbeh "complex" 1 "void $list(const int&in) { float, float }"
objbeh "complex" 0 "void complex()"
objbeh "complex" 0 "void complex(const complex&in)"
objbeh "complex" 0 "void complex(float)"
objbeh "complex" 0 "void complex(float, float)"
objmthd "complex" "complex& opAddAssign(const complex&in)"
objmthd "complex" "complex& opSubAssign(const complex&in)"
objmthd "complex" "complex& opMulAssign(const complex&in)"
objmthd "complex" "complex& opDivAssign(const complex&in)"
objmthd "complex" "bool opEquals(const complex&in) const"
objmthd "complex" "complex opAdd(const complex&in) const"
objmthd "complex" "complex opSub(const complex&in) const"
objmthd "complex" "complex opMul(const complex&in) const"
objmthd "complex" "complex opDiv(const complex&in) const"
objmthd "complex" "float abs() const"
objmthd "complex" "complex get_ri() const property"
objmthd "complex" "complex get_ir() const property"
objmthd "complex" "void set_ri(const complex&in) property"
objmthd "complex" "void set_ir(const complex&in) property"
objprop "complex" "float r" 0 0
objprop "complex" "float i" 0 0
objbeh "vector" 2 "void vector()"
objbeh "vector" 0 "void vector()"
objbeh "vector" 0 "void vector(const vector&in)"
objbeh "vector" 0 "void vector(float, float = 0, float = 0)"
objmthd "vector" "vector& opAssign(const vector&in)"
objmthd "vector" "vector& opAddAssign(const vector&in)"
objmthd "vector" "vector& opSubAssign(const vector&in)"
objmthd "vector" "vector& opMulAssign(const float&in)"
objmthd "vector" "vector& opDivAssign(const float&in)"
objmthd "vector" "bool opEquals(const vector&in) const"
objmthd "vector" "vector opAdd(const vector&in) const"
objmthd "vector" "vector opSub(const vector&in) const"
objmthd "vector" "vector opMul(const vector&in) const"
objmthd "vector" "vector opDiv(const vector&in) const"
objmthd "vector" "vector opMul(float) const"
objmthd "vector" "vector opDiv(float) const"
objmthd "vector" "float length() const"
objmthd "vector" "float length2() const"
objmthd "vector" "bool get_is_zero() const property"
objmthd "vector" "float dot(const vector&in) const"
objmthd "vector" "float distance(const vector&in) const"
objmthd "vector" "float distance2(const vector&in) const"
objmthd "vector" "vector cross(const vector&in) const"
objmthd "vector" "vector& normalize()"
objmthd "vector" "vector normalized() const"
objmthd "vector" "vector absolute() const"
objmthd "vector" "vector rotate(const vector&in, const float) const"
objmthd "vector" "float angle(const vector&in) const"
objprop "vector" "float x" 0 0
objprop "vector" "float y" 0 0
objprop "vector" "float z" 0 0
objbeh "datastream" 3 "datastream@ datastream(const string&in = \"\")"
objbeh "datastream" 3 "datastream@ datastream(const string&in, const string&in, int = STREAM_BYTE_ORDER_NATIVE)"
objbeh "datastream" 5 "void $beh5()"
objbeh "datastream" 6 "void $beh6()"
objmthd "datastream" "datastream@ opCast()"
objmthd "datastream" "bool close(bool = false)"
objmthd "datastream" "bool close_all()"
objmthd "datastream" "bool get_active() const property"
objmthd "datastream" "uint64 get_available() const property"
objmthd "datastream" "bool seek(uint64)"
objmthd "datastream" "bool seek_end(uint64 = 0)"
objmthd "datastream" "bool seek_relative(int64)"
objmthd "datastream" "int64 get_pos() const property"
objmthd "datastream" "bool rseek(uint64)"
objmthd "datastream" "bool rseek_end(uint64 = 0)"
objmthd "datastream" "bool rseek_relative(int64)"
objmthd "datastream" "int64 get_rpos() const property"
objmthd "datastream" "bool wseek(uint64)"
objmthd "datastream" "bool wseek_end(uint64 = 0)"
objmthd "datastream" "bool wseek_relative(int64)"
objmthd "datastream" "int64 get_wpos() const property"
objmthd "datastream" "string read(uint = 0)"
objmthd "datastream" "string read_line()"
objmthd "datastream" "uint write(const string&in)"
objmthd "datastream" "datastream& opShr(int8&out)"
objmthd "datastream" "int8 read_int8()"
objmthd "datastream" "datastream& opShl(int8)"
objmthd "datastream" "datastream& write_int8(int8)"
objmthd "datastream" "datastream& opShr(uint8&out)"
objmthd "datastream" "uint8 read_uint8()"
objmthd "datastream" "datastream& opShl(uint8)"
objmthd "datastream" "datastream& write_uint8(uint8)"
objmthd "datastream" "datastream& opShr(int16&out)"
objmthd "datastream" "int16 read_int16()"
objmthd "datastream" "datastream& opShl(int16)"
objmthd "datastream" "datastream& write_int16(int16)"
objmthd "datastream" "datastream& opShr(uint16&out)"
objmthd "datastream" "uint16 read_uint16()"
objmthd "datastream" "datastream& opShl(uint16)"
objmthd "datastream" "datastream& write_uint16(uint16)"
objmthd "datastream" "datastream& opShr(int&out)"
objmthd "datastream" "int read_int()"
objmthd "datastream" "datastream& opShl(int)"
objmthd "datastream" "datastream& write_int(int)"
objmthd "datastream" "datastream& opShr(uint&out)"
objmthd "datastream" "uint read_uint()"
objmthd "datastream" "datastream& opShl(uint)"
objmthd "datastream" "datastream& write_uint(uint)"
objmthd "datastream" "datastream& opShr(int64&out)"
objmthd "datastream" "int64 read_int64()"
objmthd "datastream" "datastream& opShl(int64)"
objmthd "datastream" "datastream& write_int64(int64)"
objmthd "datastream" "datastream& opShr(uint64&out)"
objmthd "datastream" "uint64 read_uint64()"
objmthd "datastream" "datastream& opShl(uint64)"
objmthd "datastream" "datastream& write_uint64(uint64)"
objmthd "datastream" "datastream& opShr(float&out)"
objmthd "datastream" "float read_float()"
objmthd "datastream" "datastream& opShl(float)"
objmthd "datastream" "datastream& write_float(float)"
objmthd "datastream" "datastream& opShr(double&out)"
objmthd "datastream" "double read_double()"
objmthd "datastream" "datastream& opShl(double)"
objmthd "datastream" "datastream& write_double(double)"
objmthd "datastream" "datastream& opShr(string&out)"
objmthd "datastream" "string read_string()"
objmthd "datastream" "datastream& opShl(string)"
objmthd "datastream" "datastream& write_string(string)"
objmthd "datastream" "bool get_good() const property"
objmthd "datastream" "bool get_bad() const property"
objmthd "datastream" "bool get_fail() const property"
objmthd "datastream" "bool get_eof() const property"
objmthd "datastream" "bool open(const string&in = \"\", const string&in = \"\", int = STREAM_BYTE_ORDER_NATIVE)"
objmthd "datastream" "string str()"
access 2
objmthd "datastream" "file@ opCast()"
access 4
objmthd "datastream" "hex_decoder@ opCast()"
objmthd "datastream" "hex_encoder@ opCast()"
objmthd "datastream" "base32_decoder@ opCast()"
objmthd "datastream" "base32_encoder@ opCast()"
objmthd "datastream" "base64_decoder@ opCast()"
objmthd "datastream" "base64_encoder@ opCast()"
objmthd "datastream" "random_reader@ opCast()"
objmthd "datastream" "discarding_writer@ opCast()"
objmthd "datastream" "duplicating_reader@ opCast()"
objmthd "datastream" "duplicating_writer@ opCast()"
objmthd "datastream" "deflating_reader@ opCast()"
objmthd "datastream" "deflating_writer@ opCast()"
objmthd "datastream" "inflating_reader@ opCast()"
objmthd "datastream" "inflating_writer@ opCast()"
objmthd "datastream" "counting_reader@ opCast()"
objmthd "datastream" "counting_writer@ opCast()"
objmthd "datastream" "line_converting_reader@ opCast()"
objmthd "datastream" "line_converting_writer@ opCast()"
access 1000
objmthd "datastream" "memory_reader@ opCast()"
objmthd "datastream" "memory_writer@ opCast()"
access 1
objprop "datastream" "bool binary" 0 0
objprop "datastream" "bool sync_rw_cursors" 0 0
access 2
objbeh "file" 3 "file@ file()"
objbeh "file" 3 "file@ file(const string&in, const string&in, const string&in = \"\", int = 1)"
objbeh "file" 5 "void $beh5()"
objbeh "file" 6 "void $beh6()"
objmthd "file" "datastream@ opImplCast()"
objmthd "file" "bool close(bool = false)"
objmthd "file" "bool close_all()"
objmthd "file" "bool get_active() const property"
objmthd "file" "uint64 get_available() const property"
objmthd "file" "bool seek(uint64)"
objmthd "file" "bool seek_end(uint64 = 0)"
objmthd "file" "bool seek_relative(int64)"
objmthd "file" "int64 get_pos() const property"
objmthd "file" "bool rseek(uint64)"
objmthd "file" "bool rseek_end(uint64 = 0)"
objmthd "file" "bool rseek_relative(int64)"
objmthd "file" "int64 get_rpos() const property"
objmthd "file" "bool wseek(uint64)"
objmthd "file" "bool wseek_end(uint64 = 0)"
objmthd "file" "bool wseek_relative(int64)"
objmthd "file" "int64 get_wpos() const property"
objmthd "file" "string read(uint = 0)"
objmthd "file" "string read_line()"
objmthd "file" "uint write(const string&in)"
objmthd "file" "file& opShr(int8&out)"
objmthd "file" "int8 read_int8()"
objmthd "file" "file& opShl(int8)"
objmthd "file" "file& write_int8(int8)"
objmthd "file" "file& opShr(uint8&out)"
objmthd "file" "uint8 read_uint8()"
objmthd "file" "file& opShl(uint8)"
objmthd "file" "file& write_uint8(uint8)"
objmthd "file" "file& opShr(int16&out)"
objmthd "file" "int16 read_int16()"
objmthd "file" "file& opShl(int16)"
objmthd "file" "file& write_int16(int16)"
objmthd "file" "file& opShr(uint16&out)"
objmthd "file" "uint16 read_uint16()"
objmthd "file" "file& opShl(uint16)"
objmthd "file" "file& write_uint16(uint16)"
objmthd "file" "file& opShr(int&out)"
objmthd "file" "int read_int()"
objmthd "file" "file& opShl(int)"
objmthd "file" "file& write_int(int)"
objmthd "file" "file& opShr(uint&out)"
objmthd "file" "uint read_uint()"
objmthd "file" "file& opShl(uint)"
objmthd "file" "file& write_uint(uint)"
objmthd "file" "file& opShr(int64&out)"
objmthd "file" "int64 read_int64()"
objmthd "file" "file& opShl(int64)"
objmthd "file" "file& write_int64(int64)"
objmthd "file" "file& opShr(uint64&out)"
objmthd "file" "uint64 read_uint64()"
objmthd "file" "file& opShl(uint64)"
objmthd "file" "file& write_uint64(uint64)"
objmthd "file" "file& opShr(float&out)"
objmthd "file" "float read_float()"
objmthd "file" "file& opShl(float)"
objmthd "file" "file& write_float(float)"
objmthd "file" "file& opShr(double&out)"
objmthd "file" "double read_double()"
objmthd "file" "file& opShl(double)"
objmthd "file" "file& write_double(double)"
objmthd "file" "file& opShr(string&out)"
objmthd "file" "string read_string()"
objmthd "file" "file& opShl(string)"
objmthd "file" "file& write_string(string)"
objmthd "file" "bool get_good() const property"
objmthd "file" "bool get_bad() const property"
objmthd "file" "bool get_fail() const property"
objmthd "file" "bool get_eof() const property"
objmthd "file" "bool open(const string&in, const string&in, const string&in = \"\", int = 1)"
objmthd "file" "uint64 get_size() const property"
objprop "file" "bool binary" 0 0
objprop "file" "bool sync_rw_cursors" 0 0
access 4
objbeh "hex_decoder" 3 "hex_decoder@ hex_decoder()"
objbeh "hex_decoder" 3 "hex_decoder@ hex_decoder(datastream@, const string&in = \"\", int = 1)"
objbeh "hex_decoder" 5 "void $beh5()"
objbeh "hex_decoder" 6 "void $beh6()"
objmthd "hex_decoder" "datastream@ opImplCast()"
objmthd "hex_decoder" "bool close(bool = false)"
objmthd "hex_decoder" "bool close_all()"
objmthd "hex_decoder" "bool get_active() const property"
objmthd "hex_decoder" "uint64 get_available() const property"
objmthd "hex_decoder" "bool seek(uint64)"
objmthd "hex_decoder" "bool seek_end(uint64 = 0)"
objmthd "hex_decoder" "bool seek_relative(int64)"
objmthd "hex_decoder" "int64 get_pos() const property"
objmthd "hex_decoder" "bool rseek(uint64)"
objmthd "hex_decoder" "bool rseek_end(uint64 = 0)"
objmthd "hex_decoder" "bool rseek_relative(int64)"
objmthd "hex_decoder" "int64 get_rpos() const property"
objmthd "hex_decoder" "bool wseek(uint64)"
objmthd "hex_decoder" "bool wseek_end(uint64 = 0)"
objmthd "hex_decoder" "bool wseek_relative(int64)"
objmthd "hex_decoder" "int64 get_wpos() const property"
objmthd "hex_decoder" "string read(uint = 0)"
objmthd "hex_decoder" "string read_line()"
objmthd "hex_decoder" "uint write(const string&in)"
objmthd "hex_decoder" "hex_decoder& opShr(int8&out)"
objmthd "hex_decoder" "int8 read_int8()"
objmthd "hex_decoder" "hex_decoder& opShl(int8)"
objmthd "hex_decoder" "hex_decoder& write_int8(int8)"
objmthd "hex_decoder" "hex_decoder& opShr(uint8&out)"
objmthd "hex_decoder" "uint8 read_uint8()"
objmthd "hex_decoder" "hex_decoder& opShl(uint8)"
objmthd "hex_decoder" "hex_decoder& write_uint8(uint8)"
objmthd "hex_decoder" "hex_decoder& opShr(int16&out)"
objmthd "hex_decoder" "int16 read_int16()"
objmthd "hex_decoder" "hex_decoder& opShl(int16)"
objmthd "hex_decoder" "hex_decoder& write_int16(int16)"
objmthd "hex_decoder" "hex_decoder& opShr(uint16&out)"
objmthd "hex_decoder" "uint16 read_uint16()"
objmthd "hex_decoder" "hex_decoder& opShl(uint16)"
objmthd "hex_decoder" "hex_decoder& write_uint16(uint16)"
objmthd "hex_decoder" "hex_decoder& opShr(int&out)"
objmthd "hex_decoder" "int read_int()"
objmthd "hex_decoder" "hex_decoder& opShl(int)"
objmthd "hex_decoder" "hex_decoder& write_int(int)"
objmthd "hex_decoder" "hex_decoder& opShr(uint&out)"
objmthd "hex_decoder" "uint read_uint()"
objmthd "hex_decoder" "hex_decoder& opShl(uint)"
objmthd "hex_decoder" "hex_decoder& write_uint(uint)"
objmthd "hex_decoder" "hex_decoder& opShr(int64&out)"
objmthd "hex_decoder" "int64 read_int64()"
objmthd "hex_decoder" "hex_decoder& opShl(int64)"
objmthd "hex_decoder" "hex_decoder& write_int64(int64)"
objmthd "hex_decoder" "hex_decoder& opShr(uint64&out)"
objmthd "hex_decoder" "uint64 read_uint64()"
objmthd "hex_decoder" "hex_decoder& opShl(uint64)"
objmthd "hex_decoder" "hex_decoder& write_uint64(uint64)"
objmthd "hex_decoder" "hex_decoder& opShr(float&out)"
objmthd "hex_decoder" "float read_float()"
objmthd "hex_decoder" "hex_decoder& opShl(float)"
objmthd "hex_decoder" "hex_decoder& write_float(float)"
objmthd "hex_decoder" "hex_decoder& opShr(double&out)"
objmthd "hex_decoder" "double read_double()"
objmthd "hex_decoder" "hex_decoder& opShl(double)"
objmthd "hex_decoder" "hex_decoder& write_double(double)"
objmthd "hex_decoder" "hex_decoder& opShr(string&out)"
objmthd "hex_decoder" "string read_string()"
objmthd "hex_decoder" "hex_decoder& opShl(string)"
objmthd "hex_decoder" "hex_decoder& write_string(string)"
objmthd "hex_decoder" "bool get_good() const property"
objmthd "hex_decoder" "bool get_bad() const property"
objmthd "hex_decoder" "bool get_fail() const property"
objmthd "hex_decoder" "bool get_eof() const property"
objmthd "hex_decoder" "bool open(datastream@, const string&in = \"\", int = 1)"
objprop "hex_decoder" "bool binary" 0 0
objprop "hex_decoder" "bool sync_rw_cursors" 0 0
objbeh "hex_encoder" 3 "hex_encoder@ hex_encoder()"
objbeh "hex_encoder" 3 "hex_encoder@ hex_encoder(datastream@, const string&in = \"\", int = 1)"
objbeh "hex_encoder" 5 "void $beh5()"
objbeh "hex_encoder" 6 "void $beh6()"
objmthd "hex_encoder" "datastream@ opImplCast()"
objmthd "hex_encoder" "bool close(bool = false)"
objmthd "hex_encoder" "bool close_all()"
objmthd "hex_encoder" "bool get_active() const property"
objmthd "hex_encoder" "uint64 get_available() const property"
objmthd "hex_encoder" "bool seek(uint64)"
objmthd "hex_encoder" "bool seek_end(uint64 = 0)"
objmthd "hex_encoder" "bool seek_relative(int64)"
objmthd "hex_encoder" "int64 get_pos() const property"
objmthd "hex_encoder" "bool rseek(uint64)"
objmthd "hex_encoder" "bool rseek_end(uint64 = 0)"
objmthd "hex_encoder" "bool rseek_relative(int64)"
objmthd "hex_encoder" "int64 get_rpos() const property"
objmthd "hex_encoder" "bool wseek(uint64)"
objmthd "hex_encoder" "bool wseek_end(uint64 = 0)"
objmthd "hex_encoder" "bool wseek_relative(int64)"
objmthd "hex_encoder" "int64 get_wpos() const property"
objmthd "hex_encoder" "string read(uint = 0)"
objmthd "hex_encoder" "string read_line()"
objmthd "hex_encoder" "uint write(const string&in)"
objmthd "hex_encoder" "hex_encoder& opShr(int8&out)"
objmthd "hex_encoder" "int8 read_int8()"
objmthd "hex_encoder" "hex_encoder& opShl(int8)"
objmthd "hex_encoder" "hex_encoder& write_int8(int8)"
objmthd "hex_encoder" "hex_encoder& opShr(uint8&out)"
objmthd "hex_encoder" "uint8 read_uint8()"
objmthd "hex_encoder" "hex_encoder& opShl(uint8)"
objmthd "hex_encoder" "hex_encoder& write_uint8(uint8)"
objmthd "hex_encoder" "hex_encoder& opShr(int16&out)"
objmthd "hex_encoder" "int16 read_int16()"
objmthd "hex_encoder" "hex_encoder& opShl(int16)"
objmthd "hex_encoder" "hex_encoder& write_int16(int16)"
objmthd "hex_encoder" "hex_encoder& opShr(uint16&out)"
objmthd "hex_encoder" "uint16 read_uint16()"
objmthd "hex_encoder" "hex_encoder& opShl(uint16)"
objmthd "hex_encoder" "hex_encoder& write_uint16(uint16)"
objmthd "hex_encoder" "hex_encoder& opShr(int&out)"
objmthd "hex_encoder" "int read_int()"
objmthd "hex_encoder" "hex_encoder& opShl(int)"
objmthd "hex_encoder" "hex_encoder& write_int(int)"
objmthd "hex_encoder" "hex_encoder& opShr(uint&out)"
objmthd "hex_encoder" "uint read_uint()"
objmthd "hex_encoder" "hex_encoder& opShl(uint)"
objmthd "hex_encoder" "hex_encoder& write_uint(uint)"
objmthd "hex_encoder" "hex_encoder& opShr(int64&out)"
objmthd "hex_encoder" "int64 read_int64()"
objmthd "hex_encoder" "hex_encoder& opShl(int64)"
objmthd "hex_encoder" "hex_encoder& write_int64(int64)"
objmthd "hex_encoder" "hex_encoder& opShr(uint64&out)"
objmthd "hex_encoder" "uint64 read_uint64()"
objmthd "hex_encoder" "hex_encoder& opShl(uint64)"
objmthd "hex_encoder" "hex_encoder& write_uint64(uint64)"
objmthd "hex_encoder" "hex_encoder& opShr(float&out)"
objmthd "hex_encoder" "float read_float()"
objmthd "hex_encoder" "hex_encoder& opShl(float)"
objmthd "hex_encoder" "hex_encoder& write_float(float)"
objmthd "hex_encoder" "hex_encoder& opShr(double&out)"
objmthd "hex_encoder" "double read_double()"
objmthd "hex_encoder" "hex_encoder& opShl(double)"
objmthd "hex_encoder" "hex_encoder& write_double(double)"
objmthd "hex_encoder" "hex_encoder& opShr(string&out)"
objmthd "hex_encoder" "string read_string()"
objmthd "hex_encoder" "hex_encoder& opShl(string)"
objmthd "hex_encoder" "hex_encoder& write_string(string)"
objmthd "hex_encoder" "bool get_good() const property"
objmthd "hex_encoder" "bool get_bad() const property"
objmthd "hex_encoder" "bool get_fail() const property"
objmthd "hex_encoder" "bool get_eof() const property"
objmthd "hex_encoder" "bool open(datastream@, const string&in = \"\", int = 1)"
objprop "hex_encoder" "bool binary" 0 0
objprop "hex_encoder" "bool sync_rw_cursors" 0 0
objbeh "base32_decoder" 3 "base32_decoder@ base32_decoder()"
objbeh "base32_decoder" 3 "base32_decoder@ base32_decoder(datastream@, const string&in = \"\", int = 1)"
objbeh "base32_decoder" 5 "void $beh5()"
objbeh "base32_decoder" 6 "void $beh6()"
objmthd "base32_decoder" "datastream@ opImplCast()"
objmthd "base32_decoder" "bool close(bool = false)"
objmthd "base32_decoder" "bool close_all()"
objmthd "base32_decoder" "bool get_active() const property"
objmthd "base32_decoder" "uint64 get_available() const property"
objmthd "base32_decoder" "bool seek(uint64)"
objmthd "base32_decoder" "bool seek_end(uint64 = 0)"
objmthd "base32_decoder" "bool seek_relative(int64)"
objmthd "base32_decoder" "int64 get_pos() const property"
objmthd "base32_decoder" "bool rseek(uint64)"
objmthd "base32_decoder" "bool rseek_end(uint64 = 0)"
objmthd "base32_decoder" "bool rseek_relative(int64)"
objmthd "base32_decoder" "int64 get_rpos() const property"
objmthd "base32_decoder" "bool wseek(uint64)"
objmthd "base32_decoder" "bool wseek_end(uint64 = 0)"
objmthd "base32_decoder" "bool wseek_relative(int64)"
objmthd "base32_decoder" "int64 get_wpos() const property"
objmthd "base32_decoder" "string read(uint = 0)"
objmthd "base32_decoder" "string read_line()"
objmthd "base32_decoder" "uint write(const string&in)"
objmthd "base32_decoder" "base32_decoder& opShr(int8&out)"
objmthd "base32_decoder" "int8 read_int8()"
objmthd "base32_decoder" "base32_decoder& opShl(int8)"
objmthd "base32_decoder" "base32_decoder& write_int8(int8)"
objmthd "base32_decoder" "base32_decoder& opShr(uint8&out)"
objmthd "base32_decoder" "uint8 read_uint8()"
objmthd "base32_decoder" "base32_decoder& opShl(uint8)"
objmthd "base32_decoder" "base32_decoder& write_uint8(uint8)"
objmthd "base32_decoder" "base32_decoder& opShr(int16&out)"
objmthd "base32_decoder" "int16 read_int16()"
objmthd "base32_decoder" "base32_decoder& opShl(int16)"
objmthd "base32_decoder" "base32_decoder& write_int16(int16)"
objmthd "base32_decoder" "base32_decoder& opShr(uint16&out)"
objmthd "base32_decoder" "uint16 read_uint16()"
objmthd "base32_decoder" "base32_decoder& opShl(uint16)"
objmthd "base32_decoder" "base32_decoder& write_uint16(uint16)"
objmthd "base32_decoder" "base32_decoder& opShr(int&out)"
objmthd "base32_decoder" "int read_int()"
objmthd "base32_decoder" "base32_decoder& opShl(int)"
objmthd "base32_decoder" "base32_decoder& write_int(int)"
objmthd "base32_decoder" "base32_decoder& opShr(uint&out)"
objmthd "base32_decoder" "uint read_uint()"
objmthd "base32_decoder" "base32_decoder& opShl(uint)"
objmthd "base32_decoder" "base32_decoder& write_uint(uint)"
objmthd "base32_decoder" "base32_decoder& opShr(int64&out)"
objmthd "base32_decoder" "int64 read_int64()"
objmthd "base32_decoder" "base32_decoder& opShl(int64)"
objmthd "base32_decoder" "base32_decoder& write_int64(int64)"
objmthd "base32_decoder" "base32_decoder& opShr(uint64&out)"
objmthd "base32_decoder" "uint64 read_uint64()"
objmthd "base32_decoder" "base32_decoder& opShl(uint64)"
objmthd "base32_decoder" "base32_decoder& write_uint64(uint64)"
objmthd "base32_decoder" "base32_decoder& opShr(float&out)"
objmthd "base32_decoder" "float read_float()"
objmthd "base32_decoder" "base32_decoder& opShl(float)"
objmthd "base32_decoder" "base32_decoder& write_float(float)"
objmthd "base32_decoder" "base32_decoder& opShr(double&out)"
objmthd "base32_decoder" "double read_double()"
objmthd "base32_decoder" "base32_decoder& opShl(double)"
objmthd "base32_decoder" "base32_decoder& write_double(double)"
objmthd "base32_decoder" "base32_decoder& opShr(string&out)"
objmthd "base32_decoder" "string read_string()"
objmthd "base32_decoder" "base32_decoder& opShl(string)"
objmthd "base32_decoder" "base32_decoder& write_string(string)"
objmthd "base32_decoder" "bool get_good() const property"
objmthd "base32_decoder" "bool get_bad() const property"
objmthd "base32_decoder" "bool get_fail() const property"
objmthd "base32_decoder" "bool get_eof() const property"
objmthd "base32_decoder" "bool open(datastream@, const string&in = \"\", int = 1)"
objprop "base32_decoder" "bool binary" 0 0
objprop "base32_decoder" "bool sync_rw_cursors" 0 0
objbeh "base32_encoder" 3 "base32_encoder@ base32_encoder()"
objbeh "base32_encoder" 3 "base32_encoder@ base32_encoder(datastream@, bool = true, const string&in = \"\", int = 1)"
objbeh "base32_encoder" 5 "void $beh5()"
objbeh "base32_encoder" 6 "void $beh6()"
objmthd "base32_encoder" "datastream@ opImplCast()"
objmthd "base32_encoder" "bool close(bool = false)"
objmthd "base32_encoder" "bool close_all()"
objmthd "base32_encoder" "bool get_active() const property"
objmthd "base32_encoder" "uint64 get_available() const property"
objmthd "base32_encoder" "bool seek(uint64)"
objmthd "base32_encoder" "bool seek_end(uint64 = 0)"
objmthd "base32_encoder" "bool seek_relative(int64)"
objmthd "base32_encoder" "int64 get_pos() const property"
objmthd "base32_encoder" "bool rseek(uint64)"
objmthd "base32_encoder" "bool rseek_end(uint64 = 0)"
objmthd "base32_encoder" "bool rseek_relative(int64)"
objmthd "base32_encoder" "int64 get_rpos() const property"
objmthd "base32_encoder" "bool wseek(uint64)"
objmthd "base32_encoder" "bool wseek_end(uint64 = 0)"
objmthd "base32_encoder" "bool wseek_relative(int64)"
objmthd "base32_encoder" "int64 get_wpos() const property"
objmthd "base32_encoder" "string read(uint = 0)"
objmthd "base32_encoder" "string read_line()"
objmthd "base32_encoder" "uint write(const string&in)"
objmthd "base32_encoder" "base32_encoder& opShr(int8&out)"
objmthd "base32_encoder" "int8 read_int8()"
objmthd "base32_encoder" "base32_encoder& opShl(int8)"
objmthd "base32_encoder" "base32_encoder& write_int8(int8)"
objmthd "base32_encoder" "base32_encoder& opShr(uint8&out)"
objmthd "base32_encoder" "uint8 read_uint8()"
objmthd "base32_encoder" "base32_encoder& opShl(uint8)"
objmthd "base32_encoder" "base32_encoder& write_uint8(uint8)"
objmthd "base32_encoder" "base32_encoder& opShr(int16&out)"
objmthd "base32_encoder" "int16 read_int16()"
objmthd "base32_encoder" "base32_encoder& opShl(int16)"
objmthd "base32_encoder" "base32_encoder& write_int16(int16)"
objmthd "base32_encoder" "base32_encoder& opShr(uint16&out)"
objmthd "base32_encoder" "uint16 read_uint16()"
objmthd "base32_encoder" "base32_encoder& opShl(uint16)"
objmthd "base32_encoder" "base32_encoder& write_uint16(uint16)"
objmthd "base32_encoder" "base32_encoder& opShr(int&out)"
objmthd "base32_encoder" "int read_int()"
objmthd "base32_encoder" "base32_encoder& opShl(int)"
objmthd "base32_encoder" "base32_encoder& write_int(int)"
objmthd "base32_encoder" "base32_encoder& opShr(uint&out)"
objmthd "base32_encoder" "uint read_uint()"
objmthd "base32_encoder" "base32_encoder& opShl(uint)"
objmthd "base32_encoder" "base32_encoder& write_uint(uint)"
objmthd "base32_encoder" "base32_encoder& opShr(int64&out)"
objmthd "base32_encoder" "int64 read_int64()"
objmthd "base32_encoder" "base32_encoder& opShl(int64)"
objmthd "base32_encoder" "base32_encoder& write_int64(int64)"
objmthd "base32_encoder" "base32_encoder& opShr(uint64&out)"
objmthd "base32_encoder" "uint64 read_uint64()"
objmthd "base32_encoder" "base32_encoder& opShl(uint64)"
objmthd "base32_encoder" "base32_encoder& write_uint64(uint64)"
objmthd "base32_encoder" "base32_encoder& opShr(float&out)"
objmthd "base32_encoder" "float read_float()"
objmthd "base32_encoder" "base32_encoder& opShl(float)"
objmthd "base32_encoder" "base32_encoder& write_float(float)"
objmthd "base32_encoder" "base32_encoder& opShr(double&out)"
objmthd "base32_encoder" "double read_double()"
objmthd "base32_encoder" "base32_encoder& opShl(double)"
objmthd "base32_encoder" "base32_encoder& write_double(double)"
objmthd "base32_encoder" "base32_encoder& opShr(string&out)"
objmthd "base32_encoder" "string read_string()"
objmthd "base32_encoder" "base32_encoder& opShl(string)"
objmthd "base32_encoder" "base32_encoder& write_string(string)"
objmthd "base32_encoder" "bool get_good() const property"
objmthd "base32_encoder" "bool get_bad() const property"
objmthd "base32_encoder" "bool get_fail() const property"
objmthd "base32_encoder" "bool get_eof() const property"
objmthd "base32_encoder" "bool open(datastream@, bool = true, const string&in = \"\", int = 1)"
objprop "base32_encoder" "bool binary" 0 0
objprop "base32_encoder" "bool sync_rw_cursors" 0 0
objbeh "base64_decoder" 3 "base64_decoder@ base64_decoder()"
objbeh "base64_decoder" 3 "base64_decoder@ base64_decoder(datastream@, int = 0, const string&in = \"\", int = 1)"
objbeh "base64_decoder" 5 "void $beh5()"
objbeh "base64_decoder" 6 "void $beh6()"
objmthd "base64_decoder" "datastream@ opImplCast()"
objmthd "base64_decoder" "bool close(bool = false)"
objmthd "base64_decoder" "bool close_all()"
objmthd "base64_decoder" "bool get_active() const property"
objmthd "base64_decoder" "uint64 get_available() const property"
objmthd "base64_decoder" "bool seek(uint64)"
objmthd "base64_decoder" "bool seek_end(uint64 = 0)"
objmthd "base64_decoder" "bool seek_relative(int64)"
objmthd "base64_decoder" "int64 get_pos() const property"
objmthd "base64_decoder" "bool rseek(uint64)"
objmthd "base64_decoder" "bool rseek_end(uint64 = 0)"
objmthd "base64_decoder" "bool rseek_relative(int64)"
objmthd "base64_decoder" "int64 get_rpos() const property"
objmthd "base64_decoder" "bool wseek(uint64)"
objmthd "base64_decoder" "bool wseek_end(uint64 = 0)"
objmthd "base64_decoder" "bool wseek_relative(int64)"
objmthd "base64_decoder" "int64 get_wpos() const property"
objmthd "base64_decoder" "string read(uint = 0)"
objmthd "base64_decoder" "string read_line()"
objmthd "base64_decoder" "uint write(const string&in)"
objmthd "base64_decoder" "base64_decoder& opShr(int8&out)"
objmthd "base64_decoder" "int8 read_int8()"
objmthd "base64_decoder" "base64_decoder& opShl(int8)"
objmthd "base64_decoder" "base64_decoder& write_int8(int8)"
objmthd "base64_decoder" "base64_decoder& opShr(uint8&out)"
objmthd "base64_decoder" "uint8 read_uint8()"
objmthd "base64_decoder" "base64_decoder& opShl(uint8)"
objmthd "base64_decoder" "base64_decoder& write_uint8(uint8)"
objmthd "base64_decoder" "base64_decoder& opShr(int16&out)"
objmthd "base64_decoder" "int16 read_int16()"
objmthd "base64_decoder" "base64_decoder& opShl(int16)"
objmthd "base64_decoder" "base64_decoder& write_int16(int16)"
objmthd "base64_decoder" "base64_decoder& opShr(uint16&out)"
objmthd "base64_decoder" "uint16 read_uint16()"
objmthd "base64_decoder" "base64_decoder& opShl(uint16)"
objmthd "base64_decoder" "base64_decoder& write_uint16(uint16)"
objmthd "base64_decoder" "base64_decoder& opShr(int&out)"
objmthd "base64_decoder" "int read_int()"
objmthd "base64_decoder" "base64_decoder& opShl(int)"
objmthd "base64_decoder" "base64_decoder& write_int(int)"
objmthd "base64_decoder" "base64_decoder& opShr(uint&out)"
objmthd "base64_decoder" "uint read_uint()"
objmthd "base64_decoder" "base64_decoder& opShl(uint)"
objmthd "base64_decoder" "base64_decoder& write_uint(uint)"
objmthd "base64_decoder" "base64_decoder& opShr(int64&out)"
objmthd "base64_decoder" "int64 read_int64()"
objmthd "base64_decoder" "base64_decoder& opShl(int64)"
objmthd "base64_decoder" "base64_decoder& write_int64(int64)"
objmthd "base64_decoder" "base64_decoder& opShr(uint64&out)"
objmthd "base64_decoder" "uint64 read_uint64()"
objmthd "base64_decoder" "base64_decoder& opShl(uint64)"
objmthd "base64_decoder" "base64_decoder& write_uint64(uint64)"
objmthd "base64_decoder" "base64_decoder& opShr(float&out)"
objmthd "base64_decoder" "float read_float()"
objmthd "base64_decoder" "base64_decoder& opShl(float)"
objmthd "base64_decoder" "base64_decoder& write_float(float)"
objmthd "base64_decoder" "base64_decoder& opShr(double&out)"
objmthd "base64_decoder" "double read_double()"
objmthd "base64_decoder" "base64_decoder& opShl(double)"
objmthd "base64_decoder" "base64_decoder& write_double(double)"
objmthd "base64_decoder" "base64_decoder& opShr(string&out)"
objmthd "base64_decoder" "string read_string()"
objmthd "base64_decoder" "base64_decoder& opShl(string)"
objmthd "base64_decoder" "base64_decoder& write_string(string)"
objmthd "base64_decoder" "bool get_good() const property"
objmthd "base64_decoder" "bool get_bad() const property"
objmthd "base64_decoder" "bool get_fail() const property"
objmthd "base64_decoder" "bool get_eof() const property"
objmthd "base64_decoder" "bool open(datastream@, int = 0, const string&in = \"\", int = 1)"
objprop "base64_decoder" "bool binary" 0 0
objprop "base64_decoder" "bool sync_rw_cursors" 0 0
objbeh "base64_encoder" 3 "base64_encoder@ base64_encoder()"
objbeh "base64_encoder" 3 "base64_encoder@ base64_encoder(datastream@, int = 0, const string&in = \"\", int = 1)"
objbeh "base64_encoder" 5 "void $beh5()"
objbeh "base64_encoder" 6 "void $beh6()"
objmthd "base64_encoder" "datastream@ opImplCast()"
objmthd "base64_encoder" "bool close(bool = false)"
objmthd "base64_encoder" "bool close_all()"
objmthd "base64_encoder" "bool get_active() const property"
objmthd "base64_encoder" "uint64 get_available() const property"
objmthd "base64_encoder" "bool seek(uint64)"
objmthd "base64_encoder" "bool seek_end(uint64 = 0)"
objmthd "base64_encoder" "bool seek_relative(int64)"
objmthd "base64_encoder" "int64 get_pos() const property"
objmthd "base64_encoder" "bool rseek(uint64)"
objmthd "base64_encoder" "bool rseek_end(uint64 = 0)"
objmthd "base64_encoder" "bool rseek_relative(int64)"
objmthd "base64_encoder" "int64 get_rpos() const property"
objmthd "base64_encoder" "bool wseek(uint64)"
objmthd "base64_encoder" "bool wseek_end(uint64 = 0)"
objmthd "base64_encoder" "bool wseek_relative(int64)"
objmthd "base64_encoder" "int64 get_wpos() const property"
objmthd "base64_encoder" "string read(uint = 0)"
objmthd "base64_encoder" "string read_line()"
objmthd "base64_encoder" "uint write(const string&in)"
objmthd "base64_encoder" "base64_encoder& opShr(int8&out)"
objmthd "base64_encoder" "int8 read_int8()"
objmthd "base64_encoder" "base64_encoder& opShl(int8)"
objmthd "base64_encoder" "base64_encoder& write_int8(int8)"
objmthd "base64_encoder" "base64_encoder& opShr(uint8&out)"
objmthd "base64_encoder" "uint8 read_uint8()"
objmthd "base64_encoder" "base64_encoder& opShl(uint8)"
objmthd "base64_encoder" "base64_encoder& write_uint8(uint8)"
objmthd "base64_encoder" "base64_encoder& opShr(int16&out)"
objmthd "base64_encoder" "int16 read_int16()"
objmthd "base64_encoder" "base64_encoder& opShl(int16)"
objmthd "base64_encoder" "base64_encoder& write_int16(int16)"
objmthd "base64_encoder" "base64_encoder& opShr(uint16&out)"
objmthd "base64_encoder" "uint16 read_uint16()"
objmthd "base64_encoder" "base64_encoder& opShl(uint16)"
objmthd "base64_encoder" "base64_encoder& write_uint16(uint16)"
objmthd "base64_encoder" "base64_encoder& opShr(int&out)"
objmthd "base64_encoder" "int read_int()"
objmthd "base64_encoder" "base64_encoder& opShl(int)"
objmthd "base64_encoder" "base64_encoder& write_int(int)"
objmthd "base64_encoder" "base64_encoder& opShr(uint&out)"
objmthd "base64_encoder" "uint read_uint()"
objmthd "base64_encoder" "base64_encoder& opShl(uint)"
objmthd "base64_encoder" "base64_encoder& write_uint(uint)"
objmthd "base64_encoder" "base64_encoder& opShr(int64&out)"
objmthd "base64_encoder" "int64 read_int64()"
objmthd "base64_encoder" "base64_encoder& opShl(int64)"
objmthd "base64_encoder" "base64_encoder& write_int64(int64)"
objmthd "base64_encoder" "base64_encoder& opShr(uint64&out)"
objmthd "base64_encoder" "uint64 read_uint64()"
objmthd "base64_encoder" "base64_encoder& opShl(uint64)"
objmthd "base64_encoder" "base64_encoder& write_uint64(uint64)"
objmthd "base64_encoder" "base64_encoder& opShr(float&out)"
objmthd "base64_encoder" "float read_float()"
objmthd "base64_encoder" "base64_encoder& opShl(float)"
objmthd "base64_encoder" "base64_encoder& write_float(float)"
objmthd "base64_encoder" "base64_encoder& opShr(double&out)"
objmthd "base64_encoder" "double read_double()"
objmthd "base64_encoder" "base64_encoder& opShl(double)"
objmthd "base64_encoder" "base64_encoder& write_double(double)"
objmthd "base64_encoder" "base64_encoder& opShr(string&out)"
objmthd "base64_encoder" "string read_string()"
objmthd "base64_encoder" "base64_encoder& opShl(string)"
objmthd "base64_encoder" "base64_encoder& write_string(string)"
objmthd "base64_encoder" "bool get_good() const property"
objmthd "base64_encoder" "bool get_bad() const property"
objmthd "base64_encoder" "bool get_fail() const property"
objmthd "base64_encoder" "bool get_eof() const property"
objmthd "base64_encoder" "bool open(datastream@, int = 0, const string&in = \"\", int = 1)"
objprop "base64_encoder" "bool binary" 0 0
objprop "base64_encoder" "bool sync_rw_cursors" 0 0
objbeh "random_reader" 3 "random_reader@ random_reader(const string&in = \"\", int = 1)"
objbeh "random_reader" 5 "void $beh5()"
objbeh "random_reader" 6 "void $beh6()"
objmthd "random_reader" "bool open(const string&in = \"\", int = 1)"
objmthd "random_reader" "datastream@ opImplCast()"
objmthd "random_reader" "bool close(bool = false)"
objmthd "random_reader" "bool close_all()"
objmthd "random_reader" "bool get_active() const property"
objmthd "random_reader" "uint64 get_available() const property"
objmthd "random_reader" "bool seek(uint64)"
objmthd "random_reader" "bool seek_end(uint64 = 0)"
objmthd "random_reader" "bool seek_relative(int64)"
objmthd "random_reader" "int64 get_pos() const property"
objmthd "random_reader" "bool rseek(uint64)"
objmthd "random_reader" "bool rseek_end(uint64 = 0)"
objmthd "random_reader" "bool rseek_relative(int64)"
objmthd "random_reader" "int64 get_rpos() const property"
objmthd "random_reader" "bool wseek(uint64)"
objmthd "random_reader" "bool wseek_end(uint64 = 0)"
objmthd "random_reader" "bool wseek_relative(int64)"
objmthd "random_reader" "int64 get_wpos() const property"
objmthd "random_reader" "string read(uint = 0)"
objmthd "random_reader" "string read_line()"
objmthd "random_reader" "uint write(const string&in)"
objmthd "random_reader" "random_reader& opShr(int8&out)"
objmthd "random_reader" "int8 read_int8()"
objmthd "random_reader" "random_reader& opShl(int8)"
objmthd "random_reader" "random_reader& write_int8(int8)"
objmthd "random_reader" "random_reader& opShr(uint8&out)"
objmthd "random_reader" "uint8 read_uint8()"
objmthd "random_reader" "random_reader& opShl(uint8)"
objmthd "random_reader" "random_reader& write_uint8(uint8)"
objmthd "random_reader" "random_reader& opShr(int16&out)"
objmthd "random_reader" "int16 read_int16()"
objmthd "random_reader" "random_reader& opShl(int16)"
objmthd "random_reader" "random_reader& write_int16(int16)"
objmthd "random_reader" "random_reader& opShr(uint16&out)"
objmthd "random_reader" "uint16 read_uint16()"
objmthd "random_reader" "random_reader& opShl(uint16)"
objmthd "random_reader" "random_reader& write_uint16(uint16)"
objmthd "random_reader" "random_reader& opShr(int&out)"
objmthd "random_reader" "int read_int()"
objmthd "random_reader" "random_reader& opShl(int)"
objmthd "random_reader" "random_reader& write_int(int)"
objmthd "random_reader" "random_reader& opShr(uint&out)"
objmthd "random_reader" "uint read_uint()"
objmthd "random_reader" "random_reader& opShl(uint)"
objmthd "random_reader" "random_reader& write_uint(uint)"
objmthd "random_reader" "random_reader& opShr(int64&out)"
objmthd "random_reader" "int64 read_int64()"
objmthd "random_reader" "random_reader& opShl(int64)"
objmthd "random_reader" "random_reader& write_int64(int64)"
objmthd "random_reader" "random_reader& opShr(uint64&out)"
objmthd "random_reader" "uint64 read_uint64()"
objmthd "random_reader" "random_reader& opShl(uint64)"
objmthd "random_reader" "random_reader& write_uint64(uint64)"
objmthd "random_reader" "random_reader& opShr(float&out)"
objmthd "random_reader" "float read_float()"
objmthd "random_reader" "random_reader& opShl(float)"
objmthd "random_reader" "random_reader& write_float(float)"
objmthd "random_reader" "random_reader& opShr(double&out)"
objmthd "random_reader" "double read_double()"
objmthd "random_reader" "random_reader& opShl(double)"
objmthd "random_reader" "random_reader& write_double(double)"
objmthd "random_reader" "random_reader& opShr(string&out)"
objmthd "random_reader" "string read_string()"
objmthd "random_reader" "random_reader& opShl(string)"
objmthd "random_reader" "random_reader& write_string(string)"
objmthd "random_reader" "bool get_good() const property"
objmthd "random_reader" "bool get_bad() const property"
objmthd "random_reader" "bool get_fail() const property"
objmthd "random_reader" "bool get_eof() const property"
objprop "random_reader" "bool binary" 0 0
objprop "random_reader" "bool sync_rw_cursors" 0 0
objbeh "discarding_writer" 3 "discarding_writer@ discarding_writer(const string&in = \"\", int = 1)"
objbeh "discarding_writer" 5 "void $beh5()"
objbeh "discarding_writer" 6 "void $beh6()"
objmthd "discarding_writer" "bool open(const string&in = \"\", int = 1)"
objmthd "discarding_writer" "datastream@ opImplCast()"
objmthd "discarding_writer" "bool close(bool = false)"
objmthd "discarding_writer" "bool close_all()"
objmthd "discarding_writer" "bool get_active() const property"
objmthd "discarding_writer" "uint64 get_available() const property"
objmthd "discarding_writer" "bool seek(uint64)"
objmthd "discarding_writer" "bool seek_end(uint64 = 0)"
objmthd "discarding_writer" "bool seek_relative(int64)"
objmthd "discarding_writer" "int64 get_pos() const property"
objmthd "discarding_writer" "bool rseek(uint64)"
objmthd "discarding_writer" "bool rseek_end(uint64 = 0)"
objmthd "discarding_writer" "bool rseek_relative(int64)"
objmthd "discarding_writer" "int64 get_rpos() const property"
objmthd "discarding_writer" "bool wseek(uint64)"
objmthd "discarding_writer" "bool wseek_end(uint64 = 0)"
objmthd "discarding_writer" "bool wseek_relative(int64)"
objmthd "discarding_writer" "int64 get_wpos() const property"
objmthd "discarding_writer" "string read(uint = 0)"
objmthd "discarding_writer" "string read_line()"
objmthd "discarding_writer" "uint write(const string&in)"
objmthd "discarding_writer" "discarding_writer& opShr(int8&out)"
objmthd "discarding_writer" "int8 read_int8()"
objmthd "discarding_writer" "discarding_writer& opShl(int8)"
objmthd "discarding_writer" "discarding_writer& write_int8(int8)"
objmthd "discarding_writer" "discarding_writer& opShr(uint8&out)"
objmthd "discarding_writer" "uint8 read_uint8()"
objmthd "discarding_writer" "discarding_writer& opShl(uint8)"
objmthd "discarding_writer" "discarding_writer& write_uint8(uint8)"
objmthd "discarding_writer" "discarding_writer& opShr(int16&out)"
objmthd "discarding_writer" "int16 read_int16()"
objmthd "discarding_writer" "discarding_writer& opShl(int16)"
objmthd "discarding_writer" "discarding_writer& write_int16(int16)"
objmthd "discarding_writer" "discarding_writer& opShr(uint16&out)"
objmthd "discarding_writer" "uint16 read_uint16()"
objmthd "discarding_writer" "discarding_writer& opShl(uint16)"
objmthd "discarding_writer" "discarding_writer& write_uint16(uint16)"
objmthd "discarding_writer" "discarding_writer& opShr(int&out)"
objmthd "discarding_writer" "int read_int()"
objmthd "discarding_writer" "discarding_writer& opShl(int)"
objmthd "discarding_writer" "discarding_writer& write_int(int)"
objmthd "discarding_writer" "discarding_writer& opShr(uint&out)"
objmthd "discarding_writer" "uint read_uint()"
objmthd "discarding_writer" "discarding_writer& opShl(uint)"
objmthd "discarding_writer" "discarding_writer& write_uint(uint)"
objmthd "discarding_writer" "discarding_writer& opShr(int64&out)"
objmthd "discarding_writer" "int64 read_int64()"
objmthd "discarding_writer" "discarding_writer& opShl(int64)"
objmthd "discarding_writer" "discarding_writer& write_int64(int64)"
objmthd "discarding_writer" "discarding_writer& opShr(uint64&out)"
objmthd "discarding_writer" "uint64 read_uint64()"
objmthd "discarding_writer" "discarding_writer& opShl(uint64)"
objmthd "discarding_writer" "discarding_writer& write_uint64(uint64)"
objmthd "discarding_writer" "discarding_writer& opShr(float&out)"
objmthd "discarding_writer" "float read_float()"
objmthd "discarding_writer" "discarding_writer& opShl(float)"
objmthd "discarding_writer" "discarding_writer& write_float(float)"
objmthd "discarding_writer" "discarding_writer& opShr(double&out)"
objmthd "discarding_writer" "double read_double()"
objmthd "discarding_writer" "discarding_writer& opShl(double)"
objmthd "discarding_writer" "discarding_writer& write_double(double)"
objmthd "discarding_writer" "discarding_writer& opShr(string&out)"
objmthd "discarding_writer" "string read_string()"
objmthd "discarding_writer" "discarding_writer& opShl(string)"
objmthd "discarding_writer" "discarding_writer& write_string(string)"
objmthd "discarding_writer" "bool get_good() const property"
objmthd "discarding_writer" "bool get_bad() const property"
objmthd "discarding_writer" "bool get_fail() const property"
objmthd "discarding_writer" "bool get_eof() const property"
objprop "discarding_writer" "bool binary" 0 0
objprop "discarding_writer" "bool sync_rw_cursors" 0 0
objbeh "duplicating_reader" 3 "duplicating_reader@ duplicating_reader()"
objbeh "duplicating_reader" 3 "duplicating_reader@ duplicating_reader(datastream@, const string&in = \"\", int = 1)"
objbeh "duplicating_reader" 5 "void $beh5()"
objbeh "duplicating_reader" 6 "void $beh6()"
objmthd "duplicating_reader" "datastream@ opImplCast()"
objmthd "duplicating_reader" "bool close(bool = false)"
objmthd "duplicating_reader" "bool close_all()"
objmthd "duplicating_reader" "bool get_active() const property"
objmthd "duplicating_reader" "uint64 get_available() const property"
objmthd "duplicating_reader" "bool seek(uint64)"
objmthd "duplicating_reader" "bool seek_end(uint64 = 0)"
objmthd "duplicating_reader" "bool seek_relative(int64)"
objmthd "duplicating_reader" "int64 get_pos() const property"
objmthd "duplicating_reader" "bool rseek(uint64)"
objmthd "duplicating_reader" "bool rseek_end(uint64 = 0)"
objmthd "duplicating_reader" "bool rseek_relative(int64)"
objmthd "duplicating_reader" "int64 get_rpos() const property"
objmthd "duplicating_reader" "bool wseek(uint64)"
objmthd "duplicating_reader" "bool wseek_end(uint64 = 0)"
objmthd "duplicating_reader" "bool wseek_relative(int64)"
objmthd "duplicating_reader" "int64 get_wpos() const property"
objmthd "duplicating_reader" "string read(uint = 0)"
objmthd "duplicating_reader" "string read_line()"
objmthd "duplicating_reader" "uint write(const string&in)"
objmthd "duplicating_reader" "duplicating_reader& opShr(int8&out)"
objmthd "duplicating_reader" "int8 read_int8()"
objmthd "duplicating_reader" "duplicating_reader& opShl(int8)"
objmthd "duplicating_reader" "duplicating_reader& write_int8(int8)"
objmthd "duplicating_reader" "duplicating_reader& opShr(uint8&out)"
objmthd "duplicating_reader" "uint8 read_uint8()"
objmthd "duplicating_reader" "duplicating_reader& opShl(uint8)"
objmthd "duplicating_reader" "duplicating_reader& write_uint8(uint8)"
objmthd "duplicating_reader" "duplicating_reader& opShr(int16&out)"
objmthd "duplicating_reader" "int16 read_int16()"
objmthd "duplicating_reader" "duplicating_reader& opShl(int16)"
objmthd "duplicating_reader" "duplicating_reader& write_int16(int16)"
objmthd "duplicating_reader" "duplicating_reader& opShr(uint16&out)"
objmthd "duplicating_reader" "uint16 read_uint16()"
objmthd "duplicating_reader" "duplicating_reader& opShl(uint16)"
objmthd "duplicating_reader" "duplicating_reader& write_uint16(uint16)"
objmthd "duplicating_reader" "duplicating_reader& opShr(int&out)"
objmthd "duplicating_reader" "int read_int()"
objmthd "duplicating_reader" "duplicating_reader& opShl(int)"
objmthd "duplicating_reader" "duplicating_reader& write_int(int)"
objmthd "duplicating_reader" "duplicating_reader& opShr(uint&out)"
objmthd "duplicating_reader" "uint read_uint()"
objmthd "duplicating_reader" "duplicating_reader& opShl(uint)"
objmthd "duplicating_reader" "duplicating_reader& write_uint(uint)"
objmthd "duplicating_reader" "duplicating_reader& opShr(int64&out)"
objmthd "duplicating_reader" "int64 read_int64()"
objmthd "duplicating_reader" "duplicating_reader& opShl(int64)"
objmthd "duplicating_reader" "duplicating_reader& write_int64(int64)"
objmthd "duplicating_reader" "duplicating_reader& opShr(uint64&out)"
objmthd "duplicating_reader" "uint64 read_uint64()"
objmthd "duplicating_reader" "duplicating_reader& opShl(uint64)"
objmthd "duplicating_reader" "duplicating_reader& write_uint64(uint64)"
objmthd "duplicating_reader" "duplicating_reader& opShr(float&out)"
objmthd "duplicating_reader" "float read_float()"
objmthd "duplicating_reader" "duplicating_reader& opShl(float)"
objmthd "duplicating_reader" "duplicating_reader& write_float(float)"
objmthd "duplicating_reader" "duplicating_reader& opShr(double&out)"
objmthd "duplicating_reader" "double read_double()"
objmthd "duplicating_reader" "duplicating_reader& opShl(double)"
objmthd "duplicating_reader" "duplicating_reader& write_double(double)"
objmthd "duplicating_reader" "duplicating_reader& opShr(string&out)"
objmthd "duplicating_reader" "string read_string()"
objmthd "duplicating_reader" "duplicating_reader& opShl(string)"
objmthd "duplicating_reader" "duplicating_reader& write_string(string)"
objmthd "duplicating_reader" "bool get_good() const property"
objmthd "duplicating_reader" "bool get_bad() const property"
objmthd "duplicating_reader" "bool get_fail() const property"
objmthd "duplicating_reader" "bool get_eof() const property"
objmthd "duplicating_reader" "bool open(datastream@, const string&in = \"\", int = 1)"
objmthd "duplicating_reader" "duplicating_reader@ opAdd(datastream@)"
objmthd "duplicating_reader" "duplicating_reader@ opAddAssign(datastream@)"
objmthd "duplicating_reader" "duplicating_reader@ add(datastream@)"
objprop "duplicating_reader" "bool binary" 0 0
objprop "duplicating_reader" "bool sync_rw_cursors" 0 0
objbeh "duplicating_writer" 3 "duplicating_writer@ duplicating_writer(const string&in = \"\", int = 1)"
objbeh "duplicating_writer" 3 "duplicating_writer@ duplicating_writer(datastream@, const string&in = \"\", int = 1)"
objbeh "duplicating_writer" 5 "void $beh5()"
objbeh "duplicating_writer" 6 "void $beh6()"
objmthd "duplicating_writer" "bool open(const string&in = \"\", int = 1)"
objmthd "duplicating_writer" "datastream@ opImplCast()"
objmthd "duplicating_writer" "bool close(bool = false)"
objmthd "duplicating_writer" "bool close_all()"
objmthd "duplicating_writer" "bool get_active() const property"
objmthd "duplicating_writer" "uint64 get_available() const property"
objmthd "duplicating_writer" "bool seek(uint64)"
objmthd "duplicating_writer" "bool seek_end(uint64 = 0)"
objmthd "duplicating_writer" "bool seek_relative(int64)"
objmthd "duplicating_writer" "int64 get_pos() const property"
objmthd "duplicating_writer" "bool rseek(uint64)"
objmthd "duplicating_writer" "bool rseek_end(uint64 = 0)"
objmthd "duplicating_writer" "bool rseek_relative(int64)"
objmthd "duplicating_writer" "int64 get_rpos() const property"
objmthd "duplicating_writer" "bool wseek(uint64)"
objmthd "duplicating_writer" "bool wseek_end(uint64 = 0)"
objmthd "duplicating_writer" "bool wseek_relative(int64)"
objmthd "duplicating_writer" "int64 get_wpos() const property"
objmthd "duplicating_writer" "string read(uint = 0)"
objmthd "duplicating_writer" "string read_line()"
objmthd "duplicating_writer" "uint write(const string&in)"
objmthd "duplicating_writer" "duplicating_writer& opShr(int8&out)"
objmthd "duplicating_writer" "int8 read_int8()"
objmthd "duplicating_writer" "duplicating_writer& opShl(int8)"
objmthd "duplicating_writer" "duplicating_writer& write_int8(int8)"
objmthd "duplicating_writer" "duplicating_writer& opShr(uint8&out)"
objmthd "duplicating_writer" "uint8 read_uint8()"
objmthd "duplicating_writer" "duplicating_writer& opShl(uint8)"
objmthd "duplicating_writer" "duplicating_writer& write_uint8(uint8)"
objmthd "duplicating_writer" "duplicating_writer& opShr(int16&out)"
objmthd "duplicating_writer" "int16 read_int16()"
objmthd "duplicating_writer" "duplicating_writer& opShl(int16)"
objmthd "duplicating_writer" "duplicating_writer& write_int16(int16)"
objmthd "duplicating_writer" "duplicating_writer& opShr(uint16&out)"
objmthd "duplicating_writer" "uint16 read_uint16()"
objmthd "duplicating_writer" "duplicating_writer& opShl(uint16)"
objmthd "duplicating_writer" "duplicating_writer& write_uint16(uint16)"
objmthd "duplicating_writer" "duplicating_writer& opShr(int&out)"
objmthd "duplicating_writer" "int read_int()"
objmthd "duplicating_writer" "duplicating_writer& opShl(int)"
objmthd "duplicating_writer" "duplicating_writer& write_int(int)"
objmthd "duplicating_writer" "duplicating_writer& opShr(uint&out)"
objmthd "duplicating_writer" "uint read_uint()"
objmthd "duplicating_writer" "duplicating_writer& opShl(uint)"
objmthd "duplicating_writer" "duplicating_writer& write_uint(uint)"
objmthd "duplicating_writer" "duplicating_writer& opShr(int64&out)"
objmthd "duplicating_writer" "int64 read_int64()"
objmthd "duplicating_writer" "duplicating_writer& opShl(int64)"
objmthd "duplicating_writer" "duplicating_writer& write_int64(int64)"
objmthd "duplicating_writer" "duplicating_writer& opShr(uint64&out)"
objmthd "duplicating_writer" "uint64 read_uint64()"
objmthd "duplicating_writer" "duplicating_writer& opShl(uint64)"
objmthd "duplicating_writer" "duplicating_writer& write_uint64(uint64)"
objmthd "duplicating_writer" "duplicating_writer& opShr(float&out)"
objmthd "duplicating_writer" "float read_float()"
objmthd "duplicating_writer" "duplicating_writer& opShl(float)"
objmthd "duplicating_writer" "duplicating_writer& write_float(float)"
objmthd "duplicating_writer" "duplicating_writer& opShr(double&out)"
objmthd "duplicating_writer" "double read_double()"
objmthd "duplicating_writer" "duplicating_writer& opShl(double)"
objmthd "duplicating_writer" "duplicating_writer& write_double(double)"
objmthd "duplicating_writer" "duplicating_writer& opShr(string&out)"
objmthd "duplicating_writer" "string read_string()"
objmthd "duplicating_writer" "duplicating_writer& opShl(string)"
objmthd "duplicating_writer" "duplicating_writer& write_string(string)"
objmthd "duplicating_writer" "bool get_good() const property"
objmthd "duplicating_writer" "bool get_bad() const property"
objmthd "duplicating_writer" "bool get_fail() const property"
objmthd "duplicating_writer" "bool get_eof() const property"
objmthd "duplicating_writer" "bool open(datastream@, const string&in = \"\", int = 1)"
objmthd "duplicating_writer" "duplicating_writer@ opAdd(datastream@)"
objmthd "duplicating_writer" "duplicating_writer@ opAddAssign(datastream@)"
objmthd "duplicating_writer" "duplicating_writer@ add(datastream@)"
objprop "duplicating_writer" "bool binary" 0 0
objprop "duplicating_writer" "bool sync_rw_cursors" 0 0
objbeh "deflating_reader" 3 "deflating_reader@ deflating_reader()"
objbeh "deflating_reader" 3 "deflating_reader@ deflating_reader(datastream@, compression_method = COMPRESSION_METHOD_ZLIB, int = 9, const string&in = \"\", int = 1)"
objbeh "deflating_reader" 5 "void $beh5()"
objbeh "deflating_reader" 6 "void $beh6()"
objmthd "deflating_reader" "datastream@ opImplCast()"
objmthd "deflating_reader" "bool close(bool = false)"
objmthd "deflating_reader" "bool close_all()"
objmthd "deflating_reader" "bool get_active() const property"
objmthd "deflating_reader" "uint64 get_available() const property"
objmthd "deflating_reader" "bool seek(uint64)"
objmthd "deflating_reader" "bool seek_end(uint64 = 0)"
objmthd "deflating_reader" "bool seek_relative(int64)"
objmthd "deflating_reader" "int64 get_pos() const property"
objmthd "deflating_reader" "bool rseek(uint64)"
objmthd "deflating_reader" "bool rseek_end(uint64 = 0)"
objmthd "deflating_reader" "bool rseek_relative(int64)"
objmthd "deflating_reader" "int64 get_rpos() const property"
objmthd "deflating_reader" "bool wseek(uint64)"
objmthd "deflating_reader" "bool wseek_end(uint64 = 0)"
objmthd "deflating_reader" "bool wseek_relative(int64)"
objmthd "deflating_reader" "int64 get_wpos() const property"
objmthd "deflating_reader" "string read(uint = 0)"
objmthd "deflating_reader" "string read_line()"
objmthd "deflating_reader" "uint write(const string&in)"
objmthd "deflating_reader" "deflating_reader& opShr(int8&out)"
objmthd "deflating_reader" "int8 read_int8()"
objmthd "deflating_reader" "deflating_reader& opShl(int8)"
objmthd "deflating_reader" "deflating_reader& write_int8(int8)"
objmthd "deflating_reader" "deflating_reader& opShr(uint8&out)"
objmthd "deflating_reader" "uint8 read_uint8()"
objmthd "deflating_reader" "deflating_reader& opShl(uint8)"
objmthd "deflating_reader" "deflating_reader& write_uint8(uint8)"
objmthd "deflating_reader" "deflating_reader& opShr(int16&out)"
objmthd "deflating_reader" "int16 read_int16()"
objmthd "deflating_reader" "deflating_reader& opShl(int16)"
objmthd "deflating_reader" "deflating_reader& write_int16(int16)"
objmthd "deflating_reader" "deflating_reader& opShr(uint16&out)"
objmthd "deflating_reader" "uint16 read_uint16()"
objmthd "deflating_reader" "deflating_reader& opShl(uint16)"
objmthd "deflating_reader" "deflating_reader& write_uint16(uint16)"
objmthd "deflating_reader" "deflating_reader& opShr(int&out)"
objmthd "deflating_reader" "int read_int()"
objmthd "deflating_reader" "deflating_reader& opShl(int)"
objmthd "deflating_reader" "deflating_reader& write_int(int)"
objmthd "deflating_reader" "deflating_reader& opShr(uint&out)"
objmthd "deflating_reader" "uint read_uint()"
objmthd "deflating_reader" "deflating_reader& opShl(uint)"
objmthd "deflating_reader" "deflating_reader& write_uint(uint)"
objmthd "deflating_reader" "deflating_reader& opShr(int64&out)"
objmthd "deflating_reader" "int64 read_int64()"
objmthd "deflating_reader" "deflating_reader& opShl(int64)"
objmthd "deflating_reader" "deflating_reader& write_int64(int64)"
objmthd "deflating_reader" "deflating_reader& opShr(uint64&out)"
objmthd "deflating_reader" "uint64 read_uint64()"
objmthd "deflating_reader" "deflating_reader& opShl(uint64)"
objmthd "deflating_reader" "deflating_reader& write_uint64(uint64)"
objmthd "deflating_reader" "deflating_reader& opShr(float&out)"
objmthd "deflating_reader" "float read_float()"
objmthd "deflating_reader" "deflating_reader& opShl(float)"
objmthd "deflating_reader" "deflating_reader& write_float(float)"
objmthd "deflating_reader" "deflating_reader& opShr(double&out)"
objmthd "deflating_reader" "double read_double()"
objmthd "deflating_reader" "deflating_reader& opShl(double)"
objmthd "deflating_reader" "deflating_reader& write_double(double)"
objmthd "deflating_reader" "deflating_reader& opShr(string&out)"
objmthd "deflating_reader" "string read_string()"
objmthd "deflating_reader" "deflating_reader& opShl(string)"
objmthd "deflating_reader" "deflating_reader& write_string(string)"
objmthd "deflating_reader" "bool get_good() const property"
objmthd "deflating_reader" "bool get_bad() const property"
objmthd "deflating_reader" "bool get_fail() const property"
objmthd "deflating_reader" "bool get_eof() const property"
objmthd "deflating_reader" "bool open(datastream@, compression_method = COMPRESSION_METHOD_ZLIB, int = 9, const string&in = \"\", int = 1)"
objprop "deflating_reader" "bool binary" 0 0
objprop "deflating_reader" "bool sync_rw_cursors" 0 0
objbeh "deflating_writer" 3 "deflating_writer@ deflating_writer()"
objbeh "deflating_writer" 3 "deflating_writer@ deflating_writer(datastream@, compression_method = COMPRESSION_METHOD_ZLIB, int = 9, const string&in = \"\", int = 1)"
objbeh "deflating_writer" 5 "void $beh5()"
objbeh "deflating_writer" 6 "void $beh6()"
objmthd "deflating_writer" "datastream@ opImplCast()"
objmthd "deflating_writer" "bool close(bool = false)"
objmthd "deflating_writer" "bool close_all()"
objmthd "deflating_writer" "bool get_active() const property"
objmthd "deflating_writer" "uint64 get_available() const property"
objmthd "deflating_writer" "bool seek(uint64)"
objmthd "deflating_writer" "bool seek_end(uint64 = 0)"
objmthd "deflating_writer" "bool seek_relative(int64)"
objmthd "deflating_writer" "int64 get_pos() const property"
objmthd "deflating_writer" "bool rseek(uint64)"
objmthd "deflating_writer" "bool rseek_end(uint64 = 0)"
objmthd "deflating_writer" "bool rseek_relative(int64)"
objmthd "deflating_writer" "int64 get_rpos() const property"
objmthd "deflating_writer" "bool wseek(uint64)"
objmthd "deflating_writer" "bool wseek_end(uint64 = 0)"
objmthd "deflating_writer" "bool wseek_relative(int64)"
objmthd "deflating_writer" "int64 get_wpos() const property"
objmthd "deflating_writer" "string read(uint = 0)"
objmthd "deflating_writer" "string read_line()"
objmthd "deflating_writer" "uint write(const string&in)"
objmthd "deflating_writer" "deflating_writer& opShr(int8&out)"
objmthd "deflating_writer" "int8 read_int8()"
objmthd "deflating_writer" "deflating_writer& opShl(int8)"
objmthd "deflating_writer" "deflating_writer& write_int8(int8)"
objmthd "deflating_writer" "deflating_writer& opShr(uint8&out)"
objmthd "deflating_writer" "uint8 read_uint8()"
objmthd "deflating_writer" "deflating_writer& opShl(uint8)"
objmthd "deflating_writer" "deflating_writer& write_uint8(uint8)"
objmthd "deflating_writer" "deflating_writer& opShr(int16&out)"
objmthd "deflating_writer" "int16 read_int16()"
objmthd "deflating_writer" "deflating_writer& opShl(int16)"
objmthd "deflating_writer" "deflating_writer& write_int16(int16)"
objmthd "deflating_writer" "deflating_writer& opShr(uint16&out)"
objmthd "deflating_writer" "uint16 read_uint16()"
objmthd "deflating_writer" "deflating_writer& opShl(uint16)"
objmthd "deflating_writer" "deflating_writer& write_uint16(uint16)"
objmthd "deflating_writer" "deflating_writer& opShr(int&out)"
objmthd "deflating_writer" "int read_int()"
objmthd "deflating_writer" "deflating_writer& opShl(int)"
objmthd "deflating_writer" "deflating_writer& write_int(int)"
objmthd "deflating_writer" "deflating_writer& opShr(uint&out)"
objmthd "deflating_writer" "uint read_uint()"
objmthd "deflating_writer" "deflating_writer& opShl(uint)"
objmthd "deflating_writer" "deflating_writer& write_uint(uint)"
objmthd "deflating_writer" "deflating_writer& opShr(int64&out)"
objmthd "deflating_writer" "int64 read_int64()"
objmthd "deflating_writer" "deflating_writer& opShl(int64)"
objmthd "deflating_writer" "deflating_writer& write_int64(int64)"
objmthd "deflating_writer" "deflating_writer& opShr(uint64&out)"
objmthd "deflating_writer" "uint64 read_uint64()"
objmthd "deflating_writer" "deflating_writer& opShl(uint64)"
objmthd "deflating_writer" "deflating_writer& write_uint64(uint64)"
objmthd "deflating_writer" "deflating_writer& opShr(float&out)"
objmthd "deflating_writer" "float read_float()"
objmthd "deflating_writer" "deflating_writer& opShl(float)"
objmthd "deflating_writer" "deflating_writer& write_float(float)"
objmthd "deflating_writer" "deflating_writer& opShr(double&out)"
objmthd "deflating_writer" "double read_double()"
objmthd "deflating_writer" "deflating_writer& opShl(double)"
objmthd "deflating_writer" "deflating_writer& write_double(double)"
objmthd "deflating_writer" "deflating_writer& opShr(string&out)"
objmthd "deflating_writer" "string read_string()"
objmthd "deflating_writer" "deflating_writer& opShl(string)"
objmthd "deflating_writer" "deflating_writer& write_string(string)"
objmthd "deflating_writer" "bool get_good() const property"
objmthd "deflating_writer" "bool get_bad() const property"
objmthd "deflating_writer" "bool get_fail() const property"
objmthd "deflating_writer" "bool get_eof() const property"
objmthd "deflating_writer" "bool open(datastream@, compression_method = COMPRESSION_METHOD_ZLIB, int = 9, const string&in = \"\", int = 1)"
objprop "deflating_writer" "bool binary" 0 0
objprop "deflating_writer" "bool sync_rw_cursors" 0 0
objbeh "inflating_reader" 3 "inflating_reader@ inflating_reader()"
objbeh "inflating_reader" 3 "inflating_reader@ inflating_reader(datastream@, compression_method = COMPRESSION_METHOD_ZLIB, const string&in = \"\", int = 1)"
objbeh "inflating_reader" 5 "void $beh5()"
objbeh "inflating_reader" 6 "void $beh6()"
objmthd "inflating_reader" "datastream@ opImplCast()"
objmthd "inflating_reader" "bool close(bool = false)"
objmthd "inflating_reader" "bool close_all()"
objmthd "inflating_reader" "bool get_active() const property"
objmthd "inflating_reader" "uint64 get_available() const property"
objmthd "inflating_reader" "bool seek(uint64)"
objmthd "inflating_reader" "bool seek_end(uint64 = 0)"
objmthd "inflating_reader" "bool seek_relative(int64)"
objmthd "inflating_reader" "int64 get_pos() const property"
objmthd "inflating_reader" "bool rseek(uint64)"
objmthd "inflating_reader" "bool rseek_end(uint64 = 0)"
objmthd "inflating_reader" "bool rseek_relative(int64)"
objmthd "inflating_reader" "int64 get_rpos() const property"
objmthd "inflating_reader" "bool wseek(uint64)"
objmthd "inflating_reader" "bool wseek_end(uint64 = 0)"
objmthd "inflating_reader" "bool wseek_relative(int64)"
objmthd "inflating_reader" "int64 get_wpos() const property"
objmthd "inflating_reader" "string read(uint = 0)"
objmthd "inflating_reader" "string read_line()"
objmthd "inflating_reader" "uint write(const string&in)"
objmthd "inflating_reader" "inflating_reader& opShr(int8&out)"
objmthd "inflating_reader" "int8 read_int8()"
objmthd "inflating_reader" "inflating_reader& opShl(int8)"
objmthd "inflating_reader" "inflating_reader& write_int8(int8)"
objmthd "inflating_reader" "inflating_reader& opShr(uint8&out)"
objmthd "inflating_reader" "uint8 read_uint8()"
objmthd "inflating_reader" "inflating_reader& opShl(uint8)"
objmthd "inflating_reader" "inflating_reader& write_uint8(uint8)"
objmthd "inflating_reader" "inflating_reader& opShr(int16&out)"
objmthd "inflating_reader" "int16 read_int16()"
objmthd "inflating_reader" "inflating_reader& opShl(int16)"
objmthd "inflating_reader" "inflating_reader& write_int16(int16)"
objmthd "inflating_reader" "inflating_reader& opShr(uint16&out)"
objmthd "inflating_reader" "uint16 read_uint16()"
objmthd "inflating_reader" "inflating_reader& opShl(uint16)"
objmthd "inflating_reader" "inflating_reader& write_uint16(uint16)"
objmthd "inflating_reader" "inflating_reader& opShr(int&out)"
objmthd "inflating_reader" "int read_int()"
objmthd "inflating_reader" "inflating_reader& opShl(int)"
objmthd "inflating_reader" "inflating_reader& write_int(int)"
objmthd "inflating_reader" "inflating_reader& opShr(uint&out)"
objmthd "inflating_reader" "uint read_uint()"
objmthd "inflating_reader" "inflating_reader& opShl(uint)"
objmthd "inflating_reader" "inflating_reader& write_uint(uint)"
objmthd "inflating_reader" "inflating_reader& opShr(int64&out)"
objmthd "inflating_reader" "int64 read_int64()"
objmthd "inflating_reader" "inflating_reader& opShl(int64)"
objmthd "inflating_reader" "inflating_reader& write_int64(int64)"
objmthd "inflating_reader" "inflating_reader& opShr(uint64&out)"
objmthd "inflating_reader" "uint64 read_uint64()"
objmthd "inflating_reader" "inflating_reader& opShl(uint64)"
objmthd "inflating_reader" "inflating_reader& write_uint64(uint64)"
objmthd "inflating_reader" "inflating_reader& opShr(float&out)"
objmthd "inflating_reader" "float read_float()"
objmthd "inflating_reader" "inflating_reader& opShl(float)"
objmthd "inflating_reader" "inflating_reader& write_float(float)"
objmthd "inflating_reader" "inflating_reader& opShr(double&out)"
objmthd "inflating_reader" "double read_double()"
objmthd "inflating_reader" "inflating_reader& opShl(double)"
objmthd "inflating_reader" "inflating_reader& write_double(double)"
objmthd "inflating_reader" "inflating_reader& opShr(string&out)"
objmthd "inflating_reader" "string read_string()"
objmthd "inflating_reader" "inflating_reader& opShl(string)"
objmthd "inflating_reader" "inflating_reader& write_string(string)"
objmthd "inflating_reader" "bool get_good() const property"
objmthd "inflating_reader" "bool get_bad() const property"
objmthd "inflating_reader" "bool get_fail() const property"
objmthd "inflating_reader" "bool get_eof() const property"
objmthd "inflating_reader" "bool open(datastream@, compression_method = COMPRESSION_METHOD_ZLIB, const string&in = \"\", int = 1)"
objprop "inflating_reader" "bool binary" 0 0
objprop "inflating_reader" "bool sync_rw_cursors" 0 0
objbeh "inflating_writer" 3 "inflating_writer@ inflating_writer()"
objbeh "inflating_writer" 3 "inflating_writer@ inflating_writer(datastream@, compression_method = COMPRESSION_METHOD_ZLIB, const string&in = \"\", int = 1)"
objbeh "inflating_writer" 5 "void $beh5()"
objbeh "inflating_writer" 6 "void $beh6()"
objmthd "inflating_writer" "datastream@ opImplCast()"
objmthd "inflating_writer" "bool close(bool = false)"
objmthd "inflating_writer" "bool close_all()"
objmthd "inflating_writer" "bool get_active() const property"
objmthd "inflating_writer" "uint64 get_available() const property"
objmthd "inflating_writer" "bool seek(uint64)"
objmthd "inflating_writer" "bool seek_end(uint64 = 0)"
objmthd "inflating_writer" "bool seek_relative(int64)"
objmthd "inflating_writer" "int64 get_pos() const property"
objmthd "inflating_writer" "bool rseek(uint64)"
objmthd "inflating_writer" "bool rseek_end(uint64 = 0)"
objmthd "inflating_writer" "bool rseek_relative(int64)"
objmthd "inflating_writer" "int64 get_rpos() const property"
objmthd "inflating_writer" "bool wseek(uint64)"
objmthd "inflating_writer" "bool wseek_end(uint64 = 0)"
objmthd "inflating_writer" "bool wseek_relative(int64)"
objmthd "inflating_writer" "int64 get_wpos() const property"
objmthd "inflating_writer" "string read(uint = 0)"
objmthd "inflating_writer" "string read_line()"
objmthd "inflating_writer" "uint write(const string&in)"
objmthd "inflating_writer" "inflating_writer& opShr(int8&out)"
objmthd "inflating_writer" "int8 read_int8()"
objmthd "inflating_writer" "inflating_writer& opShl(int8)"
objmthd "inflating_writer" "inflating_writer& write_int8(int8)"
objmthd "inflating_writer" "inflating_writer& opShr(uint8&out)"
objmthd "inflating_writer" "uint8 read_uint8()"
objmthd "inflating_writer" "inflating_writer& opShl(uint8)"
objmthd "inflating_writer" "inflating_writer& write_uint8(uint8)"
objmthd "inflating_writer" "inflating_writer& opShr(int16&out)"
objmthd "inflating_writer" "int16 read_int16()"
objmthd "inflating_writer" "inflating_writer& opShl(int16)"
objmthd "inflating_writer" "inflating_writer& write_int16(int16)"
objmthd "inflating_writer" "inflating_writer& opShr(uint16&out)"
objmthd "inflating_writer" "uint16 read_uint16()"
objmthd "inflating_writer" "inflating_writer& opShl(uint16)"
objmthd "inflating_writer" "inflating_writer& write_uint16(uint16)"
objmthd "inflating_writer" "inflating_writer& opShr(int&out)"
objmthd "inflating_writer" "int read_int()"
objmthd "inflating_writer" "inflating_writer& opShl(int)"
objmthd "inflating_writer" "inflating_writer& write_int(int)"
objmthd "inflating_writer" "inflating_writer& opShr(uint&out)"
objmthd "inflating_writer" "uint read_uint()"
objmthd "inflating_writer" "inflating_writer& opShl(uint)"
objmthd "inflating_writer" "inflating_writer& write_uint(uint)"
objmthd "inflating_writer" "inflating_writer& opShr(int64&out)"
objmthd "inflating_writer" "int64 read_int64()"
objmthd "inflating_writer" "inflating_writer& opShl(int64)"
objmthd "inflating_writer" "inflating_writer& write_int64(int64)"
objmthd "inflating_writer" "inflating_writer& opShr(uint64&out)"
objmthd "inflating_writer" "uint64 read_uint64()"
objmthd "inflating_writer" "inflating_writer& opShl(uint64)"
objmthd "inflating_writer" "inflating_writer& write_uint64(uint64)"
objmthd "inflating_writer" "inflating_writer& opShr(float&out)"
objmthd "inflating_writer" "float read_float()"
objmthd "inflating_writer" "inflating_writer& opShl(float)"
objmthd "inflating_writer" "inflating_writer& write_float(float)"
objmthd "inflating_writer" "inflating_writer& opShr(double&out)"
objmthd "inflating_writer" "double read_double()"
objmthd "inflating_writer" "inflating_writer& opShl(double)"
objmthd "inflating_writer" "inflating_writer& write_double(double)"
objmthd "inflating_writer" "inflating_writer& opShr(string&out)"
objmthd "inflating_writer" "string read_string()"
objmthd "inflating_writer" "inflating_writer& opShl(string)"
objmthd "inflating_writer" "inflating_writer& write_string(string)"
objmthd "inflating_writer" "bool get_good() const property"
objmthd "inflating_writer" "bool get_bad() const property"
objmthd "inflating_writer" "bool get_fail() const property"
objmthd "inflating_writer" "bool get_eof() const property"
objmthd "inflating_writer" "bool open(datastream@, compression_method = COMPRESSION_METHOD_ZLIB, const string&in = \"\", int = 1)"
objprop "inflating_writer" "bool binary" 0 0
objprop "inflating_writer" "bool sync_rw_cursors" 0 0
objbeh "counting_reader" 3 "counting_reader@ counting_reader()"
objbeh "counting_reader" 3 "counting_reader@ counting_reader(datastream@, const string&in = \"\", int = 1)"
objbeh "counting_reader" 5 "void $beh5()"
objbeh "counting_reader" 6 "void $beh6()"
objmthd "counting_reader" "datastream@ opImplCast()"
objmthd "counting_reader" "bool close(bool = false)"
objmthd "counting_reader" "bool close_all()"
objmthd "counting_reader" "bool get_active() const property"
objmthd "counting_reader" "uint64 get_available() const property"
objmthd "counting_reader" "bool seek(uint64)"
objmthd "counting_reader" "bool seek_end(uint64 = 0)"
objmthd "counting_reader" "bool seek_relative(int64)"
objmthd "counting_reader" "int64 get_pos() const property"
objmthd "counting_reader" "bool rseek(uint64)"
objmthd "counting_reader" "bool rseek_end(uint64 = 0)"
objmthd "counting_reader" "bool rseek_relative(int64)"
objmthd "counting_reader" "int64 get_rpos() const property"
objmthd "counting_reader" "bool wseek(uint64)"
objmthd "counting_reader" "bool wseek_end(uint64 = 0)"
objmthd "counting_reader" "bool wseek_relative(int64)"
objmthd "counting_reader" "int64 get_wpos() const property"
objmthd "counting_reader" "string read(uint = 0)"
objmthd "counting_reader" "string read_line()"
objmthd "counting_reader" "uint write(const string&in)"
objmthd "counting_reader" "counting_reader& opShr(int8&out)"
objmthd "counting_reader" "int8 read_int8()"
objmthd "counting_reader" "counting_reader& opShl(int8)"
objmthd "counting_reader" "counting_reader& write_int8(int8)"
objmthd "counting_reader" "counting_reader& opShr(uint8&out)"
objmthd "counting_reader" "uint8 read_uint8()"
objmthd "counting_reader" "counting_reader& opShl(uint8)"
objmthd "counting_reader" "counting_reader& write_uint8(uint8)"
objmthd "counting_reader" "counting_reader& opShr(int16&out)"
objmthd "counting_reader" "int16 read_int16()"
objmthd "counting_reader" "counting_reader& opShl(int16)"
objmthd "counting_reader" "counting_reader& write_int16(int16)"
objmthd "counting_reader" "counting_reader& opShr(uint16&out)"
objmthd "counting_reader" "uint16 read_uint16()"
objmthd "counting_reader" "counting_reader& opShl(uint16)"
objmthd "counting_reader" "counting_reader& write_uint16(uint16)"
objmthd "counting_reader" "counting_reader& opShr(int&out)"
objmthd "counting_reader" "int read_int()"
objmthd "counting_reader" "counting_reader& opShl(int)"
objmthd "counting_reader" "counting_reader& write_int(int)"
objmthd "counting_reader" "counting_reader& opShr(uint&out)"
objmthd "counting_reader" "uint read_uint()"
objmthd "counting_reader" "counting_reader& opShl(uint)"
objmthd "counting_reader" "counting_reader& write_uint(uint)"
objmthd "counting_reader" "counting_reader& opShr(int64&out)"
objmthd "counting_reader" "int64 read_int64()"
objmthd "counting_reader" "counting_reader& opShl(int64)"
objmthd "counting_reader" "counting_reader& write_int64(int64)"
objmthd "counting_reader" "counting_reader& opShr(uint64&out)"
objmthd "counting_reader" "uint64 read_uint64()"
objmthd "counting_reader" "counting_reader& opShl(uint64)"
objmthd "counting_reader" "counting_reader& write_uint64(uint64)"
objmthd "counting_reader" "counting_reader& opShr(float&out)"
objmthd "counting_reader" "float read_float()"
objmthd "counting_reader" "counting_reader& opShl(float)"
objmthd "counting_reader" "counting_reader& write_float(float)"
objmthd "counting_reader" "counting_reader& opShr(double&out)"
objmthd "counting_reader" "double read_double()"
objmthd "counting_reader" "counting_reader& opShl(double)"
objmthd "counting_reader" "counting_reader& write_double(double)"
objmthd "counting_reader" "counting_reader& opShr(string&out)"
objmthd "counting_reader" "string read_string()"
objmthd "counting_reader" "counting_reader& opShl(string)"
objmthd "counting_reader" "counting_reader& write_string(string)"
objmthd "counting_reader" "bool get_good() const property"
objmthd "counting_reader" "bool get_bad() const property"
objmthd "counting_reader" "bool get_fail() const property"
objmthd "counting_reader" "bool get_eof() const property"
objmthd "counting_reader" "bool open(datastream@, const string&in = \"\", int = 1)"
objmthd "counting_reader" "int64 get_chars() property"
objmthd "counting_reader" "int64 get_lines() property"
objmthd "counting_reader" "int64 get_current_line() property"
objmthd "counting_reader" "void reset()"
objmthd "counting_reader" "void set_current_line(int64)"
objmthd "counting_reader" "void add_chars(int64)"
objmthd "counting_reader" "void add_lines(int64)"
objmthd "counting_reader" "void add_pos(int64)"
objprop "counting_reader" "bool binary" 0 0
objprop "counting_reader" "bool sync_rw_cursors" 0 0
objbeh "counting_writer" 3 "counting_writer@ counting_writer()"
objbeh "counting_writer" 3 "counting_writer@ counting_writer(datastream@, const string&in = \"\", int = 1)"
objbeh "counting_writer" 5 "void $beh5()"
objbeh "counting_writer" 6 "void $beh6()"
objmthd "counting_writer" "datastream@ opImplCast()"
objmthd "counting_writer" "bool close(bool = false)"
objmthd "counting_writer" "bool close_all()"
objmthd "counting_writer" "bool get_active() const property"
objmthd "counting_writer" "uint64 get_available() const property"
objmthd "counting_writer" "bool seek(uint64)"
objmthd "counting_writer" "bool seek_end(uint64 = 0)"
objmthd "counting_writer" "bool seek_relative(int64)"
objmthd "counting_writer" "int64 get_pos() const property"
objmthd "counting_writer" "bool rseek(uint64)"
objmthd "counting_writer" "bool rseek_end(uint64 = 0)"
objmthd "counting_writer" "bool rseek_relative(int64)"
objmthd "counting_writer" "int64 get_rpos() const property"
objmthd "counting_writer" "bool wseek(uint64)"
objmthd "counting_writer" "bool wseek_end(uint64 = 0)"
objmthd "counting_writer" "bool wseek_relative(int64)"
objmthd "counting_writer" "int64 get_wpos() const property"
objmthd "counting_writer" "string read(uint = 0)"
objmthd "counting_writer" "string read_line()"
objmthd "counting_writer" "uint write(const string&in)"
objmthd "counting_writer" "counting_writer& opShr(int8&out)"
objmthd "counting_writer" "int8 read_int8()"
objmthd "counting_writer" "counting_writer& opShl(int8)"
objmthd "counting_writer" "counting_writer& write_int8(int8)"
objmthd "counting_writer" "counting_writer& opShr(uint8&out)"
objmthd "counting_writer" "uint8 read_uint8()"
objmthd "counting_writer" "counting_writer& opShl(uint8)"
objmthd "counting_writer" "counting_writer& write_uint8(uint8)"
objmthd "counting_writer" "counting_writer& opShr(int16&out)"
objmthd "counting_writer" "int16 read_int16()"
objmthd "counting_writer" "counting_writer& opShl(int16)"
objmthd "counting_writer" "counting_writer& write_int16(int16)"
objmthd "counting_writer" "counting_writer& opShr(uint16&out)"
objmthd "counting_writer" "uint16 read_uint16()"
objmthd "counting_writer" "counting_writer& opShl(uint16)"
objmthd "counting_writer" "counting_writer& write_uint16(uint16)"
objmthd "counting_writer" "counting_writer& opShr(int&out)"
objmthd "counting_writer" "int read_int()"
objmthd "counting_writer" "counting_writer& opShl(int)"
objmthd "counting_writer" "counting_writer& write_int(int)"
objmthd "counting_writer" "counting_writer& opShr(uint&out)"
objmthd "counting_writer" "uint read_uint()"
objmthd "counting_writer" "counting_writer& opShl(uint)"
objmthd "counting_writer" "counting_writer& write_uint(uint)"
objmthd "counting_writer" "counting_writer& opShr(int64&out)"
objmthd "counting_writer" "int64 read_int64()"
objmthd "counting_writer" "counting_writer& opShl(int64)"
objmthd "counting_writer" "counting_writer& write_int64(int64)"
objmthd "counting_writer" "counting_writer& opShr(uint64&out)"
objmthd "counting_writer" "uint64 read_uint64()"
objmthd "counting_writer" "counting_writer& opShl(uint64)"
objmthd "counting_writer" "counting_writer& write_uint64(uint64)"
objmthd "counting_writer" "counting_writer& opShr(float&out)"
objmthd "counting_writer" "float read_float()"
objmthd "counting_writer" "counting_writer& opShl(float)"
objmthd "counting_writer" "counting_writer& write_float(float)"
objmthd "counting_writer" "counting_writer& opShr(double&out)"
objmthd "counting_writer" "double read_double()"
objmthd "counting_writer" "counting_writer& opShl(double)"
objmthd "counting_writer" "counting_writer& write_double(double)"
objmthd "counting_writer" "counting_writer& opShr(string&out)"
objmthd "counting_writer" "string read_string()"
objmthd "counting_writer" "counting_writer& opShl(string)"
objmthd "counting_writer" "counting_writer& write_string(string)"
objmthd "counting_writer" "bool get_good() const property"
objmthd "counting_writer" "bool get_bad() const property"
objmthd "counting_writer" "bool get_fail() const property"
objmthd "counting_writer" "bool get_eof() const property"
objmthd "counting_writer" "bool open(datastream@, const string&in = \"\", int = 1)"
objmthd "counting_writer" "int64 get_chars() property"
objmthd "counting_writer" "int64 get_lines() property"
objmthd "counting_writer" "int64 get_current_line() property"
objmthd "counting_writer" "void reset()"
objmthd "counting_writer" "void set_current_line(int64)"
objmthd "counting_writer" "void add_chars(int64)"
objmthd "counting_writer" "void add_lines(int64)"
objmthd "counting_writer" "void add_pos(int64)"
objprop "counting_writer" "bool binary" 0 0
objprop "counting_writer" "bool sync_rw_cursors" 0 0
objbeh "line_converting_reader" 3 "line_converting_reader@ line_converting_reader()"
objbeh "line_converting_reader" 3 "line_converting_reader@ line_converting_reader(datastream@, const string&in = spec :: NEWLINE_DEFAULT, const string&in = \"\", int = 1)"
objbeh "line_converting_reader" 5 "void $beh5()"
objbeh "line_converting_reader" 6 "void $beh6()"
objmthd "line_converting_reader" "datastream@ opImplCast()"
objmthd "line_converting_reader" "bool close(bool = false)"
objmthd "line_converting_reader" "bool close_all()"
objmthd "line_converting_reader" "bool get_active() const property"
objmthd "line_converting_reader" "uint64 get_available() const property"
objmthd "line_converting_reader" "bool seek(uint64)"
objmthd "line_converting_reader" "bool seek_end(uint64 = 0)"
objmthd "line_converting_reader" "bool seek_relative(int64)"
objmthd "line_converting_reader" "int64 get_pos() const property"
objmthd "line_converting_reader" "bool rseek(uint64)"
objmthd "line_converting_reader" "bool rseek_end(uint64 = 0)"
objmthd "line_converting_reader" "bool rseek_relative(int64)"
objmthd "line_converting_reader" "int64 get_rpos() const property"
objmthd "line_converting_reader" "bool wseek(uint64)"
objmthd "line_converting_reader" "bool wseek_end(uint64 = 0)"
objmthd "line_converting_reader" "bool wseek_relative(int64)"
objmthd "line_converting_reader" "int64 get_wpos() const property"
objmthd "line_converting_reader" "string read(uint = 0)"
objmthd "line_converting_reader" "string read_line()"
objmthd "line_converting_reader" "uint write(const string&in)"
objmthd "line_converting_reader" "line_converting_reader& opShr(int8&out)"
objmthd "line_converting_reader" "int8 read_int8()"
objmthd "line_converting_reader" "line_converting_reader& opShl(int8)"
objmthd "line_converting_reader" "line_converting_reader& write_int8(int8)"
objmthd "line_converting_reader" "line_converting_reader& opShr(uint8&out)"
objmthd "line_converting_reader" "uint8 read_uint8()"
objmthd "line_converting_reader" "line_converting_reader& opShl(uint8)"
objmthd "line_converting_reader" "line_converting_reader& write_uint8(uint8)"
objmthd "line_converting_reader" "line_converting_reader& opShr(int16&out)"
objmthd "line_converting_reader" "int16 read_int16()"
objmthd "line_converting_reader" "line_converting_reader& opShl(int16)"
objmthd "line_converting_reader" "line_converting_reader& write_int16(int16)"
objmthd "line_converting_reader" "line_converting_reader& opShr(uint16&out)"
objmthd "line_converting_reader" "uint16 read_uint16()"
objmthd "line_converting_reader" "line_converting_reader& opShl(uint16)"
objmthd "line_converting_reader" "line_converting_reader& write_uint16(uint16)"
objmthd "line_converting_reader" "line_converting_reader& opShr(int&out)"
objmthd "line_converting_reader" "int read_int()"
objmthd "line_converting_reader" "line_converting_reader& opShl(int)"
objmthd "line_converting_reader" "line_converting_reader& write_int(int)"
objmthd "line_converting_reader" "line_converting_reader& opShr(uint&out)"
objmthd "line_converting_reader" "uint read_uint()"
objmthd "line_converting_reader" "line_converting_reader& opShl(uint)"
objmthd "line_converting_reader" "line_converting_reader& write_uint(uint)"
objmthd "line_converting_reader" "line_converting_reader& opShr(int64&out)"
objmthd "line_converting_reader" "int64 read_int64()"
objmthd "line_converting_reader" "line_converting_reader& opShl(int64)"
objmthd "line_converting_reader" "line_converting_reader& write_int64(int64)"
objmthd "line_converting_reader" "line_converting_reader& opShr(uint64&out)"
objmthd "line_converting_reader" "uint64 read_uint64()"
objmthd "line_converting_reader" "line_converting_reader& opShl(uint64)"
objmthd "line_converting_reader" "line_converting_reader& write_uint64(uint64)"
objmthd "line_converting_reader" "line_converting_reader& opShr(float&out)"
objmthd "line_converting_reader" "float read_float()"
objmthd "line_converting_reader" "line_converting_reader& opShl(float)"
objmthd "line_converting_reader" "line_converting_reader& write_float(float)"
objmthd "line_converting_reader" "line_converting_reader& opShr(double&out)"
objmthd "line_converting_reader" "double read_double()"
objmthd "line_converting_reader" "line_converting_reader& opShl(double)"
objmthd "line_converting_reader" "line_converting_reader& write_double(double)"
objmthd "line_converting_reader" "line_converting_reader& opShr(string&out)"
objmthd "line_converting_reader" "string read_string()"
objmthd "line_converting_reader" "line_converting_reader& opShl(string)"
objmthd "line_converting_reader" "line_converting_reader& write_string(string)"
objmthd "line_converting_reader" "bool get_good() const property"
objmthd "line_converting_reader" "bool get_bad() const property"
objmthd "line_converting_reader" "bool get_fail() const property"
objmthd "line_converting_reader" "bool get_eof() const property"
objmthd "line_converting_reader" "bool open(datastream@, const string&in = spec :: NEWLINE_DEFAULT, const string&in = \"\", int = 1)"
objprop "line_converting_reader" "bool binary" 0 0
objprop "line_converting_reader" "bool sync_rw_cursors" 0 0
objbeh "line_converting_writer" 3 "line_converting_writer@ line_converting_writer()"
objbeh "line_converting_writer" 3 "line_converting_writer@ line_converting_writer(datastream@, const string&in = spec :: NEWLINE_DEFAULT, const string&in = \"\", int = 1)"
objbeh "line_converting_writer" 5 "void $beh5()"
objbeh "line_converting_writer" 6 "void $beh6()"
objmthd "line_converting_writer" "datastream@ opImplCast()"
objmthd "line_converting_writer" "bool close(bool = false)"
objmthd "line_converting_writer" "bool close_all()"
objmthd "line_converting_writer" "bool get_active() const property"
objmthd "line_converting_writer" "uint64 get_available() const property"
objmthd "line_converting_writer" "bool seek(uint64)"
objmthd "line_converting_writer" "bool seek_end(uint64 = 0)"
objmthd "line_converting_writer" "bool seek_relative(int64)"
objmthd "line_converting_writer" "int64 get_pos() const property"
objmthd "line_converting_writer" "bool rseek(uint64)"
objmthd "line_converting_writer" "bool rseek_end(uint64 = 0)"
objmthd "line_converting_writer" "bool rseek_relative(int64)"
objmthd "line_converting_writer" "int64 get_rpos() const property"
objmthd "line_converting_writer" "bool wseek(uint64)"
objmthd "line_converting_writer" "bool wseek_end(uint64 = 0)"
objmthd "line_converting_writer" "bool wseek_relative(int64)"
objmthd "line_converting_writer" "int64 get_wpos() const property"
objmthd "line_converting_writer" "string read(uint = 0)"
objmthd "line_converting_writer" "string read_line()"
objmthd "line_converting_writer" "uint write(const string&in)"
objmthd "line_converting_writer" "line_converting_writer& opShr(int8&out)"
objmthd "line_converting_writer" "int8 read_int8()"
objmthd "line_converting_writer" "line_converting_writer& opShl(int8)"
objmthd "line_converting_writer" "line_converting_writer& write_int8(int8)"
objmthd "line_converting_writer" "line_converting_writer& opShr(uint8&out)"
objmthd "line_converting_writer" "uint8 read_uint8()"
objmthd "line_converting_writer" "line_converting_writer& opShl(uint8)"
objmthd "line_converting_writer" "line_converting_writer& write_uint8(uint8)"
objmthd "line_converting_writer" "line_converting_writer& opShr(int16&out)"
objmthd "line_converting_writer" "int16 read_int16()"
objmthd "line_converting_writer" "line_converting_writer& opShl(int16)"
objmthd "line_converting_writer" "line_converting_writer& write_int16(int16)"
objmthd "line_converting_writer" "line_converting_writer& opShr(uint16&out)"
objmthd "line_converting_writer" "uint16 read_uint16()"
objmthd "line_converting_writer" "line_converting_writer& opShl(uint16)"
objmthd "line_converting_writer" "line_converting_writer& write_uint16(uint16)"
objmthd "line_converting_writer" "line_converting_writer& opShr(int&out)"
objmthd "line_converting_writer" "int read_int()"
objmthd "line_converting_writer" "line_converting_writer& opShl(int)"
objmthd "line_converting_writer" "line_converting_writer& write_int(int)"
objmthd "line_converting_writer" "line_converting_writer& opShr(uint&out)"
objmthd "line_converting_writer" "uint read_uint()"
objmthd "line_converting_writer" "line_converting_writer& opShl(uint)"
objmthd "line_converting_writer" "line_converting_writer& write_uint(uint)"
objmthd "line_converting_writer" "line_converting_writer& opShr(int64&out)"
objmthd "line_converting_writer" "int64 read_int64()"
objmthd "line_converting_writer" "line_converting_writer& opShl(int64)"
objmthd "line_converting_writer" "line_converting_writer& write_int64(int64)"
objmthd "line_converting_writer" "line_converting_writer& opShr(uint64&out)"
objmthd "line_converting_writer" "uint64 read_uint64()"
objmthd "line_converting_writer" "line_converting_writer& opShl(uint64)"
objmthd "line_converting_writer" "line_converting_writer& write_uint64(uint64)"
objmthd "line_converting_writer" "line_converting_writer& opShr(float&out)"
objmthd "line_converting_writer" "float read_float()"
objmthd "line_converting_writer" "line_converting_writer& opShl(float)"
objmthd "line_converting_writer" "line_converting_writer& write_float(float)"
objmthd "line_converting_writer" "line_converting_writer& opShr(double&out)"
objmthd "line_converting_writer" "double read_double()"
objmthd "line_converting_writer" "line_converting_writer& opShl(double)"
objmthd "line_converting_writer" "line_converting_writer& write_double(double)"
objmthd "line_converting_writer" "line_converting_writer& opShr(string&out)"
objmthd "line_converting_writer" "string read_string()"
objmthd "line_converting_writer" "line_converting_writer& opShl(string)"
objmthd "line_converting_writer" "line_converting_writer& write_string(string)"
objmthd "line_converting_writer" "bool get_good() const property"
objmthd "line_converting_writer" "bool get_bad() const property"
objmthd "line_converting_writer" "bool get_fail() const property"
objmthd "line_converting_writer" "bool get_eof() const property"
objmthd "line_converting_writer" "bool open(datastream@, const string&in = spec :: NEWLINE_DEFAULT, const string&in = \"\", int = 1)"
objprop "line_converting_writer" "bool binary" 0 0
objprop "line_converting_writer" "bool sync_rw_cursors" 0 0
access 1000
objbeh "memory_reader" 3 "memory_reader@ memory_reader()"
objbeh "memory_reader" 3 "memory_reader@ memory_reader(uint64, uint64, const string&in = \"\", int = 1)"
objbeh "memory_reader" 5 "void $beh5()"
objbeh "memory_reader" 6 "void $beh6()"
objmthd "memory_reader" "datastream@ opImplCast()"
objmthd "memory_reader" "bool close(bool = false)"
objmthd "memory_reader" "bool close_all()"
objmthd "memory_reader" "bool get_active() const property"
objmthd "memory_reader" "uint64 get_available() const property"
objmthd "memory_reader" "bool seek(uint64)"
objmthd "memory_reader" "bool seek_end(uint64 = 0)"
objmthd "memory_reader" "bool seek_relative(int64)"
objmthd "memory_reader" "int64 get_pos() const property"
objmthd "memory_reader" "bool rseek(uint64)"
objmthd "memory_reader" "bool rseek_end(uint64 = 0)"
objmthd "memory_reader" "bool rseek_relative(int64)"
objmthd "memory_reader" "int64 get_rpos() const property"
objmthd "memory_reader" "bool wseek(uint64)"
objmthd "memory_reader" "bool wseek_end(uint64 = 0)"
objmthd "memory_reader" "bool wseek_relative(int64)"
objmthd "memory_reader" "int64 get_wpos() const property"
objmthd "memory_reader" "string read(uint = 0)"
objmthd "memory_reader" "string read_line()"
objmthd "memory_reader" "uint write(const string&in)"
objmthd "memory_reader" "memory_reader& opShr(int8&out)"
objmthd "memory_reader" "int8 read_int8()"
objmthd "memory_reader" "memory_reader& opShl(int8)"
objmthd "memory_reader" "memory_reader& write_int8(int8)"
objmthd "memory_reader" "memory_reader& opShr(uint8&out)"
objmthd "memory_reader" "uint8 read_uint8()"
objmthd "memory_reader" "memory_reader& opShl(uint8)"
objmthd "memory_reader" "memory_reader& write_uint8(uint8)"
objmthd "memory_reader" "memory_reader& opShr(int16&out)"
objmthd "memory_reader" "int16 read_int16()"
objmthd "memory_reader" "memory_reader& opShl(int16)"
objmthd "memory_reader" "memory_reader& write_int16(int16)"
objmthd "memory_reader" "memory_reader& opShr(uint16&out)"
objmthd "memory_reader" "uint16 read_uint16()"
objmthd "memory_reader" "memory_reader& opShl(uint16)"
objmthd "memory_reader" "memory_reader& write_uint16(uint16)"
objmthd "memory_reader" "memory_reader& opShr(int&out)"
objmthd "memory_reader" "int read_int()"
objmthd "memory_reader" "memory_reader& opShl(int)"
objmthd "memory_reader" "memory_reader& write_int(int)"
objmthd "memory_reader" "memory_reader& opShr(uint&out)"
objmthd "memory_reader" "uint read_uint()"
objmthd "memory_reader" "memory_reader& opShl(uint)"
objmthd "memory_reader" "memory_reader& write_uint(uint)"
objmthd "memory_reader" "memory_reader& opShr(int64&out)"
objmthd "memory_reader" "int64 read_int64()"
objmthd "memory_reader" "memory_reader& opShl(int64)"
objmthd "memory_reader" "memory_reader& write_int64(int64)"
objmthd "memory_reader" "memory_reader& opShr(uint64&out)"
objmthd "memory_reader" "uint64 read_uint64()"
objmthd "memory_reader" "memory_reader& opShl(uint64)"
objmthd "memory_reader" "memory_reader& write_uint64(uint64)"
objmthd "memory_reader" "memory_reader& opShr(float&out)"
objmthd "memory_reader" "float read_float()"
objmthd "memory_reader" "memory_reader& opShl(float)"
objmthd "memory_reader" "memory_reader& write_float(float)"
objmthd "memory_reader" "memory_reader& opShr(double&out)"
objmthd "memory_reader" "double read_double()"
objmthd "memory_reader" "memory_reader& opShl(double)"
objmthd "memory_reader" "memory_reader& write_double(double)"
objmthd "memory_reader" "memory_reader& opShr(string&out)"
objmthd "memory_reader" "string read_string()"
objmthd "memory_reader" "memory_reader& opShl(string)"
objmthd "memory_reader" "memory_reader& write_string(string)"
objmthd "memory_reader" "bool get_good() const property"
objmthd "memory_reader" "bool get_bad() const property"
objmthd "memory_reader" "bool get_fail() const property"
objmthd "memory_reader" "bool get_eof() const property"
objmthd "memory_reader" "bool open(uint64, uint64, const string&in = \"\", int = 1)"
objprop "memory_reader" "bool binary" 0 0
objprop "memory_reader" "bool sync_rw_cursors" 0 0
objbeh "memory_writer" 3 "memory_writer@ memory_writer()"
objbeh "memory_writer" 3 "memory_writer@ memory_writer(uint64, uint64, const string&in = \"\", int = 1)"
objbeh "memory_writer" 5 "void $beh5()"
objbeh "memory_writer" 6 "void $beh6()"
objmthd "memory_writer" "datastream@ opImplCast()"
objmthd "memory_writer" "bool close(bool = false)"
objmthd "memory_writer" "bool close_all()"
objmthd "memory_writer" "bool get_active() const property"
objmthd "memory_writer" "uint64 get_available() const property"
objmthd "memory_writer" "bool seek(uint64)"
objmthd "memory_writer" "bool seek_end(uint64 = 0)"
objmthd "memory_writer" "bool seek_relative(int64)"
objmthd "memory_writer" "int64 get_pos() const property"
objmthd "memory_writer" "bool rseek(uint64)"
objmthd "memory_writer" "bool rseek_end(uint64 = 0)"
objmthd "memory_writer" "bool rseek_relative(int64)"
objmthd "memory_writer" "int64 get_rpos() const property"
objmthd "memory_writer" "bool wseek(uint64)"
objmthd "memory_writer" "bool wseek_end(uint64 = 0)"
objmthd "memory_writer" "bool wseek_relative(int64)"
objmthd "memory_writer" "int64 get_wpos() const property"
objmthd "memory_writer" "string read(uint = 0)"
objmthd "memory_writer" "string read_line()"
objmthd "memory_writer" "uint write(const string&in)"
objmthd "memory_writer" "memory_writer& opShr(int8&out)"
objmthd "memory_writer" "int8 read_int8()"
objmthd "memory_writer" "memory_writer& opShl(int8)"
objmthd "memory_writer" "memory_writer& write_int8(int8)"
objmthd "memory_writer" "memory_writer& opShr(uint8&out)"
objmthd "memory_writer" "uint8 read_uint8()"
objmthd "memory_writer" "memory_writer& opShl(uint8)"
objmthd "memory_writer" "memory_writer& write_uint8(uint8)"
objmthd "memory_writer" "memory_writer& opShr(int16&out)"
objmthd "memory_writer" "int16 read_int16()"
objmthd "memory_writer" "memory_writer& opShl(int16)"
objmthd "memory_writer" "memory_writer& write_int16(int16)"
objmthd "memory_writer" "memory_writer& opShr(uint16&out)"
objmthd "memory_writer" "uint16 read_uint16()"
objmthd "memory_writer" "memory_writer& opShl(uint16)"
objmthd "memory_writer" "memory_writer& write_uint16(uint16)"
objmthd "memory_writer" "memory_writer& opShr(int&out)"
objmthd "memory_writer" "int read_int()"
objmthd "memory_writer" "memory_writer& opShl(int)"
objmthd "memory_writer" "memory_writer& write_int(int)"
objmthd "memory_writer" "memory_writer& opShr(uint&out)"
objmthd "memory_writer" "uint read_uint()"
objmthd "memory_writer" "memory_writer& opShl(uint)"
objmthd "memory_writer" "memory_writer& write_uint(uint)"
objmthd "memory_writer" "memory_writer& opShr(int64&out)"
objmthd "memory_writer" "int64 read_int64()"
objmthd "memory_writer" "memory_writer& opShl(int64)"
objmthd "memory_writer" "memory_writer& write_int64(int64)"
objmthd "memory_writer" "memory_writer& opShr(uint64&out)"
objmthd "memory_writer" "uint64 read_uint64()"
objmthd "memory_writer" "memory_writer& opShl(uint64)"
objmthd "memory_writer" "memory_writer& write_uint64(uint64)"
objmthd "memory_writer" "memory_writer& opShr(float&out)"
objmthd "memory_writer" "float read_float()"
objmthd "memory_writer" "memory_writer& opShl(float)"
objmthd "memory_writer" "memory_writer& write_float(float)"
objmthd "memory_writer" "memory_writer& opShr(double&out)"
objmthd "memory_writer" "double read_double()"
objmthd "memory_writer" "memory_writer& opShl(double)"
objmthd "memory_writer" "memory_writer& write_double(double)"
objmthd "memory_writer" "memory_writer& opShr(string&out)"
objmthd "memory_writer" "string read_string()"
objmthd "memory_writer" "memory_writer& opShl(string)"
objmthd "memory_writer" "memory_writer& write_string(string)"
objmthd "memory_writer" "bool get_good() const property"
objmthd "memory_writer" "bool get_bad() const property"
objmthd "memory_writer" "bool get_fail() const property"
objmthd "memory_writer" "bool get_eof() const property"
objmthd "memory_writer" "bool open(uint64, uint64, const string&in = \"\", int = 1)"
objprop "memory_writer" "bool binary" 0 0
objprop "memory_writer" "bool sync_rw_cursors" 0 0
access 20
objprop "touch_finger" "const uint64 id" 0 0
objprop "touch_finger" "const float x" 0 0
objprop "touch_finger" "const float y" 0 0
objprop "touch_finger" "const float pressure" 0 0
access 4
objbeh "name_value_collection" 3 "name_value_collection@ name_value_collection()"
objbeh "name_value_collection" 3 "name_value_collection@ name_value_collection(const name_value_collection&in)"
objbeh "name_value_collection" 5 "void $beh5()"
objbeh "name_value_collection" 6 "void $beh6()"
objbeh "name_value_collection" 4 "name_value_collection@ $list(int&in) { repeat { string, string } }"
objmthd "name_value_collection" "name_value_collection& opAssign(const name_value_collection&in)"
objmthd "name_value_collection" "const string& get_opIndex(const string&in) const property"
objmthd "name_value_collection" "void set_opIndex(const string&in, const string&in) property"
objmthd "name_value_collection" "void set(const string&in, const string&in)"
objmthd "name_value_collection" "void add(const string&in, const string&in)"
objmthd "name_value_collection" "const string& get(const string&in, const string&in = \"\") const"
objmthd "name_value_collection" "bool exists(const string&in) const"
objmthd "name_value_collection" "bool empty() const"
objmthd "name_value_collection" "uint64 size() const"
objmthd "name_value_collection" "void erase(const string&in)"
objmthd "name_value_collection" "void clear()"
objmthd "name_value_collection" "const string& name_at(uint)"
objmthd "name_value_collection" "const string& value_at(uint)"
objmthd "name_value_collection" "internet_message_header@ opCast()"
objbeh "internet_message_header" 3 "internet_message_header@ internet_message_header()"
objbeh "internet_message_header" 3 "internet_message_header@ internet_message_header(const internet_message_header&in)"
objbeh "internet_message_header" 5 "void $beh5()"
objbeh "internet_message_header" 6 "void $beh6()"
objbeh "internet_message_header" 4 "internet_message_header@ $list(int&in) { repeat { string, string } }"
objmthd "internet_message_header" "internet_message_header& opAssign(const internet_message_header&in)"
objmthd "internet_message_header" "const string& get_opIndex(const string&in) const property"
objmthd "internet_message_header" "void set_opIndex(const string&in, const string&in) property"
objmthd "internet_message_header" "void set(const string&in, const string&in)"
objmthd "internet_message_header" "void add(const string&in, const string&in)"
objmthd "internet_message_header" "const string& get(const string&in, const string&in = \"\") const"
objmthd "internet_message_header" "bool exists(const string&in) const"
objmthd "internet_message_header" "bool empty() const"
objmthd "internet_message_header" "uint64 size() const"
objmthd "internet_message_header" "void erase(const string&in)"
objmthd "internet_message_header" "void clear()"
objmthd "internet_message_header" "const string& name_at(uint)"
objmthd "internet_message_header" "const string& value_at(uint)"
objmthd "internet_message_header" "name_value_collection@ opImplCast()"
objmthd "internet_message_header" "bool write(datastream@) const"
objmthd "internet_message_header" "bool read(datastream@)"
objmthd "internet_message_header" "bool get_auto_decode() const property"
objmthd "internet_message_header" "void set_auto_decode(bool) property"
objmthd "internet_message_header" "string get_decoded(const string&in, const string&in = \"\")"
objmthd "internet_message_header" "int get_field_limit() const property"
objmthd "internet_message_header" "void set_field_limit(int) property"
objmthd "internet_message_header" "int get_name_length_limit() const property"
objmthd "internet_message_header" "void set_name_length_limit(int) property"
objmthd "internet_message_header" "int get_value_length_limit() const property"
objmthd "internet_message_header" "void set_value_length_limit(int) property"
objmthd "internet_message_header" "bool has_token(const string&in, const string&in)"
objmthd "internet_message_header" "http_request@ opCast()"
objmthd "internet_message_header" "http_response@ opCast()"
objbeh "http_request" 3 "http_request@ http_request()"
objbeh "http_request" 3 "http_request@ http_request(const http_request&in)"
objbeh "http_request" 3 "http_request@ http_request(const string&in, const string&in, const string&in = HTTP_1_1)"
objbeh "http_request" 5 "void $beh5()"
objbeh "http_request" 6 "void $beh6()"
objbeh "http_request" 4 "http_request@ $list(int&in) { repeat { string, string } }"
objmthd "http_request" "http_request& opAssign(const http_request&in)"
objmthd "http_request" "const string& get_opIndex(const string&in) const property"
objmthd "http_request" "void set_opIndex(const string&in, const string&in) property"
objmthd "http_request" "void set(const string&in, const string&in)"
objmthd "http_request" "void add(const string&in, const string&in)"
objmthd "http_request" "const string& get(const string&in, const string&in = \"\") const"
objmthd "http_request" "bool exists(const string&in) const"
objmthd "http_request" "bool empty() const"
objmthd "http_request" "uint64 size() const"
objmthd "http_request" "void erase(const string&in)"
objmthd "http_request" "void clear()"
objmthd "http_request" "const string& name_at(uint)"
objmthd "http_request" "const string& value_at(uint)"
objmthd "http_request" "internet_message_header@ opImplCast()"
objmthd "http_request" "bool write(datastream@) const"
objmthd "http_request" "bool read(datastream@)"
objmthd "http_request" "bool get_auto_decode() const property"
objmthd "http_request" "void set_auto_decode(bool) property"
objmthd "http_request" "string get_decoded(const string&in, const string&in = \"\")"
objmthd "http_request" "int get_field_limit() const property"
objmthd "http_request" "void set_field_limit(int) property"
objmthd "http_request" "int get_name_length_limit() const property"
objmthd "http_request" "void set_name_length_limit(int) property"
objmthd "http_request" "int get_value_length_limit() const property"
objmthd "http_request" "void set_value_length_limit(int) property"
objmthd "http_request" "bool has_token(const string&in, const string&in)"
objmthd "http_request" "void set_version(const string&in) property"
objmthd "http_request" "const string& get_version() const property"
objmthd "http_request" "void set_content_length(int64) property"
objmthd "http_request" "int64 get_content_length() const property"
objmthd "http_request" "bool get_has_content_length() const property"
objmthd "http_request" "void set_transfer_encoding(const string&in) property"
objmthd "http_request" "string get_transfer_encoding() const property"
objmthd "http_request" "void set_chunked_transfer_encoding(bool) property"
objmthd "http_request" "bool get_chunked_transfer_encoding() const property"
objmthd "http_request" "void set_content_type(const string&in) property"
objmthd "http_request" "string get_content_type() const property"
objmthd "http_request" "void set_keep_alive(bool) property"
objmthd "http_request" "bool get_keep_alive() const property"
objmthd "http_request" "void set_method(const string&in) property"
objmthd "http_request" "const string& get_method() const property"
objmthd "http_request" "void set_uri(const string&in) property"
objmthd "http_request" "const string& get_uri() const property"
objmthd "http_request" "void set_host(const string&in) property"
objmthd "http_request" "void set_host(const string&in, uint16) property"
objmthd "http_request" "const string& get_host() const property"
objmthd "http_request" "void set_cookies(const name_value_collection&inout)"
objmthd "http_request" "void get_cookies(name_value_collection&inout) const"
objmthd "http_request" "bool get_has_credentials() const property"
objmthd "http_request" "void get_credentials(string&inout, string&inout) const"
objmthd "http_request" "void set_credentials(const string&in, const string&in)"
objmthd "http_request" "void remove_credentials()"
objmthd "http_request" "bool get_expect_continue() const property"
objmthd "http_request" "void set_expect_continue(bool) property"
objmthd "http_request" "bool get_has_proxy_credentials() const property"
objmthd "http_request" "void get_proxy_credentials(string&inout, string&inout) const"
objmthd "http_request" "void set_proxy_credentials(const string&in, const string&in)"
objmthd "http_request" "void remove_proxy_credentials()"
objbeh "http_response" 3 "http_response@ http_response()"
objbeh "http_response" 3 "http_response@ http_response(const http_response&in)"
objbeh "http_response" 3 "http_response@ http_response(http_status)"
objbeh "http_response" 3 "http_response@ http_response(http_status, const string&in)"
objbeh "http_response" 3 "http_response@ http_response(const string&in, http_status, const string&in)"
objbeh "http_response" 3 "http_response@ http_response(const string&in, http_status)"
objbeh "http_response" 5 "void $beh5()"
objbeh "http_response" 6 "void $beh6()"
objbeh "http_response" 4 "http_response@ $list(int&in) { repeat { string, string } }"
objmthd "http_response" "http_response& opAssign(const http_response&in)"
objmthd "http_response" "const string& get_opIndex(const string&in) const property"
objmthd "http_response" "void set_opIndex(const string&in, const string&in) property"
objmthd "http_response" "void set(const string&in, const string&in)"
objmthd "http_response" "void add(const string&in, const string&in)"
objmthd "http_response" "const string& get(const string&in, const string&in = \"\") const"
objmthd "http_response" "bool exists(const string&in) const"
objmthd "http_response" "bool empty() const"
objmthd "http_response" "uint64 size() const"
objmthd "http_response" "void erase(const string&in)"
objmthd "http_response" "void clear()"
objmthd "http_response" "const string& name_at(uint)"
objmthd "http_response" "const string& value_at(uint)"
objmthd "http_response" "internet_message_header@ opImplCast()"
objmthd "http_response" "bool write(datastream@) const"
objmthd "http_response" "bool read(datastream@)"
objmthd "http_response" "bool get_auto_decode() const property"
objmthd "http_response" "void set_auto_decode(bool) property"
objmthd "http_response" "string get_decoded(const string&in, const string&in = \"\")"
objmthd "http_response" "int get_field_limit() const property"
objmthd "http_response" "void set_field_limit(int) property"
objmthd "http_response" "int get_name_length_limit() const property"
objmthd "http_response" "void set_name_length_limit(int) property"
objmthd "http_response" "int get_value_length_limit() const property"
objmthd "http_response" "void set_value_length_limit(int) property"
objmthd "http_response" "bool has_token(const string&in, const string&in)"
objmthd "http_response" "void set_version(const string&in) property"
objmthd "http_response" "const string& get_version() const property"
objmthd "http_response" "void set_content_length(int64) property"
objmthd "http_response" "int64 get_content_length() const property"
objmthd "http_response" "bool get_has_content_length() const property"
objmthd "http_response" "void set_transfer_encoding(const string&in) property"
objmthd "http_response" "string get_transfer_encoding() const property"
objmthd "http_response" "void set_chunked_transfer_encoding(bool) property"
objmthd "http_response" "bool get_chunked_transfer_encoding() const property"
objmthd "http_response" "void set_content_type(const string&in) property"
objmthd "http_response" "string get_content_type() const property"
objmthd "http_response" "void set_keep_alive(bool) property"
objmthd "http_response" "bool get_keep_alive() const property"
objmthd "http_response" "void set_status(http_status) property"
objmthd "http_response" "http_status get_status() const property"
objmthd "http_response" "void set_status(const string&in)"
objmthd "http_response" "void set_reason(const string&in) property"
objmthd "http_response" "const string& get_reason() const property"
objmthd "http_response" "void set_status_and_reason(http_status, const string&in)"
objmthd "http_response" "void set_status_and_reason(http_status)"
access 40
objbeh "http_client" 3 "http_client@ http_client(const string&in, uint16 = 80)"
objbeh "http_client" 5 "void $beh5()"
objbeh "http_client" 6 "void $beh6()"
objmthd "http_client" "void set_keep_alive(bool) property"
objmthd "http_client" "bool get_keep_alive() const property"
objmthd "http_client" "bool get_connected() const property"
objmthd "http_client" "void abort()"
objmthd "http_client" "void set_host(const string&in) property"
objmthd "http_client" "const string& get_host() const property"
objmthd "http_client" "void set_port(uint16) property"
objmthd "http_client" "uint16 get_port() const property"
objmthd "http_client" "datastream@ send_request(http_request&inout, const string&in = \"\", int = STREAM_BYTE_ORDER_NATIVE)"
objmthd "http_client" "datastream@ receive_response(http_response&inout, const string&in = \"\", int = STREAM_BYTE_ORDER_NATIVE)"
objmthd "http_client" "bool peek_response(http_response&inout)"
objmthd "http_client" "void flush_request()"
objmthd "http_client" "void reset()"
objmthd "http_client" "bool get_secure() const property"
objmthd "http_client" "https_client@ opCast()"
objbeh "https_client" 3 "https_client@ https_client(const string&in, uint16 = 443)"
objbeh "https_client" 5 "void $beh5()"
objbeh "https_client" 6 "void $beh6()"
objmthd "https_client" "void set_keep_alive(bool) property"
objmthd "https_client" "bool get_keep_alive() const property"
objmthd "https_client" "bool get_connected() const property"
objmthd "https_client" "void abort()"
objmthd "https_client" "void set_host(const string&in) property"
objmthd "https_client" "const string& get_host() const property"
objmthd "https_client" "void set_port(uint16) property"
objmthd "https_client" "uint16 get_port() const property"
objmthd "https_client" "datastream@ send_request(http_request&inout, const string&in = \"\", int = STREAM_BYTE_ORDER_NATIVE)"
objmthd "https_client" "datastream@ receive_response(http_response&inout, const string&in = \"\", int = STREAM_BYTE_ORDER_NATIVE)"
objmthd "https_client" "bool peek_response(http_response&inout)"
objmthd "https_client" "void flush_request()"
objmthd "https_client" "void reset()"
objmthd "https_client" "bool get_secure() const property"
objmthd "https_client" "http_client@ opImplCast()"
objbeh "ftp_client" 3 "ftp_client@ ftp_client(uint16 = 0)"
objbeh "ftp_client" 3 "ftp_client@ ftp_client(const string&in, uint16 = 21, const string&in = \"\", const string&in = \"\", uint16 = 0)"
objbeh "ftp_client" 5 "void $beh5()"
objbeh "ftp_client" 6 "void $beh6()"
objmthd "ftp_client" "void set_passive(bool, bool = true)"
objmthd "ftp_client" "bool get_passive() const property"
objmthd "ftp_client" "void open(const string&in, uint16, const string&in = \"\", const string&in = \"\")"
objmthd "ftp_client" "void login(const string&in, const string&in)"
objmthd "ftp_client" "void logout()"
objmthd "ftp_client" "void close()"
objmthd "ftp_client" "string system_type()"
objmthd "ftp_client" "void set_file_type(ftp_file_type)"
objmthd "ftp_client" "ftp_file_type get_file_type() const property"
objmthd "ftp_client" "void set_working_directory(const string&in)"
objmthd "ftp_client" "string get_working_directory()"
objmthd "ftp_client" "void cdup()"
objmthd "ftp_client" "void rename(const string&in, const string&in)"
objmthd "ftp_client" "void remove(const string&in)"
objmthd "ftp_client" "void create_directory(const string&in)"
objmthd "ftp_client" "void remove_directory(const string&in)"
objmthd "ftp_client" "datastream@ begin_download(const string&in, const string&in = \"\", int = STREAM_BYTE_ORDER_NATIVE)"
objmthd "ftp_client" "void end_download()"
objmthd "ftp_client" "datastream@ begin_upload(const string&in, const string&in = \"\", int = STREAM_BYTE_ORDER_NATIVE)"
objmthd "ftp_client" "void end_upload()"
objmthd "ftp_client" "datastream@ begin_list(const string&in = \"\", bool = false, const string&in = \"\", int = STREAM_BYTE_ORDER_NATIVE)"
objmthd "ftp_client" "void end_list()"
objmthd "ftp_client" "void abort()"
objmthd "ftp_client" "int send_command(const string&in, string&inout)"
objmthd "ftp_client" "int send_command(const string&in, const string&in, string&inout)"
objmthd "ftp_client" "bool get_is_open() const property"
objmthd "ftp_client" "bool get_is_logged_in() const property"
objmthd "ftp_client" "bool get_is_secure() const property"
objmthd "ftp_client" "const string& get_welcome_message() const property"
access 40000
objbeh "library" 3 "library@ library()"
objbeh "library" 5 "void $beh5()"
objbeh "library" 6 "void $beh6()"
objmthd "library" "bool load(const string&in)"
objmthd "library" "bool unload()"
objmthd "library" "bool get_active() const property"
objmthd "library" "dictionary@ call(const string&in, ?&in = null, ?&in = null, ?&in = null, ?&in = null, ?&in = null, ?&in = null, ?&in = null, ?&in = null, ?&in = null, ?&in = null)"
access 80
objbeh "coordinate_map" 3 "coordinate_map@ coordinate_map()"
objbeh "coordinate_map" 5 "void $beh5()"
objbeh "coordinate_map" 6 "void $beh6()"
objmthd "coordinate_map" "coordinate_map_area@ add_area(float, float, float, float, float, float, float, any@, const string&in, const string&in, const string&in, int, int64 = 0)"
objmthd "coordinate_map" "array<coordinate_map_area@>@ get_areas(float, float, float, float = 0.0, coordinate_map_filter_callback@ = null, int64 = 0, int64 = 0) const"
objmthd "coordinate_map" "array<coordinate_map_area@>@ get_areas(float, float, float, float, float, float, float = 0.0, coordinate_map_filter_callback@ = null, int64 = 0, int64 = excluded_flags = 0) const"
objmthd "coordinate_map" "coordinate_map_area@ get_area(float, float, float, int = - 1, float = 0.0, coordinate_map_filter_callback@ = null, int64 = 0, int64 = 0) const"
objmthd "coordinate_map" "void reset()"
objbeh "coordinate_map_area" 5 "void $beh5()"
objbeh "coordinate_map_area" 6 "void $beh6()"
objmthd "coordinate_map_area" "void unframe()"
objmthd "coordinate_map_area" "void reframe()"
objmthd "coordinate_map_area" "void set(float, float, float, float, float, float, float)"
objmthd "coordinate_map_area" "void set_area(float, float, float, float, float, float)"
objmthd "coordinate_map_area" "void set_rotation(float)"
objmthd "coordinate_map_area" "bool is_in_area(float, float, float, float = 0.0, coordinate_map_filter_callback@ = null, int64 = 0, int64 = 0) const"
objprop "coordinate_map_area" "const coordinate_map@ map" 0 0
objprop "coordinate_map_area" "const float minx" 0 0
objprop "coordinate_map_area" "const float maxx" 0 0
objprop "coordinate_map_area" "const float miny" 0 0
objprop "coordinate_map_area" "const float maxy" 0 0
objprop "coordinate_map_area" "const float minz" 0 0
objprop "coordinate_map_area" "const float maxz" 0 0
objprop "coordinate_map_area" "const float rotation" 0 0
objprop "coordinate_map_area" "any@ primary_data" 0 0
objprop "coordinate_map_area" "const string data1" 0 0
objprop "coordinate_map_area" "const string data2" 0 0
objprop "coordinate_map_area" "const string data3" 0 0
objprop "coordinate_map_area" "const int priority" 0 0
objprop "coordinate_map_area" "const bool framed" 0 0
objprop "coordinate_map_area" "int64 flags" 0 0
access 1
objbeh "refstring" 3 "refstring@ refstring()"
objbeh "refstring" 5 "void $beh5()"
objbeh "refstring" 6 "void $beh6()"
objprop "refstring" "string str" 0 0
access 40
objbeh "network_event" 3 "network_event@ network_event()"
objbeh "network_event" 5 "void $beh5()"
objbeh "network_event" 6 "void $beh6()"
objmthd "network_event" "network_event& opAssign(const network_event&in)"
objprop "network_event" "const int type" 0 0
objprop "network_event" "const uint64 peer_id" 0 0
objprop "network_event" "const uint channel" 0 0
objprop "network_event" "const string message" 0 0
objbeh "network" 3 "network@ network()"
objbeh "network" 5 "void $beh5()"
objbeh "network" 6 "void $beh6()"
objmthd "network" "void destroy(bool = true)"
objmthd "network" "bool setup_client(uint8, uint16)"
objmthd "network" "bool setup_server(uint16, uint8, uint16)"
objmthd "network" "bool setup_local_server(uint16, uint8, uint16)"
objmthd "network" "uint64 connect(const string&in, uint16)"
objmthd "network" "const network_event@ request(uint = 0)"
objmthd "network" "string get_peer_address(uint64) const"
objmthd "network" "uint get_peer_average_round_trip_time(uint64) const"
objmthd "network" "bool send(uint64, const string&in, uint8, bool = true)"
objmthd "network" "bool send_reliable(uint64, const string&in, uint8)"
objmthd "network" "bool send_unreliable(uint64, const string&in, uint8)"
objmthd "network" "bool send_peer(uint64, const string&in, uint8, bool = true)"
objmthd "network" "bool send_reliable_peer(uint64, const string&in, uint8)"
objmthd "network" "bool send_unreliable_peer(uint64, const string&in, uint8)"
objmthd "network" "bool disconnect_peer_softly(uint64)"
objmthd "network" "bool disconnect_peer(uint64)"
objmthd "network" "bool disconnect_peer_forcefully(uint64)"
objmthd "network" "array<uint64>@ get_peer_list() const"
objmthd "network" "uint64 get_connected_peers() const property"
objmthd "network" "bool get_packet_compression() const property"
objmthd "network" "void set_packet_compression(bool) property"
objmthd "network" "uint get_duplicate_peers() const property"
objmthd "network" "void set_duplicate_peers(uint) property"
objmthd "network" "uint get_bytes_received() const property"
objmthd "network" "uint get_bytes_sent() const property"
objmthd "network" "uint get_packets_received() const property"
objmthd "network" "uint get_packets_sent() const property"
objmthd "network" "void set_bandwidth_limits(uint, uint)"
objmthd "network" "bool get_active() const property"
access 2
objbeh "pack" 3 "pack@ pack()"
objbeh "pack" 5 "void $beh5()"
objbeh "pack" 6 "void $beh6()"
objmthd "pack" "bool set_pack_identifier(const string&in)"
objmthd "pack" "bool open(const string&in, uint = PACK_OPEN_MODE_READ, bool = false)"
objmthd "pack" "bool close()"
objmthd "pack" "bool add_file(const string&in, const string&in, bool = false)"
objmthd "pack" "bool add_memory(const string&in, const string&in, bool = false)"
objmthd "pack" "bool delete_file(const string&in)"
objmthd "pack" "bool file_exists(const string&in) const"
objmthd "pack" "string get_file_name(int) const"
objmthd "pack" "array<string>@ list_files() const"
objmthd "pack" "uint get_file_size(const string&in) const"
objmthd "pack" "uint get_file_offset(const string&in) const"
objmthd "pack" "string read_file(const string&in, uint, uint) const"
objmthd "pack" "bool raw_seek(int)"
objmthd "pack" "bool stream_close(uint)"
objmthd "pack" "uint stream_open(const string&in, uint) const"
objmthd "pack" "string stream_read(uint, uint) const"
objmthd "pack" "uint stream_pos(uint) const"
objmthd "pack" "uint stream_seek(uint, uint, int) const"
objmthd "pack" "uint stream_size(uint) const"
objmthd "pack" "bool get_active() const property"
objmthd "pack" "uint get_size() const property"
access 2000
objbeh "pathfinder" 3 "pathfinder@ pathfinder(int = 1024, bool = true)"
objbeh "pathfinder" 5 "void $beh5()"
objbeh "pathfinder" 6 "void $beh6()"
objmthd "pathfinder" "void set_callback_function(pathfinder_callback@)"
objmthd "pathfinder" "void cancel()"
objmthd "pathfinder" "void reset()"
objmthd "pathfinder" "array<vector>@ find(int, int, int, int, int, int, any@ = null)"
objprop "pathfinder" "const bool solving" 0 0
objprop "pathfinder" "const float total_cost" 0 0
objprop "pathfinder" "int desperation_factor" 0 0
objprop "pathfinder" "bool allow_diagonals" 0 0
objprop "pathfinder" "bool automatic_reset" 0 0
objprop "pathfinder" "int search_range" 0 0
access 4
objbeh "json_object" 3 "json_object@ json_object()"
objbeh "json_object" 5 "void $beh5()"
objbeh "json_object" 6 "void $beh6()"
objmthd "json_object" "var@ get_opIndex(const string&in) const property"
objmthd "json_object" "void set_opIndex(const string&in, const var&in) property"
objmthd "json_object" "void set(const string&in, const var&in)"
objmthd "json_object" "var@ opCall(const string&in) const"
objmthd "json_object" "json_array@ get_array(const string&in) const"
objmthd "json_object" "json_object@ get_object(const string&in) const"
objmthd "json_object" "string stringify(uint = 0, int = - 1) const"
objmthd "json_object" "void stringify(datastream@, uint = 0, int = - 1) const"
objmthd "json_object" "uint size() const"
objmthd "json_object" "bool get_escape_unicode() const property"
objmthd "json_object" "void set_escape_unicode(bool) property"
objmthd "json_object" "void clear()"
objmthd "json_object" "void remove(const string&in)"
objmthd "json_object" "bool exists(const string&in) const"
objmthd "json_object" "bool is_array(const string&in) const"
objmthd "json_object" "bool is_null(const string&in) const"
objmthd "json_object" "bool is_object(const string&in) const"
objmthd "json_object" "array<string>@ get_keys() const"
objbeh "json_array" 3 "json_array@ json_array()"
objbeh "json_array" 5 "void $beh5()"
objbeh "json_array" 6 "void $beh6()"
objmthd "json_array" "var@ get_opIndex(uint) property"
objmthd "json_array" "void set_opIndex(uint, const var&in) property"
objmthd "json_array" "void add(var@)"
objmthd "json_array" "var@ opCall(const string&in) const"
objmthd "json_array" "json_array@ get_array(uint) const"
objmthd "json_array" "json_object@ get_object(uint) const"
objmthd "json_array" "string stringify(uint = 0, int = - 1)"
objmthd "json_array" "void stringify(datastream@, uint = 0, int = - 1)"
objmthd "json_array" "uint length()"
objmthd "json_array" "uint size()"
objmthd "json_array" "bool get_escape_unicode() property"
objmthd "json_array" "void set_escape_unicode(bool) property"
objmthd "json_array" "bool get_empty() property"
objmthd "json_array" "void clear()"
objmthd "json_array" "void remove(uint)"
objmthd "json_array" "bool is_array(uint)"
objmthd "json_array" "bool is_null(uint)"
objmthd "json_array" "bool is_object(uint)"
objbeh "var" 3 "var@ var()"
objbeh "var" 3 "var@ var(const int&in)"
objbeh "var" 3 "var@ var(const uint&in)"
objbeh "var" 3 "var@ var(const int16&in)"
objbeh "var" 3 "var@ var(const uint16&in)"
objbeh "var" 3 "var@ var(const int64&in)"
objbeh "var" 3 "var@ var(const uint64&in)"
objbeh "var" 3 "var@ var(const float&in)"
objbeh "var" 3 "var@ var(const double&in)"
objbeh "var" 3 "var@ var(const bool&in)"
objbeh "var" 3 "var@ var(const string&in)"
objbeh "var" 3 "var@ var(json_object@)"
objbeh "var" 3 "var@ var(json_array@)"
objbeh "var" 5 "void $beh5()"
objbeh "var" 6 "void $beh6()"
objmthd "var" "var& opAssign(const var&in)"
objmthd "var" "var& opPostInc()"
objmthd "var" "var& opPostDec()"
objmthd "var" "int opCmp(const var&in) const"
objmthd "var" "var& opAssign(const int&in)"
objmthd "var" "int opAddAssign(const int&in)"
objmthd "var" "int opAdd(const int&in) const"
objmthd "var" "int opSubAssign(const int&in)"
objmthd "var" "int opSub(const int&in) const"
objmthd "var" "int opMulAssign(const int&in)"
objmthd "var" "int opMul(const int&in) const"
objmthd "var" "int opDivAssign(const int&in)"
objmthd "var" "int opDiv(const int&in) const"
objmthd "var" "int opImplConv() const"
objmthd "var" "var& opAssign(const uint&in)"
objmthd "var" "uint opAddAssign(const uint&in)"
objmthd "var" "uint opAdd(const uint&in) const"
objmthd "var" "uint opSubAssign(const uint&in)"
objmthd "var" "uint opSub(const uint&in) const"
objmthd "var" "uint opMulAssign(const uint&in)"
objmthd "var" "uint opMul(const uint&in) const"
objmthd "var" "uint opDivAssign(const uint&in)"
objmthd "var" "uint opDiv(const uint&in) const"
objmthd "var" "uint opImplConv() const"
objmthd "var" "var& opAssign(const int16&in)"
objmthd "var" "int16 opAddAssign(const int16&in)"
objmthd "var" "int16 opAdd(const int16&in) const"
objmthd "var" "int16 opSubAssign(const int16&in)"
objmthd "var" "int16 opSub(const int16&in) const"
objmthd "var" "int16 opMulAssign(const int16&in)"
objmthd "var" "int16 opMul(const int16&in) const"
objmthd "var" "int16 opDivAssign(const int16&in)"
objmthd "var" "int16 opDiv(const int16&in) const"
objmthd "var" "int16 opImplConv() const"
objmthd "var" "var& opAssign(const uint16&in)"
objmthd "var" "uint16 opAddAssign(const uint16&in)"
objmthd "var" "uint16 opAdd(const uint16&in) const"
objmthd "var" "uint16 opSubAssign(const uint16&in)"
objmthd "var" "uint16 opSub(const uint16&in) const"
objmthd "var" "uint16 opMulAssign(const uint16&in)"
objmthd "var" "uint16 opMul(const uint16&in) const"
objmthd "var" "uint16 opDivAssign(const uint16&in)"
objmthd "var" "uint16 opDiv(const uint16&in) const"
objmthd "var" "uint16 opImplConv() const"
objmthd "var" "var& opAssign(const int64&in)"
objmthd "var" "int64 opAddAssign(const int64&in)"
objmthd "var" "int64 opAdd(const int64&in) const"
objmthd "var" "int64 opSubAssign(const int64&in)"
objmthd "var" "int64 opSub(const int64&in) const"
objmthd "var" "int64 opMulAssign(const int64&in)"
objmthd "var" "int64 opMul(const int64&in) const"
objmthd "var" "int64 opDivAssign(const int64&in)"
objmthd "var" "int64 opDiv(const int64&in) const"
objmthd "var" "int64 opImplConv() const"
objmthd "var" "var& opAssign(const uint64&in)"
objmthd "var" "uint64 opAddAssign(const uint64&in)"
objmthd "var" "uint64 opAdd(const uint64&in) const"
objmthd "var" "uint64 opSubAssign(const uint64&in)"
objmthd "var" "uint64 opSub(const uint64&in) const"
objmthd "var" "uint64 opMulAssign(const uint64&in)"
objmthd "var" "uint64 opMul(const uint64&in) const"
objmthd "var" "uint64 opDivAssign(const uint64&in)"
objmthd "var" "uint64 opDiv(const uint64&in) const"
objmthd "var" "uint64 opImplConv() const"
objmthd "var" "var& opAssign(const float&in)"
objmthd "var" "float opAddAssign(const float&in)"
objmthd "var" "float opAdd(const float&in) const"
objmthd "var" "float opSubAssign(const float&in)"
objmthd "var" "float opSub(const float&in) const"
objmthd "var" "float opMulAssign(const float&in)"
objmthd "var" "float opMul(const float&in) const"
objmthd "var" "float opDivAssign(const float&in)"
objmthd "var" "float opDiv(const float&in) const"
objmthd "var" "float opImplConv() const"
objmthd "var" "var& opAssign(const double&in)"
objmthd "var" "double opAddAssign(const double&in)"
objmthd "var" "double opAdd(const double&in) const"
objmthd "var" "double opSubAssign(const double&in)"
objmthd "var" "double opSub(const double&in) const"
objmthd "var" "double opMulAssign(const double&in)"
objmthd "var" "double opMul(const double&in) const"
objmthd "var" "double opDivAssign(const double&in)"
objmthd "var" "double opDiv(const double&in) const"
objmthd "var" "double opImplConv() const"
objmthd "var" "var& opAssign(const bool&in)"
objmthd "var" "bool opAddAssign(const bool&in)"
objmthd "var" "bool opAdd(const bool&in) const"
objmthd "var" "bool opImplConv() const"
objmthd "var" "var& opAssign(const string&in)"
objmthd "var" "string opAddAssign(const string&in)"
objmthd "var" "string opAdd(const string&in) const"
objmthd "var" "string opImplConv() const"
objmthd "var" "void clear()"
objmthd "var" "bool get_empty() const property"
objmthd "var" "bool get_is_integer() const property"
objmthd "var" "bool get_is_signed() const property"
objmthd "var" "bool get_is_numeric() const property"
objmthd "var" "bool get_is_boolean() const property"
objmthd "var" "bool get_is_string() const property"
objmthd "var" "var& opAssign(const json_object&in) const"
objmthd "var" "json_object@ opImplCast() const"
objmthd "var" "var& opAssign(const json_array&in) const"
objmthd "var" "json_array@ opImplCast() const"
objbeh "regexp" 2 "void regexp()"
objbeh "regexp" 0 "void regexp(const string&in, regexp_options = RE_UTF8)"
access 1
objmthd "regexp" "bool match(const string&in, uint64 = 0) const"
objmthd "regexp" "bool match(const string&in, uint64, int) const"
objmthd "regexp" "bool opEquals(const string&in) const"
objmthd "regexp" "string extract(const string&in, uint64 = 0) const"
objmthd "regexp" "string extract(const string&in, uint64, int) const"
objmthd "regexp" "int subst(string&inout, uint64, const string&in, int = RE_UTF8) const"
objmthd "regexp" "int subst(string&inout, const string&in, int = RE_UTF8) const"
objmthd "regexp" "array<string>@ split(const string&in, uint64 = 0) const"
objmthd "regexp" "array<string>@ split(const string&in, uint64, int) const"
namespace "spec"
objbeh "path" 2 "void path()"
objbeh "path" 0 "void path()"
objbeh "path" 0 "void path(bool)"
objbeh "path" 0 "void path(const string&in)"
objbeh "path" 0 "void path(const string&in, spec::path_style)"
objbeh "path" 0 "void path(const spec::path&in)"
objbeh "path" 0 "void path(const spec::path&in, const string&in)"
objbeh "path" 0 "void path(const spec::path&in, const spec::path&in)"
objmthd "path" "spec::path& opAssign(const spec::path&in)"
objmthd "path" "spec::path& opAssign(const string&in)"
objmthd "path" "spec::path& assign(const string&in)"
objmthd "path" "spec::path& assign(const string&in, spec::path_style)"
objmthd "path" "spec::path& assign(const spec::path&in)"
objmthd "path" "spec::path& assign_directory(const string&in)"
objmthd "path" "spec::path& assign_directory(const string&in, spec::path_style)"
objmthd "path" "bool parse(const string&in)"
objmthd "path" "bool parse(const string&in, spec::path_style)"
objmthd "path" "string opImplConv() const"
objmthd "path" "string to_string(spec::path_style = spec :: PATH_STYLE_NATIVE) const"
objmthd "path" "spec::path& make_directory()"
objmthd "path" "spec::path& make_file()"
objmthd "path" "spec::path& make_parent()"
objmthd "path" "spec::path& make_absolute()"
objmthd "path" "spec::path& make_absolute(const spec::path&in)"
objmthd "path" "spec::path& append(const spec::path&in)"
objmthd "path" "spec::path& resolve(const spec::path&in)"
objmthd "path" "bool get_is_absolute() const property"
objmthd "path" "bool get_is_relative() const property"
objmthd "path" "bool get_is_directory() const property"
objmthd "path" "bool get_is_file() const property"
objmthd "path" "spec::path& set_node(const string&in)"
objmthd "path" "const string& get_node() const property"
objmthd "path" "spec::path& set_device(const string&in)"
objmthd "path" "const string& get_device() const property"
objmthd "path" "int get_depth() const property"
objmthd "path" "const string& get_opIndex(int) const property"
objmthd "path" "spec::path& push_directory(const string&in)"
objmthd "path" "spec::path& pop_directory()"
objmthd "path" "spec::path& pop_front_directory()"
objmthd "path" "spec::path& set_filename(const string&in)"
objmthd "path" "const string& get_filename() const property"
objmthd "path" "spec::path& set_basename(const string&in)"
objmthd "path" "string get_basename() const property"
objmthd "path" "spec::path& set_extension(const string&in)"
objmthd "path" "string get_extension() const property"
objmthd "path" "const string& get_vms_version() const property"
objmthd "path" "spec::path& clear()"
objmthd "path" "spec::path get_parent() const property"
objmthd "path" "spec::path absolute() const"
objmthd "path" "spec::path absolute(const spec::path&in) const"
namespace ""
objbeh "random_pcg" 0 "void random_pcg()"
objbeh "random_pcg" 0 "void random_pcg(uint)"
objmthd "random_pcg" "void seed(uint = random_seed ( ))"
objmthd "random_pcg" "uint next()"
objmthd "random_pcg" "float nextf()"
objmthd "random_pcg" "int range(int, int)"
objbeh "random_well" 0 "void random_well()"
objbeh "random_well" 0 "void random_well(uint = random_seed ( ))"
objmthd "random_well" "void seed(uint = random_seed ( ))"
objmthd "random_well" "uint next()"
objmthd "random_well" "float nextf()"
objmthd "random_well" "int range(int, int)"
objbeh "random_gamerand" 0 "void random_gamerand()"
objbeh "random_gamerand" 0 "void random_gamerand(uint = random_seed ( ))"
objmthd "random_gamerand" "void seed(uint = random_seed ( ))"
objmthd "random_gamerand" "uint next()"
objmthd "random_gamerand" "float nextf()"
objmthd "random_gamerand" "int range(int, int)"
objbeh "random_xorshift" 0 "void random_xorshift()"
objbeh "random_xorshift" 0 "void random_xorshift(uint64 = random_seed64 ( ))"
objmthd "random_xorshift" "void seed(uint64 = random_seed64 ( ))"
objmthd "random_xorshift" "uint64 next()"
objmthd "random_xorshift" "float nextf()"
objmthd "random_xorshift" "int range(int, int)"
objbeh "script_function" 5 "void $beh5()"
objbeh "script_function" 6 "void $beh6()"
access 100
objmthd "script_function" "dictionary@ call(dictionary@, array<string>@ = null)"
objmthd "script_function" "dictionary@ opCall(dictionary@, array<string>@ = null)"
objmthd "script_function" "string get_decl() property"
objmthd "script_function" "string get_name() property"
objmthd "script_function" "string get_script() property"
objmthd "script_function" "int get_line() property"
objprop "script_function" "uint max_statement_count" 0 0
objbeh "script_module" 5 "void $beh5()"
objbeh "script_module" 6 "void $beh6()"
objmthd "script_module" "int add_section(const string&in, const string&in, uint = 0)"
objmthd "script_module" "int build(array<string>@ = null)"
objmthd "script_module" "string get_bytecode(bool)"
objmthd "script_module" "int set_bytecode(const string&in, bool&out, array<string>@ = null)"
objmthd "script_module" "int reset_globals(array<string>@ = null)"
objmthd "script_module" "int bind_all_imported_functions()"
objmthd "script_module" "int bind_imported_function(uint, script_function@)"
objmthd "script_module" "int compile_global(const string&in, const string&in, uint = 0)"
objmthd "script_module" "script_function@ compile_function(const string&in, const string&in, array<string>@ = null, bool = false, uint = 0)"
objmthd "script_module" "void discard()"
objmthd "script_module" "script_function@ get_function_by_decl(const string&in)"
objmthd "script_module" "script_function@ get_function_by_index(uint)"
objmthd "script_module" "script_function@ get_function_by_name(const string&in)"
objmthd "script_module" "any@ get_global(uint)"
objmthd "script_module" "const string get_global_decl(uint)"
objmthd "script_module" "int get_global_index_by_decl(const string&in)"
objmthd "script_module" "int get_global_index_by_name(const string&in)"
objmthd "script_module" "const string get_global_name(uint)"
objmthd "script_module" "uint get_function_count()"
objmthd "script_module" "uint get_global_count()"
objmthd "script_module" "uint get_imported_function_count()"
objmthd "script_module" "uint set_access_mask(uint)"
objmthd "script_module" "const string get_imported_function_decl(uint)"
objmthd "script_module" "int get_imported_function_index(const string&in)"
objmthd "script_module" "const string get_imported_function_module(uint)"
objmthd "script_module" "string get_name() property"
objmthd "script_module" "void set_name(const string&in) property"
objprop "script_module" "uint max_statement_count" 0 0
access 8
objbeh "mixer" 3 "mixer@ mixer()"
objbeh "mixer" 5 "void $beh5()"
objbeh "mixer" 6 "void $beh6()"
objmthd "mixer" "bool set_fx(const string&in, int = - 1)"
objmthd "mixer" "bool set_position(float, float, float, float, float, float, float, float, float)"
objmthd "mixer" "bool set_mixer(mixer@ = null)"
objmthd "mixer" "bool get_sliding() const property"
objmthd "mixer" "bool get_pan_sliding() const property"
objmthd "mixer" "bool get_pitch_sliding() const property"
objmthd "mixer" "bool get_volume_sliding() const property"
objmthd "mixer" "float get_pitch() const property"
objmthd "mixer" "void set_pitch(float) property"
objmthd "mixer" "bool slide_pitch(float, uint)"
objmthd "mixer" "float get_pan() const property"
objmthd "mixer" "void set_pan(float) property"
objmthd "mixer" "bool slide_pan(float, uint)"
objmthd "mixer" "float get_volume() const property"
objmthd "mixer" "void set_volume(float) property"
objmthd "mixer" "bool slide_volume(float, uint)"
objbeh "sound" 3 "sound@ sound()"
objbeh "sound" 5 "void $beh5()"
objbeh "sound" 6 "void $beh6()"
objmthd "sound" "bool close()"
objmthd "sound" "bool load(const string&in, pack@ = sound_default_pack, bool = true)"
objmthd "sound" "bool load(sound_close_callback@, sound_length_callback@, sound_read_callback@, sound_seek_callback@, const string&in, const string&in = \"\")"
objmthd "sound" "bool load(string&inout, uint, const string&in = \"\", bool = false)"
objmthd "sound" "bool load_url(const string&in)"
objmthd "sound" "bool stream(const string&in, pack@ = sound_default_pack)"
objmthd "sound" "bool push_memory(const string&in, bool = false, int = 0, int = 0)"
objmthd "sound" "bool set_position(float, float, float, float, float, float, float, float, float)"
objmthd "sound" "bool set_mixer(mixer@ = null)"
objmthd "sound" "void set_hrtf(bool = true)"
objmthd "sound" "void set_length(float = 0.0)"
objmthd "sound" "bool set_fx(const string&in, int = - 1)"
objmthd "sound" "bool play(bool = true)"
objmthd "sound" "bool play_wait()"
objmthd "sound" "bool play_looped()"
objmthd "sound" "bool pause()"
objmthd "sound" "bool stop()"
objmthd "sound" "bool seek(float)"
objmthd "sound" "bool get_active() const property"
objmthd "sound" "bool get_playing() const property"
objmthd "sound" "bool get_paused() const property"
objmthd "sound" "bool get_sliding() const property"
objmthd "sound" "bool get_pan_sliding() const property"
objmthd "sound" "bool get_pitch_sliding() const property"
objmthd "sound" "bool get_volume_sliding() const property"
objmthd "sound" "float get_length() const property"
objmthd "sound" "float get_position() const property"
objmthd "sound" "float get_pitch() const property"
objmthd "sound" "void set_pitch(float) property"
objmthd "sound" "bool slide_pitch(float, uint)"
objmthd "sound" "float get_pan() const property"
objmthd "sound" "void set_pan(float) property"
objmthd "sound" "bool slide_pan(float, uint)"
objmthd "sound" "float get_volume() const property"
objmthd "sound" "void set_volume(float) property"
objmthd "sound" "bool slide_volume(float, uint)"
objprop "sound" "const string loaded_filename" 0 0
objbeh "sound_environment" 3 "sound_environment@ sound_environment()"
objbeh "sound_environment" 5 "void $beh5()"
objbeh "sound_environment" 6 "void $beh6()"
objmthd "sound_environment" "bool add_material(const string&in, float, float, float, float, float, float, float, bool = false)"
objmthd "sound_environment" "bool add_box(const string&in, float, float, float, float, float, float)"
objmthd "sound_environment" "mixer@ new_mixer()"
objmthd "sound_environment" "sound@ new_sound()"
objmthd "sound_environment" "void update()"
objmthd "sound_environment" "void set_listener(float, float, float, float)"
access 1000
objbeh "thread" 3 "thread@ thread()"
objbeh "thread" 3 "thread@ thread(const string&in)"
objbeh "thread" 5 "void $beh5()"
objbeh "thread" 6 "void $beh6()"
objmthd "thread" "int get_id() const property"
objmthd "thread" "void set_priority(thread_priority) property"
objmthd "thread" "thread_priority get_priority() const property"
objmthd "thread" "void set_name(const string&in) property"
objmthd "thread" "string get_name() const property"
objmthd "thread" "void join()"
objmthd "thread" "bool join(uint)"
objmthd "thread" "bool get_running() const property"
objmthd "thread" "void start(thread_callback@, dictionary@ = null)"
objmthd "thread" "void wake_up()"
objbeh "mutex" 3 "mutex@ mutex()"
objbeh "mutex" 5 "void $beh5()"
objbeh "mutex" 6 "void $beh6()"
objmthd "mutex" "void lock(uint)"
objmthd "mutex" "bool try_lock(uint)"
objmthd "mutex" "void lock()"
objmthd "mutex" "bool try_lock()"
objmthd "mutex" "void unlock()"
objbeh "mutex_lock" 2 "void mutex_lock()"
objbeh "mutex_lock" 0 "void mutex_lock(mutex@)"
objbeh "mutex_lock" 0 "void mutex_lock(mutex@, uint)"
objmthd "mutex_lock" "void unlock()"
objbeh "fast_mutex" 3 "fast_mutex@ fast_mutex()"
objbeh "fast_mutex" 5 "void $beh5()"
objbeh "fast_mutex" 6 "void $beh6()"
objmthd "fast_mutex" "void lock(uint)"
objmthd "fast_mutex" "bool try_lock(uint)"
objmthd "fast_mutex" "void lock()"
objmthd "fast_mutex" "bool try_lock()"
objmthd "fast_mutex" "void unlock()"
objbeh "fast_mutex_lock" 2 "void fast_mutex_lock()"
objbeh "fast_mutex_lock" 0 "void fast_mutex_lock(fast_mutex@)"
objbeh "fast_mutex_lock" 0 "void fast_mutex_lock(fast_mutex@, uint)"
objmthd "fast_mutex_lock" "void unlock()"
objbeh "named_mutex" 3 "named_mutex@ named_mutex(const string&in)"
objbeh "named_mutex" 5 "void $beh5()"
objbeh "named_mutex" 6 "void $beh6()"
objmthd "named_mutex" "void lock()"
objmthd "named_mutex" "bool try_lock()"
objmthd "named_mutex" "void unlock()"
objbeh "named_mutex_lock" 2 "void named_mutex_lock()"
objbeh "named_mutex_lock" 0 "void named_mutex_lock(named_mutex@)"
objmthd "named_mutex_lock" "void unlock()"
objbeh "spinlock_mutex" 3 "spinlock_mutex@ spinlock_mutex(const string&in)"
objbeh "spinlock_mutex" 5 "void $beh5()"
objbeh "spinlock_mutex" 6 "void $beh6()"
objmthd "spinlock_mutex" "void lock()"
objmthd "spinlock_mutex" "bool try_lock()"
objmthd "spinlock_mutex" "void unlock()"
objbeh "spinlock_mutex_lock" 2 "void spinlock_mutex_lock()"
objbeh "spinlock_mutex_lock" 0 "void spinlock_mutex_lock(spinlock_mutex@)"
objmthd "spinlock_mutex_lock" "void unlock()"
objbeh "rw_lock" 3 "rw_lock@ rw_lock()"
objbeh "rw_lock" 5 "void $beh5()"
objbeh "rw_lock" 6 "void $beh6()"
objmthd "rw_lock" "void read_lock()"
objmthd "rw_lock" "bool try_read_lock()"
objmthd "rw_lock" "void write_lock()"
objmthd "rw_lock" "bool try_write_lock()"
objmthd "rw_lock" "void unlock()"
objbeh "rw_scoped_lock" 2 "void rw_scoped_lock()"
objbeh "rw_scoped_lock" 0 "void rw_scoped_lock(rw_lock@, bool)"
objbeh "rw_read_lock" 2 "void rw_read_lock()"
objbeh "rw_read_lock" 0 "void rw_read_lock(rw_lock@)"
objbeh "rw_write_lock" 2 "void rw_write_lock()"
objbeh "rw_write_lock" 0 "void rw_write_lock(rw_lock@)"
objbeh "thread_event" 3 "thread_event@ thread_event(thread_event_type = THREAD_EVENT_AUTO_RESET)"
objbeh "thread_event" 5 "void $beh5()"
objbeh "thread_event" 6 "void $beh6()"
objmthd "thread_event" "void set()"
objmthd "thread_event" "void wait()"
objmthd "thread_event" "void wait(uint)"
objmthd "thread_event" "bool try_wait(uint)"
objmthd "thread_event" "void reset()"
objbeh "thread_pool" 3 "thread_pool@ thread_pool(int = 2, int = 16, int = 60, int = 0)"
objbeh "thread_pool" 5 "void $beh5()"
objbeh "thread_pool" 6 "void $beh6()"
objmthd "thread_pool" "void add_capacity(int)"
objmthd "thread_pool" "int get_capacity() const property"
objmthd "thread_pool" "void set_stack_size(int) property"
objmthd "thread_pool" "int get_stack_size() const property"
objmthd "thread_pool" "int get_used() const property"
objmthd "thread_pool" "int get_allocated() const property"
objmthd "thread_pool" "int get_available() const property"
objmthd "thread_pool" "void start(thread_callback@, dictionary@ = null)"
objmthd "thread_pool" "void start(thread_callback@, dictionary@, thread_priority)"
objmthd "thread_pool" "void start(thread_callback@, dictionary@, const string&in)"
objmthd "thread_pool" "void start(thread_callback@, dictionary@, const string&in, thread_priority)"
objmthd "thread_pool" "void stop_all()"
objmthd "thread_pool" "void join_all()"
objmthd "thread_pool" "void collect()"
objmthd "thread_pool" "const string& get_name() const property"
access 400
objbeh "timer_queue" 3 "timer_queue@ timer_queue()"
objbeh "timer_queue" 5 "void $beh5()"
objbeh "timer_queue" 6 "void $beh6()"
objmthd "timer_queue" "void set(const string&in, timer_callback@, const string&in, uint64, bool = false)"
objmthd "timer_queue" "void set(const string&in, timer_callback@, uint64, bool = false)"
objmthd "timer_queue" "uint64 elapsed(const string&in) const"
objmthd "timer_queue" "uint64 timeout(const string&in) const"
objmthd "timer_queue" "bool exists(const string&in) const"
objmthd "timer_queue" "bool restart(const string&in)"
objmthd "timer_queue" "bool is_repeating(const string&in) const"
objmthd "timer_queue" "bool set_timeout(const string&in, uint64, bool = false)"
objmthd "timer_queue" "bool delete(const string&in)"
objmthd "timer_queue" "void flush()"
objmthd "timer_queue" "void reset()"
objmthd "timer_queue" "uint size() const"
objmthd "timer_queue" "bool loop(int = 0, int = 100)"
objprop "timer_queue" "const string failures" 0 0
access 200
objbeh "timer" 3 "timer@ timer()"
objbeh "timer" 3 "timer@ timer(bool)"
objbeh "timer" 3 "timer@ timer(int64, bool = speedhack_protection)"
objbeh "timer" 3 "timer@ timer(int64, uint64, bool = speedhack_protection)"
objbeh "timer" 5 "void $beh5()"
objbeh "timer" 6 "void $beh6()"
objmthd "timer" "int64 get_elapsed() const property"
objmthd "timer" "void set_elapsed(int64) property"
objmthd "timer" "bool has_elapsed(int64) const"
objmthd "timer" "void force(int64)"
objmthd "timer" "void adjust(int64)"
objmthd "timer" "void restart()"
objmthd "timer" "bool get_secure() const property"
objmthd "timer" "void set_secure(bool) property"
objmthd "timer" "bool get_paused() const property"
objmthd "timer" "bool get_running() const property"
objmthd "timer" "void toggle_pause()"
objmthd "timer" "bool pause()"
objmthd "timer" "bool resume()"
objmthd "timer" "bool set_paused(bool)"
objprop "timer" "uint64 accuracy" 0 0
objbeh "calendar" 2 "void calendar()"
objbeh "calendar" 0 "void calendar()"
objbeh "calendar" 0 "void calendar(double)"
objbeh "calendar" 0 "void calendar(int, int, int, int = 0, int = 0, int = 0, int = 0, int = 0)"
objbeh "calendar" 0 "void calendar(const datetime&in)"
objbeh "calendar" 0 "void calendar(const calendar&in)"
objmthd "calendar" "calendar& opAssign(const calendar&in)"
objmthd "calendar" "calendar& opAssign(const timestamp&in)"
objmthd "calendar" "calendar& opAssign(double)"
objmthd "calendar" "calendar& set(int, int, int, int = 0, int = 0, int = 0, int = 0, int = 0)"
objmthd "calendar" "int get_year() const property"
objmthd "calendar" "int get_yearday() const property"
objmthd "calendar" "int get_month() const property"
objmthd "calendar" "int week(int = 1) const"
objmthd "calendar" "int get_weekday() const property"
objmthd "calendar" "int get_day() const property"
objmthd "calendar" "int get_hour() const property"
objmthd "calendar" "int get_hour12() const property"
objmthd "calendar" "bool get_AM() const property"
objmthd "calendar" "bool get_PM() const property"
objmthd "calendar" "int get_minute() const property"
objmthd "calendar" "int get_second() const property"
objmthd "calendar" "int get_millisecond() const property"
objmthd "calendar" "int get_microsecond() const property"
objmthd "calendar" "double get_julian_day() const property"
objmthd "calendar" "int get_tzd() const property"
objmthd "calendar" "datetime get_UTC() const property"
objmthd "calendar" "timestamp get_timestamp() const property"
objmthd "calendar" "int64 get_UTC_time() const property"
objmthd "calendar" "bool opEquals(const calendar&in) const"
objmthd "calendar" "int opCmp(const calendar&in) const"
objmthd "calendar" "calendar opAdd(const timespan&in) const"
objmthd "calendar" "calendar opSub(const timespan&in) const"
objmthd "calendar" "timespan opSub(const calendar&in) const"
objmthd "calendar" "calendar& opAddAssign(const timespan&in)"
objmthd "calendar" "calendar& opSubAssign(const timespan&in)"
objmthd "calendar" "string format(const string&in)"
objbeh "datetime" 2 "void datetime()"
objbeh "datetime" 0 "void datetime()"
objbeh "datetime" 0 "void datetime(double)"
objbeh "datetime" 0 "void datetime(int, int, int, int = 0, int = 0, int = 0, int = 0, int = 0)"
objbeh "datetime" 0 "void datetime(const timestamp&in)"
objbeh "datetime" 0 "void datetime(const datetime&in)"
objmthd "datetime" "datetime& opAssign(const datetime&in)"
objmthd "datetime" "datetime& opAssign(const timestamp&in)"
objmthd "datetime" "datetime& opAssign(double)"
objmthd "datetime" "datetime& set(int, int, int, int = 0, int = 0, int = 0, int = 0, int = 0)"
objmthd "datetime" "int get_year() const property"
objmthd "datetime" "int get_yearday() const property"
objmthd "datetime" "int get_month() const property"
objmthd "datetime" "int week(int = 1) const"
objmthd "datetime" "int get_weekday() const property"
objmthd "datetime" "int get_day() const property"
objmthd "datetime" "int get_hour() const property"
objmthd "datetime" "int get_hour12() const property"
objmthd "datetime" "bool get_AM() const property"
objmthd "datetime" "bool get_PM() const property"
objmthd "datetime" "int get_minute() const property"
objmthd "datetime" "int get_second() const property"
objmthd "datetime" "int get_millisecond() const property"
objmthd "datetime" "int get_microsecond() const property"
objmthd "datetime" "double get_julian_day() const property"
objmthd "datetime" "timestamp get_timestamp() const property"
objmthd "datetime" "int64 get_UTC_time() const property"
objmthd "datetime" "bool opEquals(const datetime&in) const"
objmthd "datetime" "int opCmp(const datetime&in) const"
objmthd "datetime" "datetime opAdd(const timespan&in) const"
objmthd "datetime" "datetime opSub(const timespan&in) const"
objmthd "datetime" "timespan opSub(const datetime&in) const"
objmthd "datetime" "datetime& opAddAssign(const timespan&in)"
objmthd "datetime" "datetime& opSubAssign(const timespan&in)"
objmthd "datetime" "void make_UTC(int)"
objmthd "datetime" "void make_local(int)"
objmthd "datetime" "string format(const string&in, int = 0xffff)"
objbeh "timespan" 2 "void timespan()"
objbeh "timespan" 0 "void timespan()"
objbeh "timespan" 0 "void timespan(int64)"
objbeh "timespan" 0 "void timespan(int, int)"
objbeh "timespan" 0 "void timespan(int, int, int, int, int)"
objbeh "timespan" 0 "void timespan(const timespan&in)"
objmthd "timespan" "timespan& opAssign(const timespan&in)"
objmthd "timespan" "timespan& opAssign(int64)"
objmthd "timespan" "bool opEquals(const timespan&in) const"
objmthd "timespan" "bool opEquals(int64) const"
objmthd "timespan" "int opCmp(const timespan&in) const"
objmthd "timespan" "int opCmp(int64) const"
objmthd "timespan" "timespan opAdd(int64) const"
objmthd "timespan" "timespan opAdd(const timespan&in) const"
objmthd "timespan" "timespan opSub(int64) const"
objmthd "timespan" "timespan opSub(const timespan&in) const"
objmthd "timespan" "timespan& opAddAssign(int64)"
objmthd "timespan" "timespan& opAddAssign(const timespan&in)"
objmthd "timespan" "timespan& opSubAssign(int64)"
objmthd "timespan" "timespan& opSubAssign(const timespan&in)"
objmthd "timespan" "int get_days() const property"
objmthd "timespan" "int get_hours() const property"
objmthd "timespan" "int get_total_hours() const property"
objmthd "timespan" "int get_minutes() const property"
objmthd "timespan" "int get_total_minutes() const property"
objmthd "timespan" "int get_seconds() const property"
objmthd "timespan" "int get_total_seconds() const property"
objmthd "timespan" "int get_milliseconds() const property"
objmthd "timespan" "int get_total_milliseconds() const property"
objmthd "timespan" "int get_microseconds() const property"
objmthd "timespan" "int get_useconds() const property"
objmthd "timespan" "int get_total_microseconds() const property"
objmthd "timespan" "string format(const string&in = \"%dd %H:%M:%S.%i\")"
objbeh "timestamp" 2 "void timestamp()"
objbeh "timestamp" 0 "void timestamp()"
objbeh "timestamp" 0 "void timestamp(int64)"
objbeh "timestamp" 0 "void timestamp(const timestamp&in)"
objmthd "timestamp" "timestamp& opAssign(const timestamp&in)"
objmthd "timestamp" "timestamp& opAssign(int64)"
objmthd "timestamp" "void update()"
objmthd "timestamp" "bool opEquals(const timestamp&in) const"
objmthd "timestamp" "int opCmp(const timestamp&in) const"
objmthd "timestamp" "timestamp opAdd(int64) const"
objmthd "timestamp" "timestamp opAdd(const timespan&in) const"
objmthd "timestamp" "timestamp opSub(int64) const"
objmthd "timestamp" "timestamp opSub(const timespan&in) const"
objmthd "timestamp" "int64 opSub(const timestamp&in) const"
objmthd "timestamp" "timestamp& opAddAssign(int64)"
objmthd "timestamp" "timestamp& opAddAssign(const timespan&in)"
objmthd "timestamp" "timestamp& opSubAssign(int64)"
objmthd "timestamp" "timestamp& opSubAssign(const timespan&in)"
objmthd "timestamp" "int64 get_UTC_time() const property"
objmthd "timestamp" "int64 get_elapsed() const property"
objmthd "timestamp" "bool has_elapsed(int64) const"
objmthd "timestamp" "int64 opImplConv() const"
objmthd "timestamp" "string format(const string&in, int = 0xffff)"
access 10
objbeh "tts_voice" 3 "tts_voice@ tts_voice(const string&in = \"builtin fallback voice\")"
objbeh "tts_voice" 5 "void $beh5()"
objbeh "tts_voice" 6 "void $beh6()"
objmthd "tts_voice" "bool speak(const string&in, bool = false)"
objmthd "tts_voice" "bool speak_interrupt(const string&in)"
objmthd "tts_voice" "bool speak_to_file(const string&in, const string&in)"
objmthd "tts_voice" "bool speak_wait(const string&in, bool = false)"
objmthd "tts_voice" "string speak_to_memory(const string&in)"
objmthd "tts_voice" "bool speak_interrupt_wait(const string&in)"
objmthd "tts_voice" "bool refresh()"
objmthd "tts_voice" "bool stop()"
objmthd "tts_voice" "array<string>@ list_voices() const"
objmthd "tts_voice" "bool set_voice(int)"
objmthd "tts_voice" "int get_rate() const property"
objmthd "tts_voice" "void set_rate(int) property"
objmthd "tts_voice" "int get_pitch() const property"
objmthd "tts_voice" "void set_pitch(int) property"
objmthd "tts_voice" "int get_volume() const property"
objmthd "tts_voice" "void set_volume(int) property"
objmthd "tts_voice" "int get_voice_count() const property"
objmthd "tts_voice" "string get_voice_name(int) const"
objmthd "tts_voice" "bool get_speaking() const property"
objprop "tts_voice" "const int voice" 0 0
access 40
objbeh "internet_request" 3 "internet_request@ internet_request()"
objbeh "internet_request" 3 "internet_request@ internet_request(const string&in, bool = true)"
objbeh "internet_request" 3 "internet_request@ internet_request(const string&in, const string&in, bool = true)"
objbeh "internet_request" 3 "internet_request@ internet_request(const string&in, const string&in, const string&in, bool = true)"
objbeh "internet_request" 5 "void $beh5()"
objbeh "internet_request" 6 "void $beh6()"
objmthd "internet_request" "bool perform()"
objmthd "internet_request" "bool perform(const string&in)"
objmthd "internet_request" "bool post(const string&in, const string&in, const string&in = '')"
objmthd "internet_request" "bool mail(const string&in, const string&in, const string&in, const string&in) const"
objmthd "internet_request" "void set_url(const string&in) const"
objmthd "internet_request" "void set_path(const string&in) const"
objmthd "internet_request" "void set_authentication(string, string)"
objmthd "internet_request" "void set_payload(const string&in) const"
objmthd "internet_request" "void set_mail(const string&in, const string&in) const"
objmthd "internet_request" "void set_header(const string&in, const string&in) const"
objmthd "internet_request" "void reset() const"
objprop "internet_request" "const bool no_curl" 0 0
objprop "internet_request" "const bool complete" 0 0
objprop "internet_request" "const bool in_progress" 0 0
objprop "internet_request" "bool follow_redirects" 0 0
objprop "internet_request" "int max_redirects" 0 0
objprop "internet_request" "const double bytes_downloaded" 0 0
objprop "internet_request" "const double download_size" 0 0
objprop "internet_request" "const double download_percent" 0 0
objprop "internet_request" "const double bytes_uploaded" 0 0
objprop "internet_request" "const double upload_size" 0 0
objprop "internet_request" "const double upload_percent" 0 0
objprop "internet_request" "const int status_code" 0 0
objprop "internet_request" "const double total_time" 0 0
objprop "internet_request" "const string url" 0 0
objprop "internet_request" "const string final_url" 0 0
objprop "internet_request" "const string response_body" 0 0
objprop "internet_request" "const string response_headers" 0 0
objprop "internet_request" "string debug_file" 0 0
objprop "internet_request" "string user_agent" 0 0
objprop "internet_request" "const string path" 0 0
objprop "internet_request" "const string auth_username" 0 0
objprop "internet_request" "const string auth_password" 0 0
access 20000
objbeh "git_repository" 3 "git_repository@ git_repository()"
objbeh "git_repository" 5 "void $beh5()"
objbeh "git_repository" 6 "void $beh6()"
objmthd "git_repository" "int open(const string&in)"
objmthd "git_repository" "int create(const string&in)"
objmthd "git_repository" "bool close()"
objmthd "git_repository" "int add(const string&in)"
objmthd "git_repository" "int add_all(array<string>@, int = 0)"
objmthd "git_repository" "int add_all(array<string>@, int, git_repository_match_callback@, const string&in = \"\")"
objmthd "git_repository" "int update_all(array<string>@)"
objmthd "git_repository" "int update_all(array<string>@, git_repository_match_callback@, const string&in = \"\")"
objmthd "git_repository" "int remove(const string&in)"
objmthd "git_repository" "int remove_all(array<string>@)"
objmthd "git_repository" "int remove_all(array<string>@, git_repository_match_callback@, const string&in = \"\")"
objmthd "git_repository" "git_repository_commit@ commit(const string&in, const string&in, const string&in, const string&in = \"HEAD\")"
objmthd "git_repository" "git_repository_commit@ commit(const string&in, const string&in, const string&in, const string&in, const string&in, const string&in = \"HEAD\")"
objmthd "git_repository" "string commit_diff(git_repository_commit@, git_repository_commit@, uint = 3, uint = 0, uint = 0, uint = 1, array<string>@ = { }, const string&in = \"a\", const string&in = \"b\")"
objmthd "git_repository" "git_repository_commit@ commit_lookup(const string&in)"
objmthd "git_repository" "git_repository_commit_iterator@ commit_iterate(array<string>@ = { }, const string&in = '', const string&in = '', uint64 = 0, uint64 = 0, uint = 0, uint = 0)"
objmthd "git_repository" "git_repository_entry@ get_entry(uint)"
objmthd "git_repository" "int get_entry_count() property"
objmthd "git_repository" "int get_is_empty() property"
objmthd "git_repository" "string get_path() property"
objmthd "git_repository" "string get_workdir() property"
objmthd "git_repository" "bool get_active() property"
objbeh "git_repository_entry" 5 "void $beh5()"
objbeh "git_repository_entry" 6 "void $beh6()"
objmthd "git_repository_entry" "uint get_ctime() property"
objmthd "git_repository_entry" "uint get_mtime() property"
objmthd "git_repository_entry" "uint get_file_size() property"
objmthd "git_repository_entry" "string get_oid() property"
objmthd "git_repository_entry" "string get_path() property"
objbeh "git_repository_commit" 5 "void $beh5()"
objbeh "git_repository_commit" 6 "void $beh6()"
objmthd "git_repository_commit" "uint get_time() property"
objmthd "git_repository_commit" "int get_parent_count() property"
objmthd "git_repository_commit" "git_repository_commit@ get_parent(uint)"
objmthd "git_repository_commit" "const string get_id() property"
objmthd "git_repository_commit" "const string get_message() property"
objmthd "git_repository_commit" "string get_summary() property"
objmthd "git_repository_commit" "const string get_body() property"
objmthd "git_repository_commit" "const string get_raw_header() property"
objmthd "git_repository_commit" "const string get_committer() property"
objmthd "git_repository_commit" "const string get_committer_email() property"
objmthd "git_repository_commit" "const string get_author() property"
objmthd "git_repository_commit" "const string get_author_email() property"
objbeh "git_repository_commit_iterator" 5 "void $beh5()"
objbeh "git_repository_commit_iterator" 6 "void $beh6()"
objmthd "git_repository_commit_iterator" "git_repository_commit@ get_commit() property"
objmthd "git_repository_commit_iterator" "git_repository_commit@ opImplCast()"
objmthd "git_repository_commit_iterator" "bool opPostInc()"
objbeh "sqlite3statement" 5 "void $beh5()"
objbeh "sqlite3statement" 6 "void $beh6()"
access 10000
objmthd "sqlite3statement" "int step()"
objmthd "sqlite3statement" "int reset()"
objmthd "sqlite3statement" "string get_expanded_sql_statement() property"
objmthd "sqlite3statement" "string get_sql_statement() property"
objmthd "sqlite3statement" "int get_bind_param_count() property"
objmthd "sqlite3statement" "int get_column_count() property"
objmthd "sqlite3statement" "int bind_blob(int, const string&in, bool = true)"
objmthd "sqlite3statement" "int bind_double(int, double)"
objmthd "sqlite3statement" "int bind_int(int, int)"
objmthd "sqlite3statement" "int bind_int64(int, int64)"
objmthd "sqlite3statement" "int bind_null(int)"
objmthd "sqlite3statement" "int bind_param_index(const string&in)"
objmthd "sqlite3statement" "string bind_param_name(int)"
objmthd "sqlite3statement" "int bind_text(int, const string&in, bool = true)"
objmthd "sqlite3statement" "int clear_bindings()"
objmthd "sqlite3statement" "string column_blob(int)"
objmthd "sqlite3statement" "int column_bytes(int)"
objmthd "sqlite3statement" "string column_decltype(int)"
objmthd "sqlite3statement" "double column_double(int)"
objmthd "sqlite3statement" "int column_int(int)"
objmthd "sqlite3statement" "int64 column_int64(int)"
objmthd "sqlite3statement" "string column_name(int)"
objmthd "sqlite3statement" "int column_type(int)"
objmthd "sqlite3statement" "string column_text(int)"
objbeh "sqlite3" 3 "sqlite3@ sqlite3()"
objbeh "sqlite3" 3 "sqlite3@ sqlite3(const string&in, int = 6)"
objbeh "sqlite3" 5 "void $beh5()"
objbeh "sqlite3" 6 "void $beh6()"
objmthd "sqlite3" "int close()"
objmthd "sqlite3" "int open(const string&in, int = 6)"
objmthd "sqlite3" "sqlite3statement@ prepare(const string&in, int&out = void)"
objmthd "sqlite3" "int execute(const string&in, array<array<string>>@ = null)"
objmthd "sqlite3" "int64 get_rows_changed() property"
objmthd "sqlite3" "int64 get_total_rows_changed() property"
objmthd "sqlite3" "int limit(int, int)"
objmthd "sqlite3" "int set_authorizer(sqlite3authorizer@, const string&in = \"\")"
objmthd "sqlite3" "int64 get_last_insert_rowid() property"
objmthd "sqlite3" "void set_last_insert_rowid(int64) property"
objmthd "sqlite3" "int get_last_error()"
objmthd "sqlite3" "string get_last_error_text()"
objmthd "sqlite3" "bool get_active() property"

// Functions
access 1
func "string format_int(int64, const string&in = \"\", uint = 0)"
func "string format_uint(uint64, const string&in = \"\", uint = 0)"
func "string format_float(double, const string&in = \"\", uint = 0, uint = 0)"
func "int64 parse_int(const string&in, uint = 10, uint&out = 0)"
func "uint64 parseUInt(const string&in, uint = 10, uint&out = 0)"
func "string join(const array<string>&in, const string&in)"
func "float fp_from_IEEE(uint)"
func "uint fp_to_IEEE(float)"
func "double fpFromIEEE(uint64)"
func "uint64 fpToIEEE(double)"
func "bool close_to(float, float, float = 0.00001f)"
func "bool close_to(double, double, double = 0.0000000001)"
func "float cos(float)"
func "float sin(float)"
func "float tan(float)"
func "float acos(float)"
func "float asin(float)"
func "float atan(float)"
func "float atan2(float, float)"
func "float cosh(float)"
func "float sinh(float)"
func "float tanh(float)"
func "float log(float)"
func "float log10(float)"
func "float pow(float, float)"
func "float sqrt(float)"
func "float ceil(float)"
func "float abs(float)"
func "float floor(float)"
func "float fraction(float)"
access 8000
func "void print(const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null)"
func "void println(const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null)"
func "void printf(const string&in, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null, const ?&in = null)"
access 1
func "void throw(const string&in)"
func "string get_exception_info()"
func "int get_exception_line()"
func "string get_exception_function()"
func "string get_exception_file()"
access 4
func "string string_deflate(const string&in, int = 9)"
func "string string_inflate(const string&in)"
func "string string_aes_encrypt(const string&in, string)"
func "string string_aes_decrypt(const string&in, string)"
func "string random_bytes(uint)"
access 8000
func "datastream@ get_cin() property"
func "datastream@ get_cout() property"
func "datastream@ get_cerr() property"
access 4
func "string string_hash_md5(const string&in, bool = false)"
func "string string_hash_sha1(const string&in, bool = false)"
func "string string_hash_sha224(const string&in, bool = false)"
func "string string_hash_sha256(const string&in, bool = false)"
func "string string_hash_sha384(const string&in, bool = false)"
func "string string_hash_sha512(const string&in, bool = false)"
func "uint crc32(const string&in)"
func "uint HOTP(const string&in, uint64, uint = 6)"
access 20
func "bool key_pressed(uint)"
func "bool key_repeating(uint)"
func "bool key_down(uint)"
func "bool key_released(uint)"
func "bool key_up(uint)"
func "bool insure_key_up(uint)"
func "bool simulate_key_down(uint)"
func "bool simulate_key_up(uint)"
func "array<key_code>@ keys_pressed()"
func "array<key_code>@ keys_down()"
func "uint total_keys_down()"
func "array<key_code>@ keys_released()"
func "key_modifier get_keyboard_modifiers() property"
func "void set_keyboard_modifiers(key_modifier) property"
func "void reset_keyboard()"
func "bool mouse_pressed(uint8)"
func "bool mouse_down(uint8)"
func "bool mouse_released(uint8)"
func "bool mouse_up(uint8)"
func "void mouse_update()"
func "string get_characters()"
func "bool install_keyhook(bool = true)"
func "void uninstall_keyhook()"
func "array<uint64>@ get_touch_devices()"
func "string get_touch_device_name(uint64)"
func "touch_device_type get_touch_device_type(uint64)"
func "array<touch_finger>@ query_touch_device(uint64 = 0)"
access 4
func "string http_status_reason(http_status)"
func "string url_encode(const string&in, const string&in = \"\")"
func "string url_decode(const string&in, bool = true)"
access 40
func "string url_request(const string&in, const string&in, const string&in = \"\", http_response&out = void)"
func "string url_get(const string&in, http_response&out = void)"
func "string url_post(const string&in, const string&in, http_response&out = void)"
access 40000
func "string string_create_from_pointer(uint64, uint64)"
access 1
func "vector rotate(const vector&in, const vector&in, double, bool = true)"
func "bool boxes_intersect(float, float, float, float, float, float, float, float, float, float)"
access 1000
func "bool chdir(const string&in)"
access 4
func "uint8 character_to_ascii(const string&in)"
func "string ascii_to_character(uint8)"
func "string string_base32_normalize(const string&in)"
access 200
func "uint64 get_TIME_STAMP() property"
access 1000
func "array<string>@ get_preferred_locales()"
func "string get_COMMAND_LINE() property"
func "bool run(const string&in, const string&in, bool, bool)"
func "bool is_debugger_present()"
func "int get_last_error()"
access 1
func "double round(double, int)"
func "double tinyexpr(const string&in)"
access 4
func "string number_to_words(int64, bool = true)"
func "uint string_distance(const string&in, const string&in, uint = 1, uint = 1, uint = 1)"
func "string float_to_bytes(float)"
func "float bytes_to_float(const string&in)"
func "string double_to_bytes(double)"
func "double bytes_to_double(const string&in)"
func "bool natural_number_sort(const string&in, const string&in)"
func "int utf8prev(const string&in, int)"
func "int utf8next(const string&in, int)"
func "int utf8size(const string&in)"
access 1
func "uint64 memory_allocate(uint64)"
func "uint64 memory_allocate_units(uint64, uint64)"
func "uint64 memory_reallocate(uint64, uint64)"
func "void memory_free(uint64)"
func "float parse_float(const string&in)"
func "double parse_double(const string&in)"
access 10
func "bool get_SCREEN_READER_AVAILABLE() property"
func "string screen_reader_detect()"
func "bool screen_reader_has_speech()"
func "bool screen_reader_has_braille()"
func "bool screen_reader_is_speaking()"
func "bool screen_reader_output(const string&in, bool = true)"
func "bool screen_reader_speak(const string&in, bool = true)"
func "bool screen_reader_braille(const string&in)"
func "bool screen_reader_silence()"
access 2
func "bool pack_set_global_identifier(const string&in)"
access 4
func "var@ parse_json(const string&in)"
func "var@ parse_json(datastream@)"
func "string string_to_hex(const string&in)"
func "string hex_to_string(const string&in)"
func "string string_base64_encode(const string&in, string_base64_options = STRING_BASE64_DEFAULT)"
func "string string_base64_decode(const string&in, string_base64_options = STRING_BASE64_PADLESS)"
func "string string_base32_encode(const string&in)"
func "string string_base32_decode(const string&in)"
func "string string_recode(const string&in, const string&in, const string&in, int&out = void)"
access 1000
func "void c_debug_message(const string&in)"
func "void c_debug_break()"
func "void c_debug_break(const string&in)"
func "string get_DIRECTORY_HOME() property"
func "string get_DIRECTORY_APPDATA() property"
func "string get_DIRECTORY_COMMON_APPDATA() property"
func "string get_DIRECTORY_LOCAL_APPDATA() property"
func "string get_DIRECTORY_TEMP() property"
func "bool environment_variable_exists(const string&in)"
func "string expand_environment_variables(const string&in)"
func "string read_environment_variable(const string&in, const string&in = \"\")"
func "void write_environment_variable(const string&in, const string&in)"
func "OPERATING_SYSTEM get_OS() property"
func "ARCHITECTURE get_PROCESSOR_ARCHITECTURE() property"
func "uint get_PROCESSOR_COUNT() property"
func "string get_system_node_name() property"
func "string get_system_node_id() property"
func "bool get_system_is_unix() property"
func "bool get_system_is_windows() property"
func "string cwdir()"
access 1
func "bool regexp_match(const string&in, const string&in, int = RE_UTF8)"
func "bool regexp_search(const string&in, const string&in, int = RE_UTF8)"
func "string regexp_replace(const string&in, const string&in, const string&in, int = RE_UTF8)"
func "bool random_set_state(const string&in)"
func "string random_get_state()"
func "uint random_seed()"
func "uint64 random_seed64()"
func "int random(int, int)"
func "bool random_bool(int = 50)"
func "string random_character(const string&in, const string&in)"
access 80000000
func "int get_garbage_collect_mode() property"
func "void set_garbage_collect_mode(int) property"
func "int get_garbage_collect_auto_frequency() property"
func "void set_garbage_collect_auto_frequency(int) property"
func "void garbage_collect(bool = true)"
func "void start_profiling()"
func "void stop_profiling()"
func "void reset_profiler()"
func "string generate_profile(bool = true)"
access 1
func "string get_call_stack()"
func "int get_call_stack_size()"
func "string get_SCRIPT_CURRENT_FUNCTION() property"
func "string get_SCRIPT_CURRENT_FILE() property"
func "int get_SCRIPT_CURRENT_LINE() property"
func "void assert(bool, const string&in = \"\")"
access 80000000
func "string get_SCRIPT_EXECUTABLE() property"
func "bool get_SCRIPT_COMPILED() property"
func "string get_function_signature(?&in)"
func "void acquire_exclusive_lock()"
func "void release_exclusive_lock()"
func "void acquire_shared_lock()"
func "void release_shared_lock()"
func "void script_dump_engine_configuration(datastream@)"
access 100
func "script_module@ script_get_module(const string&in, int = 1)"
access 1
func "dictionary@ deserialize(const string&in)"
func "string packet(const ?&in)"
func "string packet(const ?&in, const ?&in)"
func "string packet(const ?&in, const ?&in, const ?&in)"
func "string packet(const ?&in, const ?&in, const ?&in, const ?&in)"
func "string packet(const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
func "string packet(const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
func "string packet(const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
func "string packet(const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
func "string packet(const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
func "string packet(const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
func "string packet(const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
func "string packet(const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
func "string packet(const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
func "string packet(const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
func "string packet(const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
func "string packet(const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in, const ?&in)"
access 8
func "bool get_SOUND_AVAILABLE() property"
func "float get_sound_master_volume() property"
func "void set_sound_master_volume(float) property"
func "uint get_sound_input_device() property"
func "void set_sound_input_device(uint) property"
func "uint get_sound_input_device_count() property"
func "array<string>@ get_sound_input_devices() property"
func "uint get_sound_output_device() property"
func "void set_sound_output_device(uint) property"
func "uint get_sound_output_device_count() property"
func "array<string>@ get_sound_output_devices() property"
func "bool get_sound_global_hrtf() property"
func "void set_sound_global_hrtf(bool) property"
access 80000000
func "string generate_system_fingerprint(const string&in = )"
func "string generate_system_fingerprint_legacy1(const string&in = )"
access 1000
func "void exit(int = 0)"
func "uint thread_current_id()"
func "void thread_yield()"
func "bool thread_sleep(uint)"
func "thread@ get_thread_current() property"
func "thread_pool& get_thread_pool_default() property"
access 200
func "int get_DATE_YEAR() property"
func "int get_DATE_MONTH() property"
func "string get_DATE_MONTH_NAME() property"
func "int get_DATE_DAY() property"
func "int get_DATE_WEEKDAY() property"
func "string get_DATE_WEEKDAY_NAME() property"
func "int get_TIME_HOUR() property"
func "int get_TIME_MINUTE() property"
func "int get_TIME_SECOND() property"
func "uint64 ticks(bool = false)"
func "uint64 secure_ticks()"
func "uint64 microticks(bool = false)"
func "uint64 nanoticks()"
func "uint64 get_SYSTEM_PERFORMANCE_COUNTER() property"
func "uint64 get_SYSTEM_PERFORMANCE_FREQUENCY() property"
func "void nanosleep(uint64)"
access 1000
func "uint64 get_TIME_SYSTEM_RUNNING_MILLISECONDS() property"
func "int get_TIMEZONE_BASE_OFFSET() property"
func "int get_TIMEZONE_DST_OFFSET() property"
func "int get_TIMEZONE_OFFSET() property"
func "string get_TIMEZONE_NAME() property"
func "string get_TIMEZONE_STANDARD_NAME() property"
func "string get_TIMEZONE_DST_NAME() property"
access 200
func "timestamp timestamp_from_UTC_time(int64)"
func "bool datetime_is_leap_year(int)"
func "int datetime_days_of_month(int, int)"
func "bool datetime_is_valid(int, int, int, int = 0, int = 0, int = 0, int = 0, int = 0)"
func "datetime parse_datetime(const string&in, const string&in, int&inout)"
func "datetime parse_datetime(const string&in, int&inout)"
func "bool datetime_is_valid_format_string(const string&in)"
func "bool datetime_is_valid_format(const string&in)"
access 2
func "bool directory_exists(const string&in)"
func "bool directory_create(const string&in)"
func "bool directory_delete(const string&in, bool = true)"
func "bool file_exists(const string&in)"
func "bool file_delete(const string&in)"
func "bool file_copy(const string&in, const string&in, bool)"
func "bool file_hard_link(const string&in, const string&in)"
func "bool file_move(const string&in, const string&in)"
func "array<string>@ find_directories(const string&in)"
func "array<string>@ find_files(const string&in)"
func "array<string>@ glob(const string&in, glob_options = GLOB_DEFAULT)"
func "int64 file_get_size(const string&in)"
func "timestamp file_get_date_created(const string&in)"
func "timestamp file_get_date_modified(const string&in)"
func "bool fnmatch(const string&in, const string&in)"
access 800
func "int message_box(const string&in, const string&in, array<string>@, uint = 0)"
func "int alert(const string&in, const string&in, bool = false, uint = 0)"
func "int question(const string&in, const string&in, bool = false, uint = 0)"
access 1000
func "string clipboard_get_text()"
func "bool clipboard_set_text(const string&in)"
func "bool clipboard_set_raw_text(const string&in)"
func "string open_file_dialog(const string&in = \"\", const string&in = \"\")"
func "string save_file_dialog(const string&in = \"\", const string&in = \"\")"
func "string select_folder_dialog(const string&in = \"\")"
func "bool urlopen(const string&in)"
access 800
func "string input_box(const string&in, const string&in, const string&in = '', uint64 = 0)"
func "bool info_box(const string&in, const string&in, const string&in, uint64 = 0)"
func "void next_keyboard_layout()"
func "bool set_application_name(const string&in)"
func "bool show_window(const string&in)"
func "bool destroy_window()"
func "bool hide_window()"
func "bool focus_window()"
func "bool is_window_active()"
func "bool is_window_hidden()"
func "string get_window_text()"
func "uint64 get_window_os_handle()"
func "void refresh_window()"
func "void wait(int)"
func "uint64 idle_ticks()"
func "bool is_console_available()"
access 1
func "void debug_break()"
func "void debug_add_file_breakpoint(const string&in, int)"
func "void debug_add_func_breakpoint(const string&in)"
access 80000000
func "void sleep(uint)"
func "void yield()"
func "void create_coroutine(coroutine@, dictionary@)"
access 40
func "string curl_url_encode(const string&in)"
func "string curl_url_decode(const string&in)"
access 20000
func "int git_last_error_class()"
func "string git_last_error_text()"

// Properties
access 1
prop "const string last_exception_call_stack"
namespace "spec"
prop "const string NEWLINE_DEFAULT"
prop "const string NEWLINE_CR"
prop "const string NEWLINE_CRLF"
prop "const string NEWLINE_LF"
access 20
namespace ""
prop "const float MOUSE_X"
prop "const float MOUSE_Y"
prop "const float MOUSE_Z"
prop "const float MOUSE_ABSOLUTE_X"
prop "const float MOUSE_ABSOLUTE_Y"
prop "const float MOUSE_ABSOLUTE_Z"
access 4
prop "const string HTTP_1_0"
prop "const string HTTP_1_1"
prop "const string HTTP_IDENTITY_TRANSFER_ENCODING"
prop "const string HTTP_CHUNKED_TRANSFER_ENCODING"
prop "const int HTTP_UNKNOWN_CONTENT_LENGTH"
prop "const string HTTP_UNKNOWN_CONTENT_TYPE"
prop "const string HTTP_GET"
prop "const string HTTP_POST"
prop "const string HTTP_HEAD"
prop "const string HTTP_PUT"
prop "const string HTTP_DELETE"
prop "const string HTTP_PATCH"
prop "const string HTTP_OPTIONS"
access 40
prop "const int event_none"
prop "const int event_connect"
prop "const int event_disconnect"
prop "const int event_receive"
access 2
prop "const int PACK_OPEN_MODE_NONE"
prop "const int PACK_OPEN_MODE_APPEND"
prop "const int PACK_OPEN_MODE_CREATE"
prop "const int PACK_OPEN_MODE_READ"
prop "const string pack_global_identifier"
access 1000
prop "const string PLATFORM"
prop "const string PLATFORM_DISPLAY_NAME"
prop "const string PLATFORM_VERSION"
prop "const string PLATFORM_ARCHITECTURE"
access 80000000
prop "const bool profiler_is_running"
access 8
prop "pack@ sound_default_pack"
prop "mixer@ sound_default_mixer"
access 80000000
prop "bool speedhack_protection"
access 200
prop "const int64 MILLISECONDS"
prop "const int64 SECONDS"
prop "const int64 MINUTES"
prop "const int64 HOURS"
prop "const int64 DAYS"
prop "uint64 timer_default_accuracy"
prop "const string DATE_TIME_FORMAT_ISO8601"
prop "const string DATE_TIME_FORMAT_ISO8601_FRAC"
prop "const string DATE_TIME_REGEX_ISO8601"
prop "const string DATE_TIME_FORMAT_RFC822"
prop "const string DATE_TIME_REGEX_RFC822"
prop "const string DATE_TIME_FORMAT_RFC1123"
prop "const string DATE_TIME_REGEX_RFC1123"
prop "const string DATE_TIME_FORMAT_RFC850"
prop "const string DATE_TIME_REGEX_RFC850"
prop "const string DATE_TIME_FORMAT_RFC1036"
prop "const string DATE_TIME_REGEX_RFC1036"
prop "const string DATE_TIME_FORMAT_HTTP"
prop "const string DATE_TIME_REGEX_HTTP"
prop "const string DATE_TIME_FORMAT_ASCTIME"
prop "const string DATE_TIME_REGEX_ASCTIME"
prop "const string DATE_TIME_FORMAT_SORTABLE"
prop "const string DATE_TIME_REGEX_SORTABLE"
access 1
prop "const string NVGT_VERSION"
prop "const string NVGT_VERSION_COMMIT_HASH"
prop "const string NVGT_VERSION_BUILD_TIME"
prop "const uint NVGT_VERSION_BUILD_TIMESTAMP"
prop "const int NVGT_VERSION_MAJOR"
prop "const int NVGT_VERSION_MINOR"
prop "const int NVGT_VERSION_PATCH"
prop "const string NVGT_VERSION_TYPE"
prop "const array<string>@ ARGS"
prop "const timestamp SCRIPT_BUILD_TIME"

// String factory
strfactory "string"

// Default array type
defarray "array<T>"
